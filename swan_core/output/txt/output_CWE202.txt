<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getProcedures(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getResultSetHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDataSource: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getTableTypes()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxCharLiteralLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.DatabaseMetaData getInner()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getResultSetConcurrency()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.RowIdLifetime getRowIdLifetime()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: java.sql.DatabaseMetaData getMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getNumericFunctions()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateAsciiStream(java.lang.String,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.ResultSet executeQuery(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getFetchDirection()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setMaxFieldSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: long getLong(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setAsciiStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setAsciiStream(java.lang.String,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setObject(int,java.lang.Object,int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int getUpdateCount()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setBytes(java.lang.String,byte[])> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getSuperTypes(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setNull(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: byte getByte(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: long getLong(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int executeUpdate(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setFetchDirection(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateNull(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.net.URL getURL(java.lang.String)> ->_CWE202_
<com.teleatlas.global.common.util.dbunit.AbstractDatabaseDbTester: void setOperationListener(org.dbunit.IOperationListener)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setBoolean(int,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.math.BigDecimal getBigDecimal(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int executeUpdate(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: boolean getMoreResults(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getStringFunctions()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: byte[] getBytes(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Time getTime(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: int getHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxProcedureNameLength()> ->_CWE202_
<com.tomtom.cpu.coredb.mapdata.MapDataBaseMediator: void setModificationsCollection(com.tomtom.cpu.coredb.mapdata.ModificationType,java.util.Collection)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateString(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getSQLKeywords()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getSuperTypes(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int executeUpdate(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Time getTime(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getFunctions(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateAsciiStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getMaxFieldSize()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int executeUpdate(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.io.InputStream getUnicodeStream(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int getFetchSize()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: void setTransactionIsolation(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setShort(int,short)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.lang.String getString(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int getQueryTimeout()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int[] executeBatch()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.io.InputStream getBinaryStream(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setNull(int,int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: void setInner(java.sql.DatabaseMetaData)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getDatabaseProductName()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.math.BigDecimal getBigDecimal(int,int)> ->_CWE202_
<org.geotools.referencing.factory.epsg.AuthorityCodes: java.sql.ResultSet getSingle(java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: boolean getAutoCommit()> ->_CWE202_
<com.teleatlas.global.common.util.dbunit.AbstractDatabaseDbTester: void setTearDownOperation(org.dbunit.operation.DatabaseOperation)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getResultSetHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setByte(java.lang.String,byte)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Array getArray(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int getResultSetConcurrency()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxRowSize()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Array getArray(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void setFetchSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: void setHoldability(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setShort(java.lang.String,short)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setQueryTimeout(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setObject(int,java.lang.Object,int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: byte getByte(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setMaxRows(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setBytes(int,byte[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setAsciiStream(java.lang.String,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getFetchSize()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: long getLong(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getMaxFieldSize()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setAsciiStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: float getFloat(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setDouble(int,double)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Time getTime(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyCallableStatement: java.sql.ResultSet getGeneratedKeys()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int executeUpdate(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setShort(int,short)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setNull(int,int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setBytes(java.lang.String,byte[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: boolean getMoreResults(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Timestamp getTimestamp(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxTableNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getDriverMajorVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Timestamp getTimestamp(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.ResultSet getInner()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Date getDate(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxStatements()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setString(int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Date getDate(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int executeUpdate(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setMaxFieldSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Ref getRef(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyCallableStatement: java.sql.ResultSet executeQuery(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setEscapeProcessing(boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxColumnsInGroupBy()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateNull(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Date getDate(int)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyStatement: java.sql.ResultSet getResultSet()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateByte(int,byte)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDataSource: void setLogWriter(java.io.PrintWriter)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.io.InputStream getUnicodeStream(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getVersionColumns(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Clob getClob(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int getFetchDirection()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setBytes(int,byte[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.math.BigDecimal getBigDecimal(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setNull(java.lang.String,int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setBinaryStream(java.lang.String,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int getUpdateCount()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setObject(java.lang.String,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getIdentifierQuoteString()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getCatalogSeparator()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Blob getBlob(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getUDTs(java.lang.String,java.lang.String,java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int getFetchDirection()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setFetchDirection(int)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getUDTs(java.lang.String,java.lang.String,java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.DatabaseMetaData getInner()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getURL()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int getMaxFieldSize()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getProcedures(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: java.sql.ResultSetMetaData getMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setObject(java.lang.String,java.lang.Object,int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getProcedureTerm()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int getQueryTimeout()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getDatabaseMajorVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setInt(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void setFetchDirection(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int getFetchDirection()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getColumnPrivileges(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.io.InputStream getUnicodeStream(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int getResultSetHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Ref getRef(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setNull(int,int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxColumnsInTable()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateByte(java.lang.String,byte)> ->_CWE202_
<com.teleatlas.global.common.util.dbunit.AbstractDatabaseDbTester: void setDataSet(org.dbunit.dataset.IDataSet)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setBytes(int,byte[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Time getTime(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getSchemas()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setInt(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Ref getRef(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getNumericFunctions()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getQueryTimeout()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setShort(int,short)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxStatementLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxColumnNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.RowIdLifetime getRowIdLifetime()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: void setMaxFieldSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: boolean getMoreResults(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.net.URL getURL(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setNull(int,int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: void setCatalog(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: short getShort(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: int getConcurrency()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxBinaryLiteralLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.net.URL getURL(int)> ->_CWE202_
<org.geotools.metadata.sql.MetadataResult: java.lang.Object getObject(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getFetchSize()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int executeUpdate(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getTypeInfo()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.lang.String getString(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setBoolean(int,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: long getLong(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.lang.Object getObject(int,java.util.Map)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int getResultSetConcurrency()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: void setQueryTimeout(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setObject(int,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int executeUpdate(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Date getDate(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateBoolean(int,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int executeUpdate(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxStatements()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: long getLong(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.lang.Object getObject(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: boolean getMoreResults(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getDriverVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.lang.Object getObject(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.math.BigDecimal getBigDecimal(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: void setTransactionIsolation(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int getUpdateCount()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setBytes(int,byte[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: double getDouble(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int getFetchSize()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxCursorNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: void setEscapeProcessing(boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: double getDouble(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setString(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: java.sql.ResultSet executeQuery(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int getFetchSize()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.ResultSet executeQuery(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Clob getClob(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int getResultSetHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getResultSetConcurrency()> ->_CWE202_
<org.parosproxy.paros.db.Database: void setTableSessionUrl(org.parosproxy.paros.db.TableSessionUrl)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setMaxFieldSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.lang.String getString(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getInt(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getExportedKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getFetchDirection()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateObject(java.lang.String,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int getMaxFieldSize()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: int getInt(int)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyPreparedStatement: java.sql.ResultSet getGeneratedKeys()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setEscapeProcessing(boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.math.BigDecimal getBigDecimal(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int executeUpdate(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setString(int,java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getTableTypes()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Date getDate(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setAsciiStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setMaxFieldSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.math.BigDecimal getBigDecimal(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: void setCursorName(java.lang.String)> ->_CWE202_
<org.geotools.metadata.sql.MetadataSource: org.opengis.util.CodeList getCodeList(java.lang.Class,java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyPreparedStatement: java.sql.ResultSet executeQuery(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Date getDate(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getDatabaseProductName()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setObject(java.lang.String,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setObject(int,java.lang.Object,int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setUnicodeStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: byte getByte(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int executeUpdate(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateBytes(int,byte[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxIndexLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: boolean supportsResultSetConcurrency(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int getResultSetConcurrency()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int executeUpdate(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getTablePrivileges(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getFunctions(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: boolean othersUpdatesAreVisible(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Clob getClob(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Timestamp getTimestamp(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int executeUpdate(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setAsciiStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Timestamp getTimestamp(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getCatalogs()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setQueryTimeout(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setInt(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxColumnsInSelect()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getExportedKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setUnicodeStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: java.sql.Savepoint setSavepoint(java.lang.String)> ->_CWE202_
<com.tomtom.cpu.coredb.mapdata.MapDataBaseMediator: void setMutexProvider(com.tomtom.cpu.coredb.commons.utils.MutexProvider)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: int getTransactionIsolation()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int executeUpdate(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getVersionColumns(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setCursorName(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: java.sql.ResultSet getResultSet()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void setFetchDirection(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int getFetchDirection()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setLong(int,long)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getTimeDateFunctions()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateBoolean(int,boolean)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getAttributes(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setBoolean(java.lang.String,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.ResultSetMetaData getMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int executeUpdate(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: boolean supportsResultSetHoldability(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.lang.Object getObject(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getBestRowIdentifier(java.lang.String,java.lang.String,java.lang.String,int,boolean)> ->_CWE202_
<com.mchange.v2.c3p0.impl.C3P0PooledConnectionPoolManager: java.lang.String initializeAutomaticTestTable(java.lang.String,com.mchange.v2.c3p0.impl.DbAuth)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getUpdateCount()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setQueryTimeout(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getPseudoColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Array getArray(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getDatabaseMajorVersion()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getVersionColumns(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: void setFetchDirection(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: boolean getMoreResults(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.net.URL getURL(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getDriverMinorVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setByte(int,byte)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: void setMaxFieldSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: long getLong(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: float getFloat(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateFloat(int,float)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxStatementLength()> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getCatalogs()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getImportedKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int getResultSetConcurrency()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getQueryTimeout()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setCharacterStream(int,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxConnections()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: boolean getMoreResults(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxColumnNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getInt(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateBoolean(java.lang.String,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.lang.String getString(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: int getInt(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setBoolean(int,boolean)> ->_CWE202_
<org.geotools.referencing.factory.epsg.AuthorityCodes: java.sql.ResultSet getAll()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: void setReadOnly(boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setByte(int,byte)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateFloat(java.lang.String,float)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.io.InputStream getBinaryStream(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Time getTime(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setString(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.lang.String getString(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getProcedureColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: boolean getBoolean(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDataSource: int getLoginTimeout()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateDouble(java.lang.String,double)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: java.sql.ResultSetMetaData getMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int executeUpdate(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int executeUpdate()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int executeUpdate(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: void setEscapeProcessing(boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int getMaxFieldSize()> ->_CWE202_
<org.parosproxy.paros.db.Database: void setTableAlert(org.parosproxy.paros.db.TableAlert)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setFetchDirection(int)> ->_CWE202_
<org.geotools.metadata.sql.MetadataSource: java.lang.Object getValue(java.lang.Class,java.lang.reflect.Method,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: byte getByte(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setUnicodeStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int executeUpdate(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: java.sql.ResultSet executeQuery(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: double getDouble(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: byte getByte(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Array getArray(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getDriverVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Ref getRef(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getFunctionColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setNull(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.lang.Object getObject(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Date getDate(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: float getFloat(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Time getTime(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.io.InputStream getUnicodeStream(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setCursorName(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setObject(java.lang.String,java.lang.Object,int,int)> ->_CWE202_
<org.parosproxy.paros.db.Database: void setDatabaseServer(org.parosproxy.paros.db.DatabaseServer)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getJDBCMajorVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getClientInfoProperties()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getClientInfoProperties()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateDouble(int,double)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setInt(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int executeUpdate()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: long getLong(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setURL(int,java.net.URL)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Blob getBlob(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxCatalogNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.math.BigDecimal getBigDecimal(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getUserName()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Date getDate(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: void setTypeMap(java.util.Map)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.io.InputStream getBinaryStream(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateFloat(int,float)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setCharacterStream(java.lang.String,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Timestamp getTimestamp(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getExtraNameCharacters()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateByte(int,byte)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Array getArray(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Timestamp getTimestamp(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateNull(int)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getUpdateCount()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int getQueryTimeout()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setEscapeProcessing(boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateDouble(int,double)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: java.util.Map getTypeMap()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: void setFetchDirection(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int getResultSetHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.math.BigDecimal getBigDecimal(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: double getDouble(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setShort(java.lang.String,short)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setDouble(int,double)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateAsciiStream(java.lang.String,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int executeUpdate()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int executeUpdate(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.ResultSetMetaData getMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateFloat(java.lang.String,float)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: boolean getBoolean(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getSQLStateType()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getInt(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setEscapeProcessing(boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxConnections()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getSystemFunctions()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateAsciiStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setUnicodeStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.io.InputStream getBinaryStream(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Clob getClob(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDataSource: java.io.PrintWriter getLogWriter()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setObject(int,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int getResultSetHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setBoolean(int,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Clob getClob(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getSuperTables(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setCharacterStream(int,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.ResultSet getInner()> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getTypeInfo()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.math.BigDecimal getBigDecimal(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: int getInt(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getInt(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getTablePrivileges(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateBoolean(java.lang.String,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int getQueryTimeout()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int executeUpdate(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.math.BigDecimal getBigDecimal(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: java.lang.String getCatalog()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.lang.Object getObject(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setNull(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: void setCursorName(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxTablesInSelect()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: float getFloat(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: double getDouble(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateInt(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getPrimaryKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int getUpdateCount()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setCursorName(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int getFetchSize()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxColumnsInIndex()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setFetchDirection(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getCatalogs()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getCrossReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setQueryTimeout(int)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateBytes(int,byte[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getTypeInfo()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: void setQueryTimeout(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Clob getClob(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxSchemaNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: boolean getBoolean(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int executeUpdate(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setBoolean(java.lang.String,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Timestamp getTimestamp(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.lang.Object getObject(int,java.util.Map)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: boolean getBoolean(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int executeUpdate(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int executeUpdate(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateNull(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: int getConcurrency()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.math.BigDecimal getBigDecimal(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setShort(int,short)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.net.URL getURL(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Blob getBlob(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getBestRowIdentifier(java.lang.String,java.lang.String,java.lang.String,int,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getSchemas()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: float getFloat(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: boolean execute()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: byte[] getBytes(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getExportedKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setNull(java.lang.String,int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.math.BigDecimal getBigDecimal(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.net.URL getURL(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setURL(int,java.net.URL)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: boolean ownUpdatesAreVisible(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getDefaultTransactionIsolation()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDataSource: void setLoginTimeout(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Ref getRef(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getSchemas(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Array getArray(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Ref getRef(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateByte(java.lang.String,byte)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setInt(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setCursorName(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setInt(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Array getArray(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getProcedureColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v1.db.sql.ConnectionBundlePoolImpl: void checkinBundle(com.mchange.v1.db.sql.ConnectionBundle)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateObject(java.lang.String,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int getMaxFieldSize()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: java.sql.ResultSet getResultSet()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setCharacterStream(java.lang.String,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setByte(java.lang.String,byte)> ->_CWE202_
<com.teleatlas.global.common.util.dbunit.AbstractDatabaseDbTester: void closeConnection(org.dbunit.database.IDatabaseConnection)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxProcedureNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: java.sql.ResultSet getResultSet()> ->_CWE202_
<org.parosproxy.paros.db.Database: void setTableTag(org.parosproxy.paros.db.TableTag)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: java.util.Map getTypeMap()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setBinaryStream(java.lang.String,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setURL(int,java.net.URL)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: float getFloat(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setDouble(int,double)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: byte[] getBytes(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: boolean execute(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: int getFetchDirection()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateBinaryStream(java.lang.String,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: byte getByte(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.net.URL getURL(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getColumnPrivileges(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setCharacterStream(int,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateBinaryStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setBinaryStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: boolean supportsResultSetType(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getResultSetType()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateLong(int,long)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.lang.String getString(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setBigDecimal(int,java.math.BigDecimal)> ->_CWE202_
<org.geotools.metadata.sql.MetadataSource: java.lang.Class getElementType(java.lang.String,java.lang.reflect.Method)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: boolean getMoreResults()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: java.sql.Savepoint setSavepoint(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Time getTime(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: boolean supportsResultSetConcurrency(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: java.sql.ResultSet getGeneratedKeys()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getColumnPrivileges(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setMaxRows(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getResultSetType()> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: boolean execute(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: boolean getBoolean(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.io.InputStream getAsciiStream(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: boolean execute()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.math.BigDecimal getBigDecimal(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: double getDouble(int)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getSuperTables(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateCharacterStream(java.lang.String,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateObject(java.lang.String,java.lang.Object,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: boolean getMoreResults()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: int getFetchSize()> ->_CWE202_
<org.geotools.metadata.sql.MetadataResult: java.lang.String getString(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.lang.String getCursorName()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int executeUpdate(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Time getTime(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getResultSetHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Time getTime(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateCharacterStream(int,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getFunctions(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: int getTransactionIsolation()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyCallableStatement: java.sql.ResultSet getResultSet()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: void setFetchSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getPrimaryKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.ResultSet getResultSet()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: void setAutoCommit(boolean)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyStatement: java.sql.ResultSet getGeneratedKeys()> ->_CWE202_
<com.mchange.v1.db.sql.CBPCursor: void <init>(java.sql.ResultSet,com.mchange.v1.db.sql.ConnectionBundle,com.mchange.v1.db.sql.ConnectionBundlePool)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getSchemas(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Timestamp getTimestamp(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxTableNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Timestamp getTimestamp(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setBigDecimal(int,java.math.BigDecimal)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: boolean execute(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: short getShort(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setFloat(int,float)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getCatalogs()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Blob getBlob(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Ref getRef(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getBestRowIdentifier(java.lang.String,java.lang.String,java.lang.String,int,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: java.sql.ResultSet executeQuery()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getProcedureColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: short getShort(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: byte[] getBytes(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: byte[] getBytes(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int getResultSetType()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int getMaxRows()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateBinaryStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getSuperTypes(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyStatement: java.sql.ResultSet executeQuery(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getTablePrivileges(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setObject(int,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: void setFetchSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.ResultSet getGeneratedKeys()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDataSource: int getLoginTimeout()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxColumnsInSelect()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getExportedKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.tomtom.cpu.coredb.mapdata.MapDataBaseMediator: java.util.Collection getModificationsCollection(com.tomtom.cpu.coredb.mapdata.MapData,com.tomtom.cpu.coredb.mapdata.ModificationType)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int getMaxRows()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateBigDecimal(int,java.math.BigDecimal)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setMaxRows(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: void setInner(java.sql.DatabaseMetaData)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getProcedureColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getSchemas()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setLong(java.lang.String,long)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateLong(int,long)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: boolean getMoreResults()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: boolean execute(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: java.sql.ResultSet executeQuery()> ->_CWE202_
<com.tomtom.cpu.coredb.mapdata.MapDataBaseMediator: void setCohesionType(com.tomtom.cpu.coredb.mapdata.MapData$MapDataCohesionType)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: boolean execute(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.lang.String getString(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int getResultSetType()> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getSchemas()> ->_CWE202_
<org.geotools.metadata.sql.MetadataResult: java.sql.ResultSet getResultSet(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: void setAutoCommit(boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: boolean execute()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setDouble(java.lang.String,double)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxColumnsInGroupBy()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: boolean execute(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setObject(java.lang.String,java.lang.Object,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: boolean execute()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getDriverMajorVersion()> ->_CWE202_
<com.tomtom.cpu.coredb.mapdata.MapDataBaseMediator: void setModificationsCollection(com.tomtom.cpu.coredb.mapdata.MapData,com.tomtom.cpu.coredb.mapdata.ModificationType,java.util.Collection)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getIdentifierQuoteString()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: void setMaxRows(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getCatalogTerm()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateString(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setDouble(java.lang.String,double)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setByte(int,byte)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int getMaxRows()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.ResultSet getResultSet()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Time getTime(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.lang.Object getObject(int,java.util.Map)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.lang.Object getObject(java.lang.String,java.util.Map)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int getResultSetType()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getDefaultTransactionIsolation()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateBinaryStream(java.lang.String,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.lang.Object getObject(java.lang.String,java.util.Map)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getPrimaryKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getCrossReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateBigDecimal(java.lang.String,java.math.BigDecimal)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxColumnsInIndex()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setFloat(java.lang.String,float)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Date getDate(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getExtraNameCharacters()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setURL(int,java.net.URL)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.ResultSet getGeneratedKeys()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getCrossReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateString(int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: boolean execute(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: int getRow()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: boolean getMoreResults()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: void setTypeMap(java.util.Map)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: boolean execute(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void setFetchSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateLong(java.lang.String,long)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.io.Reader getCharacterStream(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getDriverName()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDataSource: void setLoginTimeout(int)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getProcedures(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: boolean execute(java.lang.String)> ->_CWE202_
<com.mchange.v1.db.sql.ConnectionBundlePoolBean: void checkinBundle(com.mchange.v1.db.sql.ConnectionBundle)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxSchemaNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: boolean ownUpdatesAreVisible(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])> ->_CWE202_
<org.geotools.metadata.sql.MetadataResult: java.lang.String getString(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getSchemas(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: java.sql.DatabaseMetaData getMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getResultSetHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int[] executeBatch()> ->_CWE202_
<org.parosproxy.paros.db.Database: void setTableScan(org.parosproxy.paros.db.TableScan)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setFetchSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.ResultSetMetaData getMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxColumnsInOrderBy()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setObject(int,java.lang.Object,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getSuperTables(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Blob getBlob(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterConnection: java.lang.String getCatalog()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getFunctionColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setNull(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setCharacterStream(int,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int executeUpdate()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getPrimaryKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Blob getBlob(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: boolean updatesAreDetected(int)> ->_CWE202_
<org.geotools.metadata.sql.MetadataResult: int getInt(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getClientInfoProperties()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getDatabaseProductVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setFloat(int,float)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: short getShort(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getSystemFunctions()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getDatabaseMinorVersion()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyPreparedStatement: java.sql.ResultSet getResultSet()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getPseudoColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setNull(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Timestamp getTimestamp(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateObject(int,java.lang.Object,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setBinaryStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: short getShort(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Date getDate(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getVersionColumns(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Date getDate(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: byte getByte(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: int getHoldability()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getURL()> ->_CWE202_
<org.geotools.metadata.sql.MetadataSource: java.lang.Object getEntry(java.lang.Class,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setURL(java.lang.String,java.net.URL)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Date getDate(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.teleatlas.global.common.util.dbunit.AbstractDatabaseDbTester: void setSetUpOperation(org.dbunit.operation.DatabaseOperation)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.io.Reader getCharacterStream(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: boolean execute(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setFetchSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Statement getStatement()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateObject(int,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getSQLStateType()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getBestRowIdentifier(java.lang.String,java.lang.String,java.lang.String,int,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Array getArray(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.lang.Object getObject(java.lang.String,java.util.Map)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getProcedureTerm()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: int[] executeBatch()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxTablesInSelect()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxBinaryLiteralLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.lang.Object getObject(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: void setHoldability(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: boolean execute(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setString(int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: boolean execute(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateShort(java.lang.String,short)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: double getDouble(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: byte[] getBytes(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.math.BigDecimal getBigDecimal(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.io.InputStream getAsciiStream(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDataSource: void setLogWriter(java.io.PrintWriter)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setObject(int,java.lang.Object,int)> ->_CWE202_
<com.tomtom.cpu.coredb.mapdata.MapDataBaseMediator: void setAttributeFetchingStrategy(com.tomtom.cpu.coredb.mapdata.lazyload.AttributeFetchingStrategy)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateInt(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getCatalogTerm()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: float getFloat(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Time getTime(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxUserNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Timestamp getTimestamp(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getAttributes(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setBigDecimal(java.lang.String,java.math.BigDecimal)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: int getFetchSize()> ->_CWE202_
<com.teleatlas.global.common.util.SQLUtil: void errorHandler(org.apache.log4j.Logger,long,java.lang.Exception)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getSearchStringEscape()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDataSource: java.sql.Connection getConnection()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: int getMaxRows()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: boolean othersUpdatesAreVisible(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setBigDecimal(int,java.math.BigDecimal)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateBigDecimal(int,java.math.BigDecimal)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.lang.String getString(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getDriverName()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setObject(java.lang.String,java.lang.Object,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.lang.String getCursorName()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.lang.Object getObject(java.lang.String,java.util.Map)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: boolean execute(java.lang.String,int)> ->_CWE202_
<com.teleatlas.global.common.util.dbunit.AbstractDatabaseDbTester: void executeOperation(org.dbunit.operation.DatabaseOperation,com.teleatlas.global.common.util.dbunit.AbstractDatabaseDbTester$OperationType)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxColumnsInTable()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Time getTime(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setBinaryStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: boolean getBoolean(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateCharacterStream(java.lang.String,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxRowSize()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: int getRow()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.io.Reader getCharacterStream(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.C3P0PooledConnectionPoolManager: void ensureFirstConnectionAcquisition(com.mchange.v2.c3p0.impl.DbAuth)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: byte getByte(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateCharacterStream(int,java.io.Reader,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getTypeInfo()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: java.sql.ResultSet executeQuery(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateLong(java.lang.String,long)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getImportedKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getUDTs(java.lang.String,java.lang.String,java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: java.sql.ResultSet getGeneratedKeys()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateBytes(java.lang.String,byte[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: boolean execute(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: int getResultSetType()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: short getShort(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setLong(java.lang.String,long)> ->_CWE202_
<com.tomtom.cpu.coredb.mapdata.MapDataBaseMediator: void setLoadingStrategy(com.tomtom.cpu.coredb.mapdata.lazyload.LoadingStrategy)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateShort(int,short)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: boolean execute(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getSchemaTerm()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxUserNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateBigDecimal(java.lang.String,java.math.BigDecimal)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getFunctionColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: int getType()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setBigDecimal(java.lang.String,java.math.BigDecimal)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateInt(java.lang.String,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxCatalogNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: int[] executeBatch()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: boolean supportsResultSetType(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Blob getBlob(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getUserName()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.ResultSet executeQuery()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setByte(int,byte)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getCrossReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: int getInt(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Date getDate(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.lang.Object getObject(int,java.util.Map)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateBytes(java.lang.String,byte[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.ResultSetMetaData getMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: boolean getMoreResults()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getJDBCMinorVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setLong(int,long)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateShort(int,short)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setURL(java.lang.String,java.net.URL)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: java.sql.ResultSet getGeneratedKeys()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: void setMaxRows(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: int getType()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateObject(int,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: int getFetchDirection()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setObject(int,java.lang.Object,int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: boolean getMoreResults()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: double getDouble(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: java.sql.ResultSet executeQuery(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setLong(int,long)> ->_CWE202_
<com.tomtom.cpu.coredb.mapdata.MapDataBaseMediator: java.util.Collection getModificationsCollection(com.tomtom.cpu.coredb.mapdata.ModificationType)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getTableTypes()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterStatement: java.sql.ResultSet getResultSet()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setFetchSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setFloat(int,float)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: void setCatalog(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxCharLiteralLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Statement getStatement()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getCatalogSeparator()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getPseudoColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<org.geotools.metadata.sql.MetadataResult: java.lang.Object getArray(java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: boolean supportsResultSetHoldability(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getSearchStringEscape()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Date getDate(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Clob getClob(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setObject(int,java.lang.Object,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateDouble(java.lang.String,double)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setObject(int,java.lang.Object,int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: java.sql.ResultSet getGeneratedKeys()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: short getShort(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: boolean getBoolean(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxIndexLength()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getTimeDateFunctions()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Date getDate(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.io.InputStream getAsciiStream(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDataSource: java.io.PrintWriter getLogWriter()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setNull(int,int)> ->_CWE202_
<com.mchange.v1.db.sql.CBPUtils: void attemptCheckin(com.mchange.v1.db.sql.ConnectionBundle,com.mchange.v1.db.sql.ConnectionBundlePool)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.lang.Object getObject(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.io.InputStream getAsciiStream(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Timestamp getTimestamp(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getImportedKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Ref getRef(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: short getShort(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setFloat(java.lang.String,float)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Time getTime(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateInt(int,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setString(int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: long getLong(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.lang.Object getObject(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getStringFunctions()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setBigDecimal(int,java.math.BigDecimal)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: boolean execute(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getJDBCMinorVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getDatabaseProductVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: float getFloat(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.io.Reader getCharacterStream(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: boolean updatesAreDetected(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: boolean execute(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Time getTime(int,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.net.URL getURL(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getTablePrivileges(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.lang.String getSchemaTerm()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: boolean execute(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: boolean execute(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: void updateString(int,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setMaxRows(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setFetchSize(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: boolean execute(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: boolean getBoolean(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getColumnPrivileges(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: void setObject(int,java.lang.Object)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: boolean execute(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getMaxCursorNameLength()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: boolean execute(java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: byte[] getBytes(int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateObject(java.lang.String,java.lang.Object,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Clob getClob(int)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getDatabaseMinorVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int getMaxRows()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setBinaryStream(int,java.io.InputStream,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.lang.String getSQLKeywords()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getJDBCMajorVersion()> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getImportedKeys(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: void setFloat(int,float)> ->_CWE202_
<com.mchange.v2.c3p0.impl.SetManagedDatabaseMetaData: java.sql.ResultSet getTableTypes()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateObject(int,java.lang.Object,int)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: java.sql.Date getDate(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterPreparedStatement: void setLong(int,long)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.ResultSet executeQuery()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.Blob getBlob(java.lang.String)> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getProcedures(java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterDatabaseMetaData: int getDriverMinorVersion()> ->_CWE202_
<com.mchange.v2.sql.filter.FilterResultSet: java.sql.Time getTime(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: int getMaxColumnsInOrderBy()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int getMaxRows()> ->_CWE202_
<com.mchange.v2.c3p0.impl.NewProxyDatabaseMetaData: java.sql.ResultSet getUDTs(java.lang.String,java.lang.String,java.lang.String,int[])> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: boolean getAutoCommit()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: int[] executeBatch()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: byte[] getBytes(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.Time getTime(java.lang.String,java.util.Calendar)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: int[] executeBatch()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: void setDouble(int,double)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterConnection: void setReadOnly(boolean)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: boolean execute(java.lang.String)> ->_CWE202_
<com.mchange.v2.sql.filter.FilterCallableStatement: boolean execute(java.lang.String,java.lang.String[])> ->_CWE202_
<com.mchange.v2.sql.filter.FilterStatement: java.sql.SQLWarning getWarnings()> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterResultSet: void updateShort(java.lang.String,short)> ->_CWE202_
<com.mchange.v2.sql.filter.SynchronizedFilterDatabaseMetaData: java.sql.ResultSet getAttributes(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE202_
