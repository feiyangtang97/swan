<org.apache.commons.io.output.XmlStreamWriter: void detectEncoding(char[],int,int)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setLineWidth(int)> ->_CWE538_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(char[])> ->_CWE538_
<org.dom4j.io.OutputFormat: void setAttributeQuoteCharacter(char)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setIndent(java.lang.String)> ->_CWE538_
<org.jdom.output.Format: org.jdom.output.Format setExpandEmptyElements(boolean)> ->_CWE538_
<org.jdom.output.XMLOutputter: void printContentRange(java.io.Writer,java.util.List,int,int,int,org.jdom.output.XMLOutputter$NamespaceStack)> ->_CWE538_
<javax.servlet.ServletOutputStream: void print(double)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setMediaType(java.lang.String)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setPadText(boolean)> ->_CWE538_
<org.jdom.output.SAXOutputter: void setProperty(java.lang.String,java.lang.Object)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setNewLineAfterNTags(int)> ->_CWE538_
<org.jdom.output.NamespaceStack: java.lang.String getURI(java.lang.String)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setSuppressDeclaration(boolean)> ->_CWE538_
<com.google.common.io.FileBackedOutputStream: com.google.common.io.InputSupplier getSupplier()> ->_CWE538_
<org.apache.commons.io.output.ProxyWriter: void write(java.lang.String)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setStandalone(boolean)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setIndenting(boolean)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setNewLineAfterDeclaration(boolean)> ->_CWE538_
<javax.servlet.ServletOutputStream: void print(float)> ->_CWE538_
<org.dom4j.io.OutputFormat: java.lang.String getEncoding()> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeUTF(java.lang.String)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setAllowJavaNames(boolean)> ->_CWE538_
<org.jdom.output.XMLOutputter: void output(org.jdom.Comment,java.io.Writer)> ->_CWE538_
<org.apache.commons.io.output.LockableFileWriter: void createLock()> ->_CWE538_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(int)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setNonEscapingElements(java.lang.String[])> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeByte(int)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setOmitXMLDeclaration(boolean)> ->_CWE538_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(java.lang.String,int,int)> ->_CWE538_
<org.jdom.output.SAXOutputter: java.lang.String getAttributeTypeName(int)> ->_CWE538_
<org.apache.commons.io.output.ThresholdingOutputStream: void write(int)> ->_CWE538_
<org.jdom.output.Format: org.jdom.output.Format setTextMode(org.jdom.output.Format$TextMode)> ->_CWE538_
<org.jdom.output.DOMOutputter: org.w3c.dom.Document createDOMDocument(org.jdom.DocType)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setEncoding(java.lang.String)> ->_CWE538_
<org.apache.commons.io.output.TeeOutputStream: void write(byte[])> ->_CWE538_
<org.apache.commons.compress.archivers.tar.TarArchiveOutputStream: void setLongFileMode(int)> ->_CWE538_
<org.apache.commons.io.output.WriterOutputStream: void write(byte[])> ->_CWE538_
<org.tukaani.xz.XZOutputStream: void encodeStreamFlags(byte[],int)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setNewlines(boolean)> ->_CWE538_
<javax.servlet.ServletOutputStream: void println(double)> ->_CWE538_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(java.lang.String)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setVersion(java.lang.String)> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeShort(int)> ->_CWE538_
<org.jdom.output.XMLOutputter: void output(org.jdom.Element,java.io.Writer)> ->_CWE538_
<org.apache.commons.io.output.StringBuilderWriter: java.lang.StringBuilder getBuilder()> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeChar(int)> ->_CWE538_
<org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream)> ->_CWE538_
<org.jdom.output.XMLOutputter: void output(org.jdom.EntityRef,java.io.Writer)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: void setUseLanguageEncodingFlag(boolean)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: void setUseZip64(org.apache.commons.compress.archivers.zip.Zip64Mode)> ->_CWE538_
<org.jdom.output.XMLOutputter: void outputElementContent(org.jdom.Element,java.io.Writer)> ->_CWE538_
<org.apache.http.impl.io.ChunkedOutputStream: void flushCacheWithAppend(byte[],int,int)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setPreserveSpace(boolean)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setLineSeparator(java.lang.String)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField getZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)> ->_CWE538_
<org.apache.commons.compress.archivers.tar.TarArchiveOutputStream: void setBigNumberMode(int)> ->_CWE538_
<org.jdom.output.SAXOutputter: void setReportNamespaceDeclarations(boolean)> ->_CWE538_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(java.lang.String)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: void setMethod(int)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setEncoding(java.lang.String)> ->_CWE538_
<org.jdom.output.Format: org.jdom.output.Format setLineSeparator(java.lang.String)> ->_CWE538_
<org.jdom.output.SAXOutputter: void setFeature(java.lang.String,boolean)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setOmitDocumentType(boolean)> ->_CWE538_
<org.apache.commons.io.output.ProxyWriter: void write(int)> ->_CWE538_
<com.google.common.io.CountingOutputStream: void write(int)> ->_CWE538_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(char[],int,int)> ->_CWE538_
<org.apache.commons.io.output.LockableFileWriter: void write(char[],int,int)> ->_CWE538_
<org.jdom.output.SAXOutputter: boolean getFeature(java.lang.String)> ->_CWE538_
<org.jboss.resteasy.plugins.providers.StreamingOutputProvider: long getSize(javax.ws.rs.core.StreamingOutput,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE538_
<javax.servlet.ServletOutputStream: void print(int)> ->_CWE538_
<org.apache.commons.io.output.DeferredFileOutputStream: java.io.File getFile()> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeBoolean(boolean)> ->_CWE538_
<javax.servlet.ServletOutputStream: void println(float)> ->_CWE538_
<org.jdom.output.DOMOutputter: org.w3c.dom.Document output(org.jdom.Document)> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeInt(int)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setOmitEncoding(boolean)> ->_CWE538_
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)> ->_CWE538_
<org.jdom.output.SAXOutputter: void setReportDTDEvents(boolean)> ->_CWE538_
<org.apache.commons.io.output.DeferredFileOutputStream: void writeTo(java.io.OutputStream)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: java.nio.ByteBuffer getName(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)> ->_CWE538_
<org.zkoss.io.WriterOutputStream: void write(int)> ->_CWE538_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void handleEncodingResult(java.nio.charset.CoderResult)> ->_CWE538_
<org.jdom.output.XMLOutputter: java.lang.String escapeAttributeEntities(java.lang.String)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setTrimText(boolean)> ->_CWE538_
<org.apache.commons.compress.archivers.tar.TarArchiveOutputStream: void setAddPaxHeadersForNonAsciiNames(boolean)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: org.apache.commons.compress.archivers.zip.Zip64Mode getEffectiveZip64Mode(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setPreserveEmptyAttributes(boolean)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: void setEncoding(java.lang.String)> ->_CWE538_
<org.apache.commons.io.output.ProxyWriter: void write(java.lang.String,int,int)> ->_CWE538_
<org.apache.commons.compress.archivers.ar.ArArchiveOutputStream: void setLongFileMode(int)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setIndentSize(int)> ->_CWE538_
<org.apache.commons.io.output.ThresholdingOutputStream: void write(byte[],int,int)> ->_CWE538_
<com.vividsolutions.jts.io.OutputStreamOutStream: void write(byte[],int)> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void write(byte[],int,int)> ->_CWE538_
<com.google.common.io.FileBackedOutputStream: void write(byte[])> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setCDataElements(java.lang.String[])> ->_CWE538_
<org.jdom.output.DOMOutputter: java.lang.String getXmlnsTagFor(org.jdom.Namespace)> ->_CWE538_
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[])> ->_CWE538_
<com.google.common.io.CountingOutputStream: void write(byte[],int,int)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setIndent(int)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setDoctype(java.lang.String,java.lang.String)> ->_CWE538_
<org.jdom.output.XMLOutputter: void output(org.jdom.CDATA,java.io.Writer)> ->_CWE538_
<org.dom4j.io.OutputFormat: char getAttributeQuoteCharacter()> ->_CWE538_
<org.tukaani.xz.LZMA2OutputStream: int getMemoryUsage(org.tukaani.xz.LZMA2Options)> ->_CWE538_
<org.jdom.output.Format: void setIgnoreTrAXEscapingPIs(boolean)> ->_CWE538_
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[])> ->_CWE538_
<org.apache.commons.io.output.LockableFileWriter: java.io.Writer initWriter(java.io.File,java.lang.String,boolean)> ->_CWE538_
<org.jdom.output.SAXOutputter: void setContentHandler(org.xml.sax.ContentHandler)> ->_CWE538_
<org.apache.commons.io.output.CountingOutputStream: long getByteCount()> ->_CWE538_
<org.jdom.output.SAXOutputter: void setDTDHandler(org.xml.sax.DTDHandler)> ->_CWE538_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[],int,int)> ->_CWE538_
<org.jdom.output.SAXOutputter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)> ->_CWE538_
<org.apache.commons.io.output.TeeOutputStream: void write(byte[],int,int)> ->_CWE538_
<org.zkoss.io.WriterOutputStream: void write(byte[],int,int)> ->_CWE538_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)> ->_CWE538_
<org.apache.commons.io.output.ProxyOutputStream: void write(byte[],int,int)> ->_CWE538_
<org.jdom.output.XMLOutputter: void output(java.util.List,java.io.Writer)> ->_CWE538_
<javax.servlet.ServletOutputStream: void println(long)> ->_CWE538_
<org.apache.commons.io.output.ProxyWriter: void write(char[],int,int)> ->_CWE538_
<org.apache.commons.io.output.ByteArrayOutputStream: void writeTo(java.io.OutputStream)> ->_CWE538_
<javax.servlet.ServletOutputStream: void println(java.lang.String)> ->_CWE538_
<org.jdom.output.SAXOutputter: void setEntityResolver(org.xml.sax.EntityResolver)> ->_CWE538_
<org.apache.commons.io.output.ThresholdingOutputStream: void write(byte[])> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setMethod(java.lang.String)> ->_CWE538_
<org.jdom.output.SAXOutputter: void setDeclHandler(org.xml.sax.ext.DeclHandler)> ->_CWE538_
<org.apache.commons.io.output.ByteArrayOutputStream: int write(java.io.InputStream)> ->_CWE538_
<org.apache.commons.io.output.CountingOutputStream: int getCount()> ->_CWE538_
<com.google.common.io.FileBackedOutputStream: java.io.File getFile()> ->_CWE538_
<org.jdom.output.SAXOutputter: void setErrorHandler(org.xml.sax.ErrorHandler)> ->_CWE538_
<org.apache.http.impl.io.ContentLengthOutputStream: void write(int)> ->_CWE538_
<com.google.common.io.FileBackedOutputStream: void write(int)> ->_CWE538_
<javax.servlet.ServletOutputStream: void print(boolean)> ->_CWE538_
<javax.servlet.ServletOutputStream: void println(int)> ->_CWE538_
<org.apache.http.impl.io.IdentityOutputStream: void write(int)> ->_CWE538_
<org.dom4j.io.OutputFormat: java.lang.String getIndent()> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: void setFallbackToUTF8(boolean)> ->_CWE538_
<org.jdom.output.SAXOutputter: java.lang.Object getProperty(java.lang.String)> ->_CWE538_
<javax.servlet.ServletOutputStream: void print(long)> ->_CWE538_
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)> ->_CWE538_
<org.jdom.output.Format: org.jdom.output.Format setIndent(java.lang.String)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setExpandEmptyElements(boolean)> ->_CWE538_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> ->_CWE538_
<org.jdom.output.XMLOutputter: void output(org.jdom.ProcessingInstruction,java.io.Writer)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setXHTML(boolean)> ->_CWE538_
<org.jdom.output.XMLOutputter: void printElementNamespace(java.io.Writer,org.jdom.Element,org.jdom.output.XMLOutputter$NamespaceStack)> ->_CWE538_
<org.zkoss.io.WriterOutputStream: void write(byte[])> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setEncoding(org.apache.xml.serialize.EncodingInfo)> ->_CWE538_
<org.apache.commons.io.output.LockableFileWriter: void write(int)> ->_CWE538_
<org.apache.commons.io.output.ProxyOutputStream: void write(int)> ->_CWE538_
<org.apache.xml.serialize.OutputFormat: void setOmitComments(boolean)> ->_CWE538_
<org.apache.commons.io.output.DemuxOutputStream: void write(int)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: void setCreateUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy)> ->_CWE538_
<org.jdom.output.Format: org.jdom.output.Format setOmitEncoding(boolean)> ->_CWE538_
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[])> ->_CWE538_
<org.jboss.resteasy.plugins.providers.StreamingOutputProvider: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: void setDefaults(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)> ->_CWE538_
<org.jdom.output.XMLOutputter: void output(org.jdom.DocType,java.io.Writer)> ->_CWE538_
<com.google.common.io.CountingOutputStream: long getCount()> ->_CWE538_
<org.jdom.output.XMLOutputter: java.lang.String escapeElementEntities(java.lang.String)> ->_CWE538_
<org.jdom.output.Format: org.jdom.output.Format setOmitDeclaration(boolean)> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeLong(long)> ->_CWE538_
<org.apache.commons.io.output.DeferredFileOutputStream: byte[] getData()> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeBytes(java.lang.String)> ->_CWE538_
<org.apache.commons.io.output.ThresholdingOutputStream: long getByteCount()> ->_CWE538_
<org.apache.commons.io.output.XmlStreamWriter: void write(char[],int,int)> ->_CWE538_
<org.jdom.output.JDOMLocator: void setNode(java.lang.Object)> ->_CWE538_
<org.tukaani.xz.LZMA2OutputStream: int getExtraSizeBefore(int)> ->_CWE538_
<javax.servlet.ServletOutputStream: void println(char)> ->_CWE538_
<org.jdom.output.Format: org.jdom.output.Format setEncoding(java.lang.String)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setIndent(boolean)> ->_CWE538_
<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeChars(java.lang.String)> ->_CWE538_
<org.dom4j.io.OutputFormat: void setLineSeparator(java.lang.String)> ->_CWE538_
<javax.servlet.ServletOutputStream: void println(boolean)> ->_CWE538_
<org.dom4j.io.OutputFormat: int getNewLineAfterNTags()> ->_CWE538_
<org.jdom.output.XMLOutputter: void setFormat(org.jdom.output.Format)> ->_CWE538_
<org.apache.commons.io.output.LockableFileWriter: void write(java.lang.String)> ->_CWE538_
<org.apache.commons.io.output.TeeOutputStream: void write(int)> ->_CWE538_
<javax.servlet.ServletOutputStream: void print(char)> ->_CWE538_
<com.google.common.io.FileBackedOutputStream: void write(byte[],int,int)> ->_CWE538_
<org.dom4j.io.OutputFormat: int parseOptions(java.lang.String[],int)> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeDouble(double)> ->_CWE538_
<org.jdom.output.XMLOutputter: void output(org.jdom.Text,java.io.Writer)> ->_CWE538_
<org.apache.commons.io.output.XmlStreamWriter: java.lang.String getDefaultEncoding()> ->_CWE538_
<org.apache.commons.io.output.LockableFileWriter: void write(java.lang.String,int,int)> ->_CWE538_
<org.apache.commons.io.output.ProxyOutputStream: void write(byte[])> ->_CWE538_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[])> ->_CWE538_
<org.dom4j.io.OutputFormat: java.lang.String getLineSeparator()> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: void setComment(java.lang.String)> ->_CWE538_
<org.jdom.output.XMLOutputter: void printAdditionalNamespaces(java.io.Writer,org.jdom.Element,org.jdom.output.XMLOutputter$NamespaceStack)> ->_CWE538_
<com.google.common.io.LittleEndianDataOutputStream: void writeFloat(float)> ->_CWE538_
<org.tukaani.xz.XZOutputStream: void updateFilters(org.tukaani.xz.FilterOptions)> ->_CWE538_
<org.apache.commons.io.output.DeferredFileOutputStream: java.io.OutputStream getStream()> ->_CWE538_
<org.apache.commons.io.output.XmlStreamWriter: java.lang.String getEncoding()> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: void setLevel(int)> ->_CWE538_
<com.google.common.io.FileBackedOutputStream: void update(int)> ->_CWE538_
<org.jdom.output.Format: org.jdom.output.Format setEscapeStrategy(org.jdom.output.EscapeStrategy)> ->_CWE538_
<org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream: org.apache.commons.compress.archivers.zip.ZipEncoding getEntryEncoding(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)> ->_CWE538_
<org.apache.commons.io.output.WriterOutputStream: void write(int)> ->_CWE538_
<org.apache.commons.io.output.ProxyWriter: void write(char[])> ->_CWE538_
<org.apache.commons.io.output.ThresholdingOutputStream: int getThreshold()> ->_CWE538_
<org.apache.commons.io.output.LockableFileWriter: void write(char[])> ->_CWE538_
