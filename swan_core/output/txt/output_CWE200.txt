<org.jboss.resteasy.plugins.providers.ProviderHelper: java.lang.String readString(java.io.InputStream,javax.ws.rs.core.MediaType)> ->_CWE200_
<com.vividsolutions.jts.algorithm.MinimumBoundingCircle: com.vividsolutions.jts.geom.Coordinate getCentre()> ->_CWE200_
<org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.EdgeRing: com.vividsolutions.jts.geom.LinearRing getRing()> ->_CWE200_
<org.zaproxy.zap.view.SessionExcludeFromSpiderPanel: javax.swing.JPanel getPanelSession()> ->_CWE200_
<org.apache.commons.httpclient.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)> ->_CWE200_
<org.apache.xerces.dom.PSVIDocumentImpl: org.w3c.dom.DOMImplementation getImplementation()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.PlanarGraph: java.util.Collection getEdgeEnds()> ->_CWE200_
<com.vividsolutions.jts.geom.LinearRing: java.lang.String getGeometryType()> ->_CWE200_
<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String getMethodReplacerBeanName()> ->_CWE200_
<com.vividsolutions.jts.geom.MultiPolygon: java.lang.String getGeometryType()> ->_CWE200_
<org.springframework.validation.BindException: org.springframework.validation.FieldError getFieldError()> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionMaxDepth(int)> ->_CWE200_
<org.apache.commons.vfs2.provider.res.ResourceFileSystemConfigBuilder: java.lang.Class getConfigClass()> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JCheckBox getChkParseComments()> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JCheckBox getChkProcessForm()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: org.apache.xerces.xs.StringList getFieldStrs()> ->_CWE200_
<org.geotools.data.AbstractDataStoreFactory: org.opengis.parameter.ParameterDescriptorGroup getParameters()> ->_CWE200_
<org.joda.time.Hours: java.lang.Object readResolve()> ->_CWE200_
<org.apache.http.params.SyncBasicHttpParams: java.lang.Object getParameter(java.lang.String)> ->_CWE200_
<org.zkoss.idom.Attribute: java.lang.String getName()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.spi.ResteasyProviderFactory getDelegate()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: java.util.Collection getEdges()> ->_CWE200_
<com.sittinglittleduck.DirBuster.Manager: void setupManager(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,com.sittinglittleduck.DirBuster.gui.StartGUI,int,boolean,boolean,boolean,boolean,java.util.Vector)> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: com.vividsolutions.jts.planargraph.DirectedEdge getSym()> ->_CWE200_
<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer getKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.Foot getFoot()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.diff.SvnDiffCommand: org.apache.maven.scm.command.diff.DiffScmResult executeDiffCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.ScmVersion,org.apache.maven.scm.ScmVersion)> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryFactory: com.vividsolutions.jts.geom.CoordinateSequenceFactory getDefaultCoordinateSequenceFactory()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearLocation: int getComponentIndex()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileData: org.apache.commons.vfs2.FileName getName()> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: int getNumGeometries()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.checkout.SvnCheckOutConsumer: java.util.List getFiles()> ->_CWE200_
<org.zkoss.idom.input.SAXBuilder: org.xml.sax.EntityResolver getEntityResolver()> ->_CWE200_
<com.vividsolutions.jts.io.WKTWriter: java.lang.String writeFormatted(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<com.vividsolutions.jts.operation.valid.RepeatedPointTester: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.LineString readLineStringText()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: java.io.InputStream getInputStream()> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: org.zkoss.zk.ui.Component getFellow(java.lang.String)> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse optionParseComments()> ->_CWE200_
<org.geotools.geometry.jts.WKTReader2: com.vividsolutions.jts.geom.LinearRing readCurvedLinearRingText()> ->_CWE200_
<com.vividsolutions.jts.planargraph.Node: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.geotools.metadata.iso.identification.DataIdentificationImpl: java.util.Collection getSpatialResolutions()> ->_CWE200_
<org.apache.commons.io.input.BOMInputStream: int read()> ->_CWE200_
<org.apache.commons.compress.archivers.ar.ArArchiveInputStream: org.apache.commons.compress.archivers.ar.ArArchiveEntry readGNUStringTable(byte[])> ->_CWE200_
<org.apache.commons.io.input.XmlStreamReader: int read(char[],int,int)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: java.util.List getTrianglesAdjacentToVertex(int)> ->_CWE200_
<org.dom4j.jaxb.JAXBReader: org.dom4j.Document read(java.io.Reader)> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: com.vividsolutions.jts.geom.Point getStartPoint()> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterChangeUserAgentDialog: javax.swing.JPanel getJPanel1()> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: java.lang.String getCodeSpace()> ->_CWE200_
<com.vividsolutions.jts.io.ByteOrderDataInStream: byte readByte()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileSystemConfigBuilder: java.lang.Class getConfigClass()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.checkout.SvnCheckOutConsumer: java.util.List getCheckedOutFiles()> ->_CWE200_
<org.apache.maven.scm.provider.svn.repository.SvnScmProviderRepository: java.lang.String getUrl()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceFeatureAlongRoadElement()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getBrandName()> ->_CWE200_
<org.zkoss.idom.Attribute: java.lang.String getLocalName()> ->_CWE200_
<com.vividsolutions.jts.operation.linemerge.LineSequencer: com.vividsolutions.jts.geom.Geometry getSequencedLineStrings()> ->_CWE200_
<org.joda.time.tz.UTCProvider: java.util.Set getAvailableIDs()> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.MappingIterator readValues(java.io.Reader)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.FormUrlEncodedProvider: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getPassword()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.String getControlEncoding(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getInternetAddress()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: java.lang.String getNextEmptyOrOpener()> ->_CWE200_
<org.zkoss.idom.Document: org.zkoss.idom.Element getRootElement()> ->_CWE200_
<org.springframework.core.MethodParameter: java.lang.String getParameterName()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.mkdir.SvnMkdirConsumer: int getRevision()> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.LinearRing readLinearRing()> ->_CWE200_
<org.jboss.resteasy.plugins.server.servlet.ServletBootstrap: java.util.Set getParameterNames()> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedProperties()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(byte[])> ->_CWE200_
<org.geotools.referencing.cs.DefaultEllipsoidalCS: double getHeight(double[])> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: java.util.Map getProperties(org.opengis.referencing.IdentifiedObject)> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanel: javax.swing.JTable getScanResultsTable()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getAggregationInfo()> ->_CWE200_
<org.springframework.validation.BindException: org.springframework.validation.BindingResult getBindingResult()> ->_CWE200_
<org.dom4j.io.SAXValidator: org.xml.sax.ErrorHandler getErrorHandler()> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: com.teleatlas.global.common.ddct.DictionaryModel getModel()> ->_CWE200_
<org.geotools.referencing.operation.projection.EquidistantConic: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: org.apache.maven.scm.providers.svn.settings.Settings parseSettings(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)> ->_CWE200_
<org.geotools.metadata.iso.identification.ResolutionImpl: java.lang.Double getDistance()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.MultiLineString readMultiLineStringText()> ->_CWE200_
<org.jboss.resteasy.util.InputStreamToByteArray: int read(byte[])> ->_CWE200_
<com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource: int getLoginTimeout()> ->_CWE200_
<openlr.decoder.data.CandidateLinesResultSet: openlr.decoder.data.CandidateLine getCandidateLineAtIndex(openlr.LocationReferencePoint,int)> ->_CWE200_
<com.vividsolutions.jts.algorithm.InteriorPointLine: com.vividsolutions.jts.geom.Coordinate getInteriorPoint()> ->_CWE200_
<org.zaproxy.zap.extension.spider.ExtensionSpider: int getArrangeableListenerOrder()> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.Geometry readGeometry()> ->_CWE200_
<com.vividsolutions.jts.geom.prep.PreparedLineString: com.vividsolutions.jts.noding.FastSegmentSetIntersectionFinder getIntersectionFinder()> ->_CWE200_
<com.mchange.v1.db.sql.DriverManagerDataSource: void setLoginTimeout(int)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdgeStar: com.vividsolutions.jts.geomgraph.Label getLabel()> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionSkipURLString(java.lang.String)> ->_CWE200_
<javassist.tools.web.Viewer: byte[] readStream(java.io.InputStream)> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,java.lang.Class)> ->_CWE200_
<org.zaproxy.clientapi.ant.SpiderUrlTask: java.lang.String getUrl()> ->_CWE200_
<org.reflections.adapters.JavassistAdapter: java.util.List getParameterAnnotationNames(javassist.bytecode.MethodInfo,int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.HolidayRentalServiceSubcategoryType getServiceSubcategory()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: java.lang.String readString()> ->_CWE200_
<com.vividsolutions.jts.io.gml2.GMLReader: com.vividsolutions.jts.geom.Geometry read(java.io.Reader,com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceInNeighborhood()> ->_CWE200_
<org.jboss.resteasy.util.HttpServletRequestDelegate: java.util.Map getParameterMap()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.Object getContent()> ->_CWE200_
<org.geotools.referencing.operation.builder.LocalizationGrid: org.opengis.referencing.operation.MathTransform2D getMathTransform()> ->_CWE200_
<org.springframework.validation.BindException: java.lang.Object getTarget()> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderThread: boolean getJustScanInScope()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: com.jcraft.jsch.UserInfo getUserInfo(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getServerPostProcessInterceptorRegistry()> ->_CWE200_
<com.vividsolutions.jts.geom.DefaultCoordinateSequence: double getOrdinate(int,int)> ->_CWE200_
<org.apache.commons.vfs2.provider.compressed.CompressedFileFileObject: org.apache.commons.vfs2.FileObject getContainer()> ->_CWE200_
<com.vividsolutions.jts.noding.BasicSegmentString: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<org.zkoss.idom.Attribute: org.w3c.dom.Element getOwnerElement()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: double getLength()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToRotation(double,double,double,double)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: long getSize()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.AccidentHazardSignImpl: java.lang.Integer getLayerId()> ->_CWE200_
<com.vividsolutions.jts.index.strtree.STRtree: java.util.Comparator getComparator()> ->_CWE200_
<com.vividsolutions.jts.geom.util.PointExtracter: java.util.List getPoints(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionProcessForm(boolean)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.AccidentHazardSignImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.PositionalAccuracy getPositionalAccuracy()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.NoIdlingSignImpl: java.lang.Integer getLayerId()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.AllOfSideOfLineImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.AllOfSideOfLine$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jts.geom.LineSegment: double getLength()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.net.URL)> ->_CWE200_
<org.apache.http.client.utils.Rfc3492Idn: java.lang.String decode(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.MultiPolygon: com.vividsolutions.jts.geom.Geometry getBoundary()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.String getServerLanguageCode(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.NoIdlingSignImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.PositionalAccuracy getPositionalAccuracy()> ->_CWE200_
<org.joda.time.tz.ZoneInfoProvider: java.util.Set getAvailableIDs()> ->_CWE200_
<com.vividsolutions.jts.geom.LineSegment: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<org.zkoss.zul.Slider: java.lang.String getName()> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: java.lang.String readUTF()> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JCheckBox getHandleODataSpecificParameters()> ->_CWE200_
<com.vividsolutions.jts.algorithm.LineIntersector: com.vividsolutions.jts.geom.Coordinate getIntersectionAlongSegment(int,int)> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaValidator: org.apache.xerces.xni.Augmentations getEmptyAugs(org.apache.xerces.xni.Augmentations)> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Envelope getEnvelopeInternal()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: void dumpPath(zemberek.morphology.lexicon.SuffixForm,int)> ->_CWE200_
<com.mchange.v2.c3p0.JndiRefConnectionPoolDataSource: int getLoginTimeout()> ->_CWE200_
<com.vividsolutions.jts.geom.util.GeometryTransformer: com.vividsolutions.jts.geom.Geometry getInputGeometry()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.RightmostEdgeFinder: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<openlr.location.GridLocation: int getNumberOfColumns()> ->_CWE200_
<com.vividsolutions.jts.geom.Envelope: double getWidth()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdgeStar: int getIndex(com.vividsolutions.jts.planargraph.DirectedEdge)> ->_CWE200_
<com.vividsolutions.jts.geom.impl.PackedCoordinateSequence: int getDimension()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultURLConnection: java.lang.String getContentEncoding()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.SuffixForm getForm(java.lang.String,zemberek.morphology.lexicon.Suffix,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.util.CoordinateCountFilter: int getCount()> ->_CWE200_
<org.apache.maven.scm.provider.svn.SvnConfigFileReader: java.io.File getConfigDirectory()> ->_CWE200_
<org.apache.commons.io.input.ProxyInputStream: int read()> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: java.lang.Object getPropertyDefault(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.io.gml2.GMLHandler: org.xml.sax.Locator getDocumentLocator()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.BufferResultValidator: java.lang.String getErrorMessage()> ->_CWE200_
<edu.berkeley.nlp.lm.StupidBackoffLm: float getLogProb(int[])> ->_CWE200_
<com.vividsolutions.jts.noding.NodedSegmentString: com.vividsolutions.jts.noding.SegmentNodeList getNodeList()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.Vertex: double getY()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.Vertex: double getZ()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.Vertex: double getX()> ->_CWE200_
<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.Reader,java.lang.String)> ->_CWE200_
<org.apache.commons.io.input.BoundedInputStream: int read()> ->_CWE200_
<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonNode readValueAsTree()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: java.util.Collection getVertices(boolean)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: java.util.List getTriangleEdges(boolean)> ->_CWE200_
<org.apache.avro.file.LengthLimitedInputStream: int read()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeRing: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<org.zkoss.zkplus.databind.BindingValidateEvent: java.util.List getValues()> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: java.lang.String getMetaPropertyValue(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: java.util.Set getSupportedHints()> ->_CWE200_
<org.geotools.data.FIDSQuery: org.opengis.referencing.crs.CoordinateReferenceSystem getCoordinateSystemReproject()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.MonotoneChainEdge: double getMaxX(int)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.AbstractFileCheckingConsumer: int getRevision()> ->_CWE200_
<com.vividsolutions.jts.noding.MCIndexNoder: java.util.Collection getNodedSubstrings()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.String getServerLanguageCode(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.avro.io.BinaryDecoder: java.nio.ByteBuffer readBytes(java.nio.ByteBuffer)> ->_CWE200_
<org.apache.xerces.impl.dv.xs.AnyURIDV: java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.w3c.dom.Node getLastChild()> ->_CWE200_
<org.zkoss.zul.theme.StandardThemeProvider: int getWCSCacheControl(org.zkoss.zk.ui.Execution,java.lang.String)> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: short getShortValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)> ->_CWE200_
<com.thoughtworks.paranamer.DefaultParanamer: java.lang.String[] getParameterNames(java.lang.Class,java.lang.String,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.util.Debug: void println(java.lang.Object)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.PlanarGraph: java.util.Iterator getEdgeIterator()> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: org.zaproxy.zap.spider.SpiderParam$HandleParametersOption getHandleParameters()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.Suffix getSuffixById(java.lang.String)> ->_CWE200_
<org.apache.xerces.impl.validation.ValidationState: boolean isEntityUnparsed(java.lang.String)> ->_CWE200_
<com.vividsolutions.jtsexample.geom.ExtendedCoordinate: double getM()> ->_CWE200_
<com.vividsolutions.jts.algorithm.ConvexHull: com.vividsolutions.jts.geom.Geometry getConvexHull()> ->_CWE200_
<org.springframework.validation.DataBinder: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()> ->_CWE200_
<com.vividsolutions.jts.JTSVersion: int getMajor()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.KeyRef: org.apache.xerces.impl.xs.identity.UniqueOrKey getKey()> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.Polygonizer: java.util.Collection getPolygons()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getClientMessageBodyReaderInterceptorRegistry()> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: org.opengis.referencing.ReferenceIdentifier getIdentifier0(org.opengis.referencing.IdentifiedObject,org.opengis.metadata.citation.Citation)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.mapimpl.ResidentialAccommodationServiceSubcategoryTypeImpl: com.tomtom.cpu.api.semantic.ttom_poi.domain.CodeValuetypes$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jts.algorithm.LineIntersector: com.vividsolutions.jts.geom.Coordinate getIntersection(int)> ->_CWE200_
<com.github.kristofa.brave.SpanIdImpl: long getSpanId()> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanelTableModel: int getColumnCount()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.XmlDictionaryModelStore: com.teleatlas.global.common.ddct.DictionaryModel readModel(com.teleatlas.global.common.ddct.DictionaryModelDescriptor,java.lang.String)> ->_CWE200_
<org.zkoss.idom.Element: org.zkoss.idom.Namespace getNamespace(java.lang.String)> ->_CWE200_
<com.nesscomputing.types.StringId: java.lang.String getValue()> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.NodeBase: int getSubnodeIndex(com.vividsolutions.jts.geom.Envelope,com.vividsolutions.jts.geom.Coordinate)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeIntersection: boolean isEndPoint(int)> ->_CWE200_
<com.vividsolutions.jts.algorithm.Angle: int getTurn(double,double)> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: int getBoundaryDimension()> ->_CWE200_
<org.apache.http.impl.client.DefaultUserTokenHandler: java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.StringTextStar: java.lang.String readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)> ->_CWE200_
<com.vividsolutions.jts.geom.PrecisionModel: double getScale()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarInputStream: org.apache.commons.vfs2.provider.tar.TarEntry getNextEntry()> ->_CWE200_
<javassist.tools.rmi.AppletServer: java.lang.Object[] readParameters(java.io.ObjectInputStream)> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileObject: org.apache.jackrabbit.webdav.property.DavPropertySet getProperties(org.apache.commons.vfs2.provider.URLFileName,org.apache.jackrabbit.webdav.property.DavPropertyNameSet,boolean)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.reflection.ClassMap: java.lang.reflect.Method getPublicMethod(java.lang.reflect.Method)> ->_CWE200_
<com.vividsolutions.jts.geom.impl.CoordinateArraySequence: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<org.geotools.metadata.iso.identification.UsageImpl: org.opengis.util.InternationalString getUserDeterminedLimitations()> ->_CWE200_
<com.vividsolutions.jts.io.gml2.GeometryStrategies: java.util.HashMap loadStrategies()> ->_CWE200_
<org.springframework.beans.InvalidPropertyException: java.lang.String getPropertyName()> ->_CWE200_
<com.vividsolutions.jts.index.bintree.Key: int getLevel()> ->_CWE200_
<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer getNullValueSerializer()> ->_CWE200_
<com.vividsolutions.jts.operation.linemerge.EdgeString: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixedObjectValueSource: java.lang.Object getValue(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomReader: com.vividsolutions.jts.geom.Point read(com.tomtom.cpu.api.geometry.Coordinate)> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileSystemConfigBuilder: java.lang.String getCreatorName(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.google.common.reflect.Invokable: com.google.common.collect.ImmutableList getParameters()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getReverseServicesBelongingToServiceClasses()> ->_CWE200_
<com.vividsolutions.jts.noding.snapround.HotPixel: com.vividsolutions.jts.geom.Envelope getSafeEnvelope()> ->_CWE200_
<org.zaproxy.zap.spider.Spider: java.net.CookieManager getCookieManager()> ->_CWE200_
<org.geotools.data.shapefile.indexed.IndexedFidReader: long getCurrentFIDIndex()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getStandardPOIInOrder8Area()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getExternalCodingScheme()> ->_CWE200_
<org.apache.maven.scm.provider.svn.SvnConfigFileReader: java.util.List getConfLines()> ->_CWE200_
<org.apache.commons.vfs2.provider.res.ResourceFileSystemConfigBuilder: org.apache.commons.vfs2.provider.res.ResourceFileSystemConfigBuilder getInstance()> ->_CWE200_
<org.zkoss.idom.Text: java.lang.String getName()> ->_CWE200_
<org.geotools.referencing.datum.DefaultPrimeMeridian: double getGreenwichLongitude()> ->_CWE200_
<org.apache.commons.compress.archivers.tar.TarBuffer: boolean readBlock()> ->_CWE200_
<openlr.location.InvalidLocation: openlr.map.GeoCoordinates getUpperRightPoint()> ->_CWE200_
<org.apache.commons.vfs2.provider.URLFileNameParser: org.apache.commons.vfs2.FileName parseUri(org.apache.commons.vfs2.provider.VfsComponentContext,org.apache.commons.vfs2.FileName,java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileSystem: org.apache.commons.httpclient.HttpClient getClient()> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse optionParseRobotsTxt()> ->_CWE200_
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.lang.Integer getLayerId()> ->_CWE200_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: javax.validation.TraversableResolver getTraversableResolver()> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: java.lang.String getGeometryType()> ->_CWE200_
<org.geotools.metadata.iso.identification.KeywordsImpl: org.opengis.metadata.citation.Citation getThesaurusName()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getClientMessageBodyWriterInterceptorRegistry()> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: java.lang.String getScmSpecificFilename()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getServerPreProcessInterceptorRegistry()> ->_CWE200_
<org.springframework.validation.ObjectError: java.lang.String getObjectName()> ->_CWE200_
<org.zkoss.idom.impl.AbstractTextual: java.lang.String getData()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: double readDouble()> ->_CWE200_
<com.teleatlas.global.common.util.dbunit.UUIDUtility: java.lang.String getSqlString(java.util.UUID)> ->_CWE200_
<org.geotools.metadata.iso.identification.DataIdentificationImpl: java.util.Collection getCharacterSets()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceAlongRoadElement()> ->_CWE200_
<com.vividsolutions.jts.algorithm.MinimumDiameter: double getLength()> ->_CWE200_
<org.zaproxy.clientapi.gen.Auth: org.zaproxy.clientapi.core.ApiResponse setLoginIndicator(java.lang.String,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: void readCoordinate()> ->_CWE200_
<org.zkoss.bind.impl.ValidationContextImpl: java.util.Map getProperties()> ->_CWE200_
<com.vividsolutions.jts.index.bintree.Interval: double getMax()> ->_CWE200_
<com.tomtom.cpu.coredb.client.impl.ByIdReadCalls: com.tomtom.cpu.coredb.mapdata.model.MapDataFeature getFeatureFromJson(java.util.UUID,java.lang.String)> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.Columns getColumns()> ->_CWE200_
<org.zaproxy.zap.view.SessionExcludeFromSpiderPanel: java.lang.String getHelpIndex()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.net.URL,java.lang.Class)> ->_CWE200_
<org.springframework.validation.BindException: java.util.List getGlobalErrors()> ->_CWE200_
<org.dom4j.io.XPP3Reader: org.dom4j.Document read(java.io.InputStream)> ->_CWE200_
<org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver: org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.HasManeuverValidityImpl: java.util.Collection getManeuverValidity()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearLocation: com.vividsolutions.jts.linearref.LinearLocation getEndLocation(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<com.vividsolutions.jtsexample.technique.PolygonUnionUsingBuffer: void unionUsingBuffer(com.vividsolutions.jts.geom.Geometry[])> ->_CWE200_
<org.apache.commons.vfs2.provider.HostFileNameParser: org.apache.commons.vfs2.FileName parseUri(org.apache.commons.vfs2.provider.VfsComponentContext,org.apache.commons.vfs2.FileName,java.lang.String)> ->_CWE200_
<org.joda.time.Minutes: java.lang.Object readResolve()> ->_CWE200_
<com.vividsolutions.jtsexample.geom.ExtendedCoordinateSequence: double getOrdinate(int,int)> ->_CWE200_
<com.vividsolutions.jts.noding.FastSegmentSetIntersectionFinder: com.vividsolutions.jts.noding.SegmentSetMutualIntersector getSegmentSetIntersector()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: boolean getAddDefaultEntities()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getListCommand()> ->_CWE200_
<org.geotools.referencing.operation.projection.Mollweide: double getToleranceForAssertions(double,double)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.GeometryGraph: com.vividsolutions.jts.geom.Coordinate getInvalidPoint()> ->_CWE200_
<com.vividsolutions.jts.index.bintree.Interval: double getMin()> ->_CWE200_
<org.zkoss.idom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.PositionalAccuracy getPositionalAccuracy()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceInOrder8Area()> ->_CWE200_
<org.zkoss.io.Files: java.lang.StringBuffer readAll(java.io.Reader)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.ProviderHelper: java.lang.String readString(java.io.InputStream)> ->_CWE200_
<com.vividsolutions.jts.operation.relate.RelateNodeGraph: java.util.Iterator getNodeIterator()> ->_CWE200_
<org.zkoss.bind.xel.zel.ValidationMessagesELResolver: java.lang.Class getType(org.zkoss.zel.ELContext,java.lang.Object,java.lang.Object)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getRootURI()> ->_CWE200_
<javassist.CtBehavior: java.lang.Object[][] getParameterAnnotations()> ->_CWE200_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[])> ->_CWE200_
<com.mchange.v1.identicator.StrongIdHashKey: java.lang.Object getKeyObj()> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.PolygonizeDirectedEdge: long getLabel()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeRing: com.vividsolutions.jts.geomgraph.EdgeRing getShell()> ->_CWE200_
<org.apache.http.auth.NTUserPrincipal: java.lang.String getUsername()> ->_CWE200_
<com.vividsolutions.jts.algorithm.LineIntersector: double getEdgeDistance(int,int)> ->_CWE200_
<org.zaproxy.zap.spider.URLCanonicalizer: java.lang.String getCanonicalURL(java.lang.String)> ->_CWE200_
<com.teleatlas.global.common.util.dbunit.UUIDUtility: byte[] getByteArrayFor(java.util.UUID)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: org.apache.commons.vfs2.FileObject getFile()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getTagCommand()> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: java.util.Collection getFellows()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getAddressInformation()> ->_CWE200_
<com.vividsolutions.jts.noding.NodedSegmentString: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileProvider: org.apache.commons.vfs2.provider.FileNameParser getFileNameParser()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.String getEntryParser(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: org.opengis.metadata.citation.Citation getCitation()> ->_CWE200_
<org.zkoss.zkmax.bind.FormBeanValidator: javax.validation.Validator getValidator()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: void print(java.io.PrintStream)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarInputStream: void copyEntryContents(java.io.OutputStream)> ->_CWE200_
<org.zkoss.bind.xel.zel.ValidationMessagesELResolver: java.lang.Class getCommonPropertyType(org.zkoss.zel.ELContext,java.lang.Object)> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: double getArea()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference)> ->_CWE200_
<javassist.CtBehavior: javassist.CtClass[] getParameterTypes()> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: int getDimension()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory getEntryParserFactory(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.avro.reflect.ReflectDatumReader: java.lang.Object readBytes(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.Decoder)> ->_CWE200_
<org.dom4j.io.SAXReader: org.dom4j.Document read(java.net.URL)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getCommonNameSet()> ->_CWE200_
<org.zkoss.idom.util.SimpleLocator: java.lang.String getPublicId()> ->_CWE200_
<zemberek.core.hash.ByteGramProvider: byte[] getKeyAsBytes(int)> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderSite: java.lang.String getParentMenuName()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.XmlDictionaryModelStoreHelper: com.teleatlas.global.common.ddct.impl.NameIndexContainer readNameIndex(java.lang.String,com.teleatlas.global.common.ddct.DictionaryModelDescriptor)> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: java.util.Date getDateValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser)> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetAttribute: java.lang.String getValue(org.zkoss.zk.ui.Component)> ->_CWE200_
<org.geotools.referencing.operation.DefiningConversion: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ArrayEncodedProbBackoffLm readArrayEncodedLmFromArpa(java.lang.String,boolean,edu.berkeley.nlp.lm.WordIndexer,edu.berkeley.nlp.lm.ConfigOptions,int)> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.XmlDictionaryModelStoreHelper: com.teleatlas.global.common.ddct.impl.MetaPropertyRefContainer readTermMetaPropertyRefs(java.lang.String,com.teleatlas.global.common.ddct.DictionaryModelDescriptor)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: com.vividsolutions.jts.triangulate.quadedge.QuadEdge[] getEdges()> ->_CWE200_
<org.apache.commons.compress.compressors.pack200.InMemoryCachingStreamBridge: java.io.InputStream getInputView()> ->_CWE200_
<org.joda.time.field.SkipDateTimeField: java.lang.Object readResolve()> ->_CWE200_
<org.apache.xerces.dom.PSVIDOMImplementationImpl: org.w3c.dom.DOMImplementation getDOMImplementation()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryFactory: com.vividsolutions.jts.geom.CoordinateSequenceFactory getCoordinateSequenceFactory()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: java.util.jar.JarFile getJarFile()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getLastChangedDate()> ->_CWE200_
<org.springframework.util.xml.StaxUtils: javax.xml.stream.XMLStreamReader getXMLStreamReader(javax.xml.transform.Source)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceInOrder9Area()> ->_CWE200_
<org.zaproxy.zap.extension.spider.ExtensionSpider: java.net.URL getURL()> ->_CWE200_
<org.apache.maven.scm.provider.svn.repository.SvnScmProviderRepository: java.lang.String getProtocol()> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: java.lang.String getScopeText()> ->_CWE200_
<com.vividsolutions.jts.awt.PolygonShape: java.awt.geom.Rectangle2D getBounds2D()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.domain.mapimpl.StrictlySidedAndOnImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.AllOfSideOfLine$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: double getAngle()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.UnitOfHeightLengthWidthImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.AllOfUnitOfMeasurement$RANGE getItem()> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.ManeuverValidityForCalculatedProhibitedManeuverImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.BlockedPassageType getBlockedPassageType()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileSystem: java.net.URLStreamHandler getURLStreamHandler()> ->_CWE200_
<com.vividsolutions.jts.index.strtree.SIRtree: com.vividsolutions.jts.index.strtree.AbstractSTRtree$IntersectsOp getIntersectsOp()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getPath()> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: com.vividsolutions.jts.geom.Coordinate getEnd()> ->_CWE200_
<org.springframework.validation.AbstractErrors: java.lang.String getNestedPath()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: java.util.Date getDateValue(java.lang.String,java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser)> ->_CWE200_
<org.springframework.validation.DataBinder: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: int getDimension()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.LaneDividerTypeInfoImpl: java.lang.String getLaneValidity()> ->_CWE200_
<org.apache.commons.vfs2.provider.LayeredFileNameParser: org.apache.commons.vfs2.provider.LayeredFileNameParser getInstance()> ->_CWE200_
<com.zones.selection.CuboidSelection: java.util.List getPoints()> ->_CWE200_
<org.zkoss.idom.transform.Transformer: javax.xml.transform.Transformer getTransformer()> ->_CWE200_
<org.apache.commons.vfs2.provider.GenericFileName: java.lang.String getHostName()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.lang.String[] getSuppressedFields()> ->_CWE200_
<com.vividsolutions.jts.operation.linemerge.LineMergeGraph: com.vividsolutions.jts.planargraph.Node getNode(com.vividsolutions.jts.geom.Coordinate)> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JCheckBox getChkPostForm()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: int readEnum()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.FormUrlEncodedProvider: boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.zkoss.idom.Document: java.lang.String getDocumentURI()> ->_CWE200_
<org.geotools.data.shapefile.ShapefileDataStore: org.geotools.data.FeatureReader getFeatureReader(java.lang.String,org.geotools.data.Query)> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.validate.PolygonalLineworkExtracter: java.util.List getLinework()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsClientWrapper: org.apache.commons.net.ftp.FTPSClient getFtpsClient()> ->_CWE200_
<edu.berkeley.nlp.lm.io.IOUtils: java.io.BufferedReader getReader(java.io.InputStream)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixedPropertiesValueSource: java.util.List getFeedback()> ->_CWE200_
<org.zkoss.idom.Element: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)> ->_CWE200_
<org.springframework.validation.BindException: org.springframework.validation.ObjectError getGlobalError()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.os.Os: java.util.Set getValidFamilies()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: java.lang.Iterable getAllForms()> ->_CWE200_
<org.apache.avro.reflect.ReflectDatumReader: java.lang.Object readCollection(java.util.Collection,org.apache.avro.Schema,long,org.apache.avro.io.ResolvingDecoder)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: com.vividsolutions.jts.geomgraph.index.MonotoneChainEdge getMonotoneChainEdge()> ->_CWE200_
<org.springframework.validation.DefaultMessageCodesResolver: java.lang.String getPrefix()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: com.vividsolutions.jts.geom.Geometry getBoundary()> ->_CWE200_
<org.zkoss.zul.Slider: int getCurpos()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileObject: org.apache.commons.vfs2.FileContentInfoFactory getFileContentInfoFactory()> ->_CWE200_
<org.zkoss.idom.input.SAXBuilder: org.xml.sax.ErrorHandler getErrorHandler()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.mapimpl.ValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom_poi.domain.AllOfValidityDirection$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jtsexample.technique.LineStringSelfIntersections: com.vividsolutions.jts.geom.Geometry getEndPoints(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.zkoss.idom.input.SAXBuilder: org.zkoss.idom.Document build(java.io.InputStream)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.AccidentHazardSignImpl: java.lang.Integer getid()> ->_CWE200_
<com.vividsolutions.jts.geom.util.LinearComponentExtracter: java.util.Collection getLines(java.util.Collection,java.util.Collection,boolean)> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderURL: org.zaproxy.zap.extension.spider.ExtensionSpider getExtensionSpider()> ->_CWE200_
<org.springframework.validation.FieldError: java.lang.String getField()> ->_CWE200_
<com.mchange.v2.c3p0.WrapperConnectionPoolDataSource: int getLoginTimeout()> ->_CWE200_
<com.mchange.v2.c3p0.test.FreezableDriverManagerDataSource: int getLoginTimeout()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: java.lang.String getStrictHostKeyChecking(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: com.vividsolutions.jts.geom.Geometry getBoundary()> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: org.apache.xerces.xni.XMLDocumentHandler getDocumentHandler()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getRelativeName(org.apache.commons.vfs2.FileName)> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.Point readPoint()> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.geotools.data.simple.SimpleFeatureCollection getFeatures(org.geotools.data.Query)> ->_CWE200_
<org.dom4j.io.XPPReader: org.dom4j.Document read(char[])> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderSite: int getParentMenuIndex()> ->_CWE200_
<org.opengis.coverage.PointOutsideCoverageException: org.opengis.geometry.DirectPosition getOffendingLocation()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<org.zkoss.idom.Binary: short getNodeType()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdge: double getLength()> ->_CWE200_
<com.vividsolutions.jts.operation.valid.ConnectedInteriorTester: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.Reader,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.Envelope: double getMaxX()> ->_CWE200_
<com.vividsolutions.jts.geom.Envelope: double getMaxY()> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.GroupsModel getGroupsModel()> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.PolygonizeGraph: int getDegree(com.vividsolutions.jts.planargraph.Node,long)> ->_CWE200_
<org.apache.commons.vfs2.provider.local.DefaultLocalFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<org.jboss.resteasy.mock.MockHttpRequest: javax.ws.rs.core.MultivaluedMap getFormParameters()> ->_CWE200_
<org.apache.commons.vfs2.provider.UriParser: java.lang.String encode(java.lang.String,char[])> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: javax.ws.rs.ext.ExceptionMapper getExceptionMapper(java.lang.Class)> ->_CWE200_
<org.geotools.data.FIDSQuery: org.geotools.factory.Hints getHints()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getPointOfContacts()> ->_CWE200_
<com.vividsolutions.jts.awt.PolygonShape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)> ->_CWE200_
<org.apache.maven.scm.provider.ScmProviderRepository: java.lang.String getUser()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.MonotoneChainEdge: double getMinX(int)> ->_CWE200_
<org.dom4j.io.STAXEventReader: org.dom4j.Node readNode(javax.xml.stream.XMLEventReader)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getUpdateCommand()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getAttribute(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.impl.DefaultFileSystemConfigBuilder: org.apache.commons.vfs2.UserAuthenticator getUserAuthenticator(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.xerces.impl.dv.xs.IDREFDV: java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.FileObject getParent()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: java.lang.String getNamespace()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: java.lang.String getEntryName()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder: org.apache.commons.httpclient.Cookie[] getCookies(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferParameters: double getMitreLimit()> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: int getLimit()> ->_CWE200_
<zemberek.core.io.IOs: java.io.BufferedReader getReader(java.io.InputStream)> ->_CWE200_
<org.jboss.resteasy.client.core.ClientInterceptorRepositoryImpl: java.util.LinkedList getReaderInterceptorList()> ->_CWE200_
<org.zkoss.idom.EntityReference: short getNodeType()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: int getDepth(int)> ->_CWE200_
<org.zkoss.idom.Binary: java.lang.String getText()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearIterator: com.vividsolutions.jts.geom.LineString getLine()> ->_CWE200_
<org.apache.avro.io.JsonDecoder: float readFloat()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.Object getUserData(java.lang.String)> ->_CWE200_
<org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream: int read(byte[],int,int)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Node: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.http.impl.io.IdentityInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.http.auth.BasicUserPrincipal: java.lang.String getName()> ->_CWE200_
<com.mchange.v1.identicator.test.TestIdHashSet: void main(java.lang.String[])> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: org.opengis.referencing.ReferenceIdentifier getIdentifier(org.opengis.metadata.citation.Citation)> ->_CWE200_
<com.vividsolutions.jts.geom.OctagonalEnvelope: double getMinA()> ->_CWE200_
<com.vividsolutions.jts.geom.OctagonalEnvelope: double getMinB()> ->_CWE200_
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixAwareRecursionInterceptor: java.util.List getExpressionCycle(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.OctagonalEnvelope: double getMinX()> ->_CWE200_
<com.vividsolutions.jts.geom.OctagonalEnvelope: double getMinY()> ->_CWE200_
<org.apache.maven.scm.provider.ScmProviderRepositoryWithHost: java.lang.String getHost()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getLastChangedAuthor()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()> ->_CWE200_
<com.vividsolutions.jts.geom.util.LinearComponentExtracter: java.util.Collection getLines(com.vividsolutions.jts.geom.Geometry,java.util.Collection)> ->_CWE200_
<openlr.location.GridLocation: java.util.List getLocationLines()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.ProviderHelper: java.util.List getAvailableVariants(java.lang.String[])> ->_CWE200_
<org.zkoss.zkplus.embed.Bridge: org.zkoss.zk.ui.Execution getExecution()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder: org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder getInstance()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.checkout.SvnCheckOutCommand: org.apache.maven.scm.command.checkout.CheckOutScmResult executeCheckOutCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.ScmVersion,boolean)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getKey()> ->_CWE200_
<org.springframework.validation.AbstractPropertyBindingResult: java.lang.Object getActualFieldValue(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: long getSize()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEndStar: java.util.List getEdges()> ->_CWE200_
<org.zkoss.idom.ProcessingInstruction: java.lang.String getData()> ->_CWE200_
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> ->_CWE200_
<org.geotools.referencing.operation.builder.GridToEnvelopeMapper: boolean getSwapXY()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractOriginatingFileProvider: org.apache.commons.vfs2.FileSystem getFileSystem(org.apache.commons.vfs2.FileName,org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)> ->_CWE200_
<org.jboss.resteasy.test.TestPortProvider: int getPort()> ->_CWE200_
<org.opengis.filter.capability.GeometryOperand: java.lang.Object readResolve()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: com.vividsolutions.jts.geom.Polygon getVoronoiCellPolygon(com.vividsolutions.jts.triangulate.quadedge.QuadEdge,com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.ManeuverValidityImpl: java.util.Collection getVehicleType()> ->_CWE200_
<com.google.common.io.ByteStreams: java.lang.Object readBytes(java.io.InputStream,com.google.common.io.ByteProcessor)> ->_CWE200_
<org.zkoss.zul.theme.StandardThemeProvider: java.util.Collection getThemeURIs(org.zkoss.zk.ui.Execution,java.util.List)> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: int getElementIndex(int,java.lang.String,java.lang.String,int)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.ProviderHelper: java.util.List getAvailableMediaTypes(java.lang.String[])> ->_CWE200_
<org.zaproxy.zap.spider.URLCanonicalizer: java.lang.String getCanonicalURL(java.lang.String,java.lang.String)> ->_CWE200_
<com.tomtom.cpu.coredb.client.impl.RemoteReadCalls: com.tomtom.cpu.coredb.common.dto.JsonResponse readToJsonResponse(java.lang.String)> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: void readNull()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.HolidayAreaGroundImpl: java.util.Collection getCommonNameSet()> ->_CWE200_
<org.springframework.validation.BindException: java.util.Map getModel()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulator: com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision getSubdivision()> ->_CWE200_
<openlr.binary.data.GridDimension: short getDimension()> ->_CWE200_
<org.parosproxy.paros.extension.manualrequest.ExtensionManualRequestEditor: org.parosproxy.paros.extension.manualrequest.ManualRequestEditorDialog getManualSendEditor(java.lang.Class)> ->_CWE200_
<org.parosproxy.paros.db.TableHistory: org.parosproxy.paros.db.RecordHistory read(int)> ->_CWE200_
<org.geotools.data.FIDFeatureReader: org.opengis.feature.simple.SimpleFeature readFeature(org.geotools.data.AttributeReader)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.IIOImageProviderHelper: javax.imageio.ImageReader getImageReaderByMediaType(javax.ws.rs.core.MediaType)> ->_CWE200_
<com.vividsolutions.jts.geom.impl.CoordinateArraySequence: double getX(int)> ->_CWE200_
<com.vividsolutions.jts.geom.impl.CoordinateArraySequence: double getY(int)> ->_CWE200_
<org.apache.commons.httpclient.UsernamePasswordCredentials: void setUserName(java.lang.String)> ->_CWE200_
<com.teleatlas.global.common.ddct.wrappers.DictionaryPropertyWithParentWrapper: java.lang.String getBreadCrumbString()> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: java.lang.String getHelpIndex()> ->_CWE200_
<com.nesscomputing.uuid.NessUUID: long decode(java.lang.String,int[],int)> ->_CWE200_
<org.apache.xerces.impl.io.ASCIIReader: int read()> ->_CWE200_
<org.jboss.resteasy.plugins.server.servlet.ListenerBootstrap: java.lang.String getParameter(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.noding.ScaledNoder: java.util.Collection getNodedSubstrings()> ->_CWE200_
<org.zkoss.bind.impl.ValidationHelper: java.util.Set getNotifys(org.zkoss.bind.BindContext)> ->_CWE200_
<utils.Utility: int getNumberOfLines(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.util.Stopwatch: long getTime()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.KeyRef: org.apache.xerces.xs.XSIDCDefinition getRefKey()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: java.lang.String getGroupName()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.Boolean getPassiveMode(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<openlr.decoder.data.CandidateLine: int getRating()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceInIndexArea()> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: java.util.Collection getMetaProperties(java.lang.String)> ->_CWE200_
<org.zkoss.zul.Slider: java.lang.String getOrient()> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: int getElementIndex(int,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.EdgeRing: com.vividsolutions.jts.geom.LineString getLineString()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdgeStar: void print(java.io.PrintStream)> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: org.opengis.referencing.ReferenceIdentifier getName()> ->_CWE200_
<com.vividsolutions.jts.io.ByteOrderValues: double getDouble(byte[],int)> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.PointPairDistance: double getDistance()> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.validate.FuzzyPointLocator: int getLocation(com.vividsolutions.jts.geom.Coordinate)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getStandardPOIInOrder9Area()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: org.springframework.validation.FieldError getFieldError()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileObject: org.apache.jackrabbit.webdav.property.DavPropertySet getProperties(org.apache.commons.vfs2.provider.URLFileName,int,org.apache.jackrabbit.webdav.property.DavPropertyNameSet,boolean)> ->_CWE200_
<com.vividsolutions.jts.awt.GeometryCollectionShape: java.awt.geom.Rectangle2D getBounds2D()> ->_CWE200_
<org.apache.commons.vfs2.impl.ProviderConfiguration: java.lang.String getClassName()> ->_CWE200_
<org.apache.commons.vfs2.impl.ProviderConfiguration: java.util.List getSchemes()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: int getAdjacentTriangleEdgeIndex(int)> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: com.vividsolutions.jts.geom.Coordinate getCoordinateN(int)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultURLConnection: int getContentLength()> ->_CWE200_
<org.springframework.asm.ClassReader: java.lang.String readUTF8(int,char[])> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: java.util.List getClientErrorInterceptors()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.reflection.ClassMap: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])> ->_CWE200_
<com.vividsolutions.jts.operation.valid.IndexedNestedRingTester: com.vividsolutions.jts.geom.Coordinate getNestedPoint()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEndStar: com.vividsolutions.jts.geomgraph.EdgeEnd getNextCW(com.vividsolutions.jts.geomgraph.EdgeEnd)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Depth: int getDepth(int,int)> ->_CWE200_
<com.tomtom.cpu.coredb.client.impl.ByIdReadCalls: com.tomtom.cpu.coredb.spp.common.json.NextTransactionMessage getTransactionById(java.lang.String)> ->_CWE200_
<org.zkoss.idom.Document: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> ->_CWE200_
<edu.berkeley.nlp.lm.array.CustomWidthArray: boolean getBit(long)> ->_CWE200_
<com.vividsolutions.jts.noding.NodedSegmentString: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.geotools.data.shapefile.ShapefileDataStore: org.geotools.data.FeatureReader getFeatureReader(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: short readShort()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileNameParser: org.apache.commons.vfs2.provider.FileNameParser getInstance()> ->_CWE200_
<org.geotools.data.store.ContentFeatureSource: org.geotools.data.FeatureReader getReader(org.opengis.filter.Filter)> ->_CWE200_
<com.tomtom.cpu.coredb.client.impl.FeaturesStreamingIterator: java.util.List readNextListChunk()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.Coordinate getPreciseCoordinate()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeList: com.vividsolutions.jts.geomgraph.Edge get(int)> ->_CWE200_
<org.apache.xerces.dom.PSVIDocumentImpl: org.w3c.dom.DOMConfiguration getDomConfig()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation getInverse()> ->_CWE200_
<org.geotools.referencing.factory.IdentifiedObjectSet: java.lang.String[] getAuthorityCodes()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileData: java.util.Collection getChildren()> ->_CWE200_
<org.apache.commons.vfs2.provider.temp.TemporaryFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JComboBox getComboHandleParameters()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.JavaType)> ->_CWE200_
<org.springframework.validation.BindException: java.util.List getFieldErrors()> ->_CWE200_
<com.vividsolutions.jts.index.chain.MonotoneChain: int getStartIndex()> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JPanel getPanelSpider()> ->_CWE200_
<org.springframework.validation.DataBinder: java.lang.String[] getAllowedFields()> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.RowRenderer getRowRenderer()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileData: long getLastModified()> ->_CWE200_
<org.apache.commons.vfs2.provider.url.UrlFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<javax.servlet.ServletRequestWrapper: java.lang.String[] getParameterValues(java.lang.String)> ->_CWE200_
<org.zkoss.idom.EntityReference: java.lang.String getName()> ->_CWE200_
<org.geotools.metadata.iso.identification.UsageImpl: org.opengis.util.InternationalString getSpecificUsage()> ->_CWE200_
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: org.springframework.core.io.ResourceLoader getResourceLoader()> ->_CWE200_
<org.zkoss.zk.ui.impl.SessionDesktopCacheProvider: org.zkoss.zk.ui.sys.DesktopCache getDesktopCache(org.zkoss.zk.ui.Session)> ->_CWE200_
<org.zkoss.idom.Element: int getAttributeIndex(int,java.lang.String)> ->_CWE200_
<edu.berkeley.nlp.lm.StupidBackoffLm: edu.berkeley.nlp.lm.map.NgramMap getNgramMap()> ->_CWE200_
<com.vividsolutions.jts.simplify.TaggedLineString: com.vividsolutions.jts.geom.LineString getParent()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.TypeReference)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceInOrder8Area()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)> ->_CWE200_
<org.geotools.metadata.iso.identification.DataIdentificationImpl: java.util.Collection getLanguage()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getResourceFormat()> ->_CWE200_
<org.zkoss.zul.theme.StandardThemeProvider: java.lang.String getThemeFileSuffix()> ->_CWE200_
<edu.berkeley.nlp.lm.array.CustomWidthArray: int getKeyWidth()> ->_CWE200_
<com.google.common.io.CountingInputStream: int read()> ->_CWE200_
<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: java.lang.String getName(org.opengis.referencing.IdentifiedObject,org.opengis.metadata.citation.Citation)> ->_CWE200_
<org.geotools.referencing.operation.projection.PolarStereographic: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileSelectorInfo: org.apache.commons.vfs2.FileObject getBaseFolder()> ->_CWE200_
<org.apache.commons.vfs2.provider.res.ResourceFileSystemConfigBuilder: java.lang.ClassLoader getClassLoader(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.mchange.v2.c3p0.test.FreezableDriverManagerDataSource: void setLoginTimeout(int)> ->_CWE200_
<org.geotools.metadata.iso.identification.BrowseGraphicImpl: java.lang.String getFileType()> ->_CWE200_
<com.vividsolutions.jts.io.gml2.GeometryStrategies: int getSrid(org.xml.sax.Attributes,int)> ->_CWE200_
<com.vividsolutions.jts.index.chain.MonotoneChainBuilder: int[] getChainStartIndices(com.vividsolutions.jts.geom.Coordinate[])> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileObject: org.apache.commons.vfs2.FileContentInfoFactory getFileContentInfoFactory()> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanelTableModel: java.lang.Object getValueAt(int,int)> ->_CWE200_
<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.File)> ->_CWE200_
<org.springframework.core.OverridingClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getStandardPOIInBuilt_upArea()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryFactory: int getSRID()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder: int getProxyPort(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getOpeningPeriod()> ->_CWE200_
<org.dom4j.io.STAXEventReader: org.dom4j.Document readDocument(java.io.Reader,java.lang.String)> ->_CWE200_
<org.zkoss.idom.impl.AbstractTextual: org.w3c.dom.Text replaceWholeText(java.lang.String)> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getTagName()> ->_CWE200_
<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: java.lang.String getPreferredAuthentications(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.maven.scm.provider.svn.AbstractSvnScmProvider: java.lang.String getScmSpecificFilename()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: com.vividsolutions.jts.geom.Coordinate getDirectionPt()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.spi.InjectorFactory getInjectorFactory()> ->_CWE200_
<org.geotools.data.FIDSQuery: java.lang.String getVersion()> ->_CWE200_
<org.zaproxy.zap.spider.URLCanonicalizer: java.lang.String getCleanedPath(java.lang.String,org.zaproxy.zap.spider.SpiderParam$HandleParametersOption,boolean)> ->_CWE200_
<org.zkoss.idom.DocType: java.lang.String getSystemId()> ->_CWE200_
<org.zkoss.idom.DocType: java.lang.String getName()> ->_CWE200_
<org.zkoss.idom.DocType: short getNodeType()> ->_CWE200_
<edu.berkeley.nlp.lm.StupidBackoffLm: float getLogProb(int[],int,int)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.Boolean getPassiveMode(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.vividsolutions.jts.index.chain.MonotoneChain: int getEndIndex()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: double readDouble()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: int getNumPoints()> ->_CWE200_
<javassist.compiler.MemberCodeGen: int atFieldRead(javassist.CtField,boolean)> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.String getLocalName()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderScope: org.zaproxy.zap.extension.spider.ExtensionSpider getExtensionSpider()> ->_CWE200_
<com.vividsolutions.jts.operation.IsSimpleOp: com.vividsolutions.jts.geom.Coordinate getNonSimpleLocation()> ->_CWE200_
<com.zones.selection.CuboidSelection: long getSize()> ->_CWE200_
<org.apache.commons.vfs2.util.MonitorInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileObject: java.io.InputStream getInputStream(long)> ->_CWE200_
<org.geotools.referencing.cs.DefaultEllipsoidalCS: double getLongitude(double[])> ->_CWE200_
<org.zkoss.bind.xel.zel.ValidationMessagesELResolver: java.util.Iterator getFeatureDescriptors(org.zkoss.zel.ELContext,java.lang.Object)> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: java.util.List getChildren()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getURI()> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.io.InputStream)> ->_CWE200_
<openlr.decoder.data.CandidateLinePair: int getDestIndex()> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.geotools.data.simple.SimpleFeatureCollection getFeatures(org.opengis.filter.Filter)> ->_CWE200_
<com.vividsolutions.jts.geom.OctagonalEnvelope: double getMaxA()> ->_CWE200_
<com.vividsolutions.jts.geom.OctagonalEnvelope: double getMaxB()> ->_CWE200_
<com.vividsolutions.jts.geom.OctagonalEnvelope: double getMaxY()> ->_CWE200_
<com.vividsolutions.jts.geom.OctagonalEnvelope: double getMaxX()> ->_CWE200_
<org.springframework.validation.DataBinder: org.springframework.beans.SimpleTypeConverter getSimpleTypeConverter()> ->_CWE200_
<org.apache.commons.vfs2.provider.gzip.GzipFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<com.mchange.v1.identicator.IdWeakHashMap: java.lang.Object get(java.lang.Object)> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaValidator: java.lang.Object getPropertyDefault(java.lang.String)> ->_CWE200_
<com.mchange.v1.db.sql.DriverManagerDataSource: int getLoginTimeout()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.Object getContent(java.lang.String)> ->_CWE200_
<com.mchange.v2.c3p0.management.PooledDataSourceManager: int getThreadPoolNumActiveThreads()> ->_CWE200_
<org.zaproxy.zap.extension.spider.ExtensionSpider: java.lang.String getAuthor()> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object readRecord(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.ResolvingDecoder)> ->_CWE200_
<org.apache.xerces.impl.xs.identity.Selector: org.apache.xerces.impl.xs.identity.IdentityConstraint getIDConstraint()> ->_CWE200_
<org.geotools.referencing.datum.DefaultPrimeMeridian: double getGreenwichLongitude(javax.measure.unit.Unit)> ->_CWE200_
<com.vividsolutions.jts.geom.util.PolygonExtracter: java.util.List getPolygons(com.vividsolutions.jts.geom.Geometry,java.util.List)> ->_CWE200_
<org.zkoss.idom.transform.Transformer: java.lang.String getOutputProperty(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.io.gml2.GMLWriter: java.lang.String write(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.apache.avro.reflect.ReflectDatumReader: java.lang.Object readInt(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.Decoder)> ->_CWE200_
<com.mchange.v1.db.sql.schemarep.TypeRepIdenticator: com.mchange.v1.db.sql.schemarep.TypeRepIdenticator getInstance()> ->_CWE200_
<org.dom4j.jaxb.JAXBReader: org.dom4j.Document read(org.xml.sax.InputSource)> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: java.lang.String getCode()> ->_CWE200_
<org.zkoss.bind.xel.zel.ValidationMessagesELResolver: java.lang.Object getValue(org.zkoss.zel.ELContext,java.lang.Object,java.lang.Object)> ->_CWE200_
<com.tomtom.cpu.coredb.commons.utils.NessUUID: int getNibbleFromChar(char)> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.OverlayOp: com.vividsolutions.jts.geom.Geometry getResultGeometry(int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.attribute.ContentInformation getContentInformation()> ->_CWE200_
<com.tomtom.cpu.coredb.readapi.BidirectionalDelta: com.tomtom.cpu.coredb.mapdata.MapData getDelta()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: org.apache.commons.vfs2.provider.tar.TarEntry[] getDirectoryEntries()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.checkin.SvnCheckInConsumer: java.util.List getCheckedInFiles()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: int readInt()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader updatingReader(java.lang.Object)> ->_CWE200_
<openlr.location.utils.worker.RectangleRW: openlr.location.Location readLocationString(java.lang.String,java.lang.String[],openlr.map.MapDatabase)> ->_CWE200_
<com.vividsolutions.jts.noding.SegmentStringDissolver: java.util.Collection getDissolved()> ->_CWE200_
<com.vividsolutions.jts.geom.impl.CoordinateArraySequence: double getOrdinate(int,int)> ->_CWE200_
<org.zkoss.zk.ui.metainfo.impl.WidgetDefinitionImpl: java.util.Collection getMoldNames()> ->_CWE200_
<org.apache.commons.vfs2.provider.URLFileName: java.lang.String getPathQueryEncoded(java.lang.String)> ->_CWE200_
<org.jboss.resteasy.client.ClientRequest: java.lang.String getUri()> ->_CWE200_
<org.zkoss.io.Files: byte[] readAll(java.io.InputStream)> ->_CWE200_
<com.vividsolutions.jts.index.strtree.AbstractNode: java.util.List getChildBoundables()> ->_CWE200_
<org.zkoss.idom.Element: org.zkoss.idom.Attribute setAttribute(org.zkoss.idom.Attribute)> ->_CWE200_
<org.apache.thrift.protocol.TJSONProtocol: double readJSONDouble()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulator: com.vividsolutions.jts.index.kdtree.KdTree getKDT()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.export.SvnExeExportCommand: org.apache.maven.scm.command.export.ExportScmResult executeExportCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.ScmVersion,java.lang.String)> ->_CWE200_
<org.springframework.beans.factory.support.MethodOverride: java.lang.String getMethodName()> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderSubtree: org.zaproxy.zap.extension.spider.ExtensionSpider getExtensionSpider()> ->_CWE200_
<edu.berkeley.nlp.lm.array.CustomWidthArray: int getFullWidth()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.NullSuffixForm getNull(java.lang.String,zemberek.morphology.lexicon.SuffixFormTemplate)> ->_CWE200_
<com.mchange.v2.c3p0.impl.NewProxyCallableStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.mapimpl.AllOfValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom_poi.domain.AllOfValidityDirection$RANGE getItem()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.AbstractEntityProvider: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.Tbz2FileProvider: java.lang.String[] getSchemes()> ->_CWE200_
<org.zaproxy.zap.extension.auth.AuthAPI: org.parosproxy.paros.network.HttpMessage getLoginRequest(int)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: org.apache.commons.vfs2.FileContentInfo getContentInfo()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileProvider: org.apache.commons.vfs2.FileSystemConfigBuilder getConfigBuilder()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferOp: com.vividsolutions.jts.geom.Geometry getResultGeometry(double)> ->_CWE200_
<org.jboss.resteasy.util.HttpServletRequestDelegate: java.lang.String[] getParameterValues(java.lang.String)> ->_CWE200_
<org.apache.regexp.StreamCharacterIterator: int read(int)> ->_CWE200_
<openlr.location.InvalidLocation: openlr.map.GeoCoordinates getCenterPoint()> ->_CWE200_
<com.vividsolutions.jts.io.gml2.GMLHandler: com.vividsolutions.jts.geom.Geometry getGeometry()> ->_CWE200_
<org.zkoss.idom.Document: org.w3c.dom.DocumentType getDoctype()> ->_CWE200_
<org.geotools.referencing.operation.transform.GeocentricTransform: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.jboss.resteasy.mock.MockHttpRequest: org.jboss.resteasy.mock.MockHttpRequest create(java.lang.String,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: com.vividsolutions.jts.planargraph.Node getFromNode()> ->_CWE200_
<org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.MovableBridgeSignImpl: java.lang.Integer getLayerId()> ->_CWE200_
<com.vividsolutions.jts.geom.Point: com.vividsolutions.jts.geom.CoordinateSequence getCoordinateSequence()> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.Key: com.vividsolutions.jts.geom.Envelope getEnvelope()> ->_CWE200_
<org.zkoss.idom.Document: java.lang.String getXmlVersion()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferParameters: int getJoinStyle()> ->_CWE200_
<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader createXMLReader()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceInIndexArea()> ->_CWE200_
<openlr.rawLocRef.RawGridLocRef: openlr.map.GeoCoordinates getLowerLeftPoint()> ->_CWE200_
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.xerces.jaxp.DefaultValidationErrorHandler: void error(org.xml.sax.SAXParseException)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEnd: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.geotools.referencing.factory.DatumAliases: java.lang.String readLine(java.io.BufferedReader)> ->_CWE200_
<org.zkoss.bind.impl.SystemValidators: org.zkoss.bind.Validator get(java.lang.String)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.DocumentProvider: org.w3c.dom.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: int getBoundaryDimension()> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object readArray(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.ResolvingDecoder)> ->_CWE200_
<org.zkoss.zul.Grid: java.util.Collection getHeads()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.JavaType)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.TopologyLocation: int[] getLocations()> ->_CWE200_
<org.apache.commons.vfs2.provider.FileContentThreadData: int getRastrsSize()> ->_CWE200_
<com.nesscomputing.types.PlatformId: java.util.UUID getId()> ->_CWE200_
<org.geotools.referencing.operation.transform.IdentityTransform: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<com.vividsolutions.jts.simplify.TaggedLineString: com.vividsolutions.jts.simplify.TaggedLineSegment[] getSegments()> ->_CWE200_
<org.apache.maven.scm.provider.ScmUrlUtils: java.lang.String getDelimiter(java.lang.String)> ->_CWE200_
<org.apache.avro.io.DirectBinaryDecoder: int readInt()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarBuffer: int getCurrentRecordNum()> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.opengis.feature.simple.SimpleFeatureType getSchema()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: java.lang.String getMetaPropertyValue(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.PrecisionModel: double getOffsetY()> ->_CWE200_
<com.vividsolutions.jts.geom.PrecisionModel: double getOffsetX()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarInputStream: void debug(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.NodeBase: java.util.List getItems()> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: java.util.List getElements()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeIntersection: double getDistance()> ->_CWE200_
<com.tomtom.cpu.coredb.client.impl.FeaturesStreamingIterator: com.tomtom.cpu.coredb.mapdata.MapData readNextMapDataChunk()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getExportCommand()> ->_CWE200_
<com.google.common.io.MultiInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarBuffer: int getRecordSize()> ->_CWE200_
<org.jboss.resteasy.client.core.VoidEntityTypeFactory: java.lang.Class getEntityType(int,javax.ws.rs.core.MultivaluedMap)> ->_CWE200_
<openlr.location.InvalidLocation: int getNumberOfColumns()> ->_CWE200_
<org.apache.http.impl.conn.LoggingSessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)> ->_CWE200_
<com.vividsolutions.jts.simplify.LineSegmentVisitor: java.util.ArrayList getItems()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpRandomAccessContent: long getFilePointer()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.FileObject getChild(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: int getUserID()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarBuffer: void debug(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessContent: java.lang.String readLine()> ->_CWE200_
<openlr.location.GridLocation: openlr.map.GeoCoordinates getUpperRightPoint()> ->_CWE200_
<org.geotools.referencing.operation.projection.Krovak: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: java.lang.String getRootURI()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.String getRecentDateFormat(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.avro.io.ResolvingDecoder: int readEnum()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.w3c.dom.Node getParentNode()> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zk.ui.Component getCell(int,int)> ->_CWE200_
<org.zkoss.bind.validator.BeanValidator: java.lang.Object[] getValidationInfo(org.zkoss.bind.ValidationContext,java.lang.Object,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: com.vividsolutions.jts.geom.Point getPointN(int)> ->_CWE200_
<org.zaproxy.zap.extension.auth.ContextAuth: org.parosproxy.paros.network.HttpMessage getLoginMsg()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulator: com.vividsolutions.jts.geom.Coordinate[] getPointArray()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceInBuilt_UpArea()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulator: double getTolerance()> ->_CWE200_
<com.mchange.v2.c3p0.JndiRefForwardingDataSource: int getLoginTimeout()> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.CoordinateSequence readCoordinateSequence(int)> ->_CWE200_
<org.dom4j.jaxb.JAXBReader: org.dom4j.Document read(java.io.Reader,java.lang.String)> ->_CWE200_
<com.mchange.v2.c3p0.DriverManagerDataSource: void setLoginTimeout(int)> ->_CWE200_
<javassist.util.proxy.ProxyObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarInputStream: int getRecordSize()> ->_CWE200_
<org.apache.html.dom.HTMLTextAreaElementImpl: boolean getReadOnly()> ->_CWE200_
<org.geotools.styling.UserLayerImpl: org.opengis.feature.simple.SimpleFeatureType getInlineFeatureType()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.XmlDictionaryModelStoreHelper: com.teleatlas.global.common.ddct.impl.MappingRefContainer readMappingRefs(java.lang.String,com.teleatlas.global.common.ddct.DictionaryModelDescriptor,com.teleatlas.global.common.ddct.DictionaryModelDescriptor)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.String getRecentDateFormat(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.zaproxy.zap.extension.spider.ExtensionSpider: boolean onHttpRequestSend(org.parosproxy.paros.network.HttpMessage)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.Class getConfigClass()> ->_CWE200_
<org.apache.thrift.protocol.TJSONProtocol: org.apache.thrift.TByteArrayOutputStream readJSONString(boolean)> ->_CWE200_
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult getInternalBindingResult()> ->_CWE200_
<com.vividsolutions.jts.util.Debug: void instancePrintObject(java.lang.Object)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEndStar: int getLocation(int,com.vividsolutions.jts.geom.Coordinate,com.vividsolutions.jts.geomgraph.GeometryGraph[])> ->_CWE200_
<com.vividsolutions.jts.algorithm.InteriorPointArea: com.vividsolutions.jts.geom.Coordinate getInteriorPoint()> ->_CWE200_
<javassist.bytecode.ConstPool: int readOne(java.io.DataInputStream)> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.MultiPoint readMultiPoint()> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: java.lang.String getTypeName()> ->_CWE200_
<org.joda.time.tz.DefaultNameProvider: java.lang.String[] getNameSet(java.util.Locale,java.lang.String,java.lang.String)> ->_CWE200_
<org.apache.commons.io.input.CharSequenceReader: int read(char[],int,int)> ->_CWE200_
<org.springframework.validation.AbstractErrors: org.springframework.validation.FieldError getFieldError(java.lang.String)> ->_CWE200_
<javassist.compiler.Lex: int readNumber(int,javassist.compiler.Token)> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.TypeReference)> ->_CWE200_
<org.zkoss.spring.web.context.request.IdSpaceScope: java.lang.String getConversationId()> ->_CWE200_
<org.geotools.filter.FidFilterImpl: java.util.Set getIDs()> ->_CWE200_
<org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream: int read(byte[],int,int)> ->_CWE200_
<com.vividsolutions.jts.operation.linemerge.LineMergeEdge: com.vividsolutions.jts.geom.LineString getLine()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getRemoveCommand()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: com.vividsolutions.jts.geomgraph.EdgeRing getEdgeRing()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: int getNumPoints()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getLocalName()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferSubgraph: com.vividsolutions.jts.geom.Envelope getEnvelope()> ->_CWE200_
<org.springframework.validation.BindException: java.lang.Object getRawFieldValue(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearIterator: com.vividsolutions.jts.geom.Coordinate getSegmentEnd()> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterZapRequestId: int getId()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getGraphicOverviews()> ->_CWE200_
<org.geotools.referencing.operation.transform.AffineTransform2D: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.springframework.validation.AbstractErrors: int getGlobalErrorCount()> ->_CWE200_
<org.geotools.metadata.iso.identification.KeywordsImpl: org.opengis.metadata.identification.KeywordType getType()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceBelongingToEntryPoint()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.mkdir.SvnMkdirConsumer: java.util.List getCreatedDirs()> ->_CWE200_
<org.springframework.core.type.classreading.SimpleMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)> ->_CWE200_
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser)> ->_CWE200_
<com.vividsolutions.jts.index.strtree.AbstractNode: int getLevel()> ->_CWE200_
<org.zkoss.idom.Attribute: java.lang.String getTagName()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getClientExecutionInterceptorRegistry()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileProvider: org.apache.commons.vfs2.FileSystem doCreateFileSystem(org.apache.commons.vfs2.FileName,org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.ScmVersion,boolean)> ->_CWE200_
<org.zaproxy.zap.view.SessionExcludeFromSpiderPanel: javax.swing.JTable getTableIgnore()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.FileObject[] getChildren()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getServerMessageBodyWriterInterceptorRegistry()> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.DoubleBits: int getBit(int)> ->_CWE200_
<org.joda.time.tz.ZoneInfoProvider: java.util.Map loadZoneInfoMap(java.io.InputStream)> ->_CWE200_
<org.apache.http.impl.client.DefaultUserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)> ->_CWE200_
<openlr.location.utils.worker.PolygonRW: openlr.location.Location readLocationString(java.lang.String,java.lang.String[],openlr.map.MapDatabase)> ->_CWE200_
<com.vividsolutions.jts.awt.GeometryCollectionShape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)> ->_CWE200_
<org.zaproxy.zap.spider.Spider: org.zaproxy.zap.spider.SpiderParam getSpiderParam()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: java.util.List getContextResolvers(java.lang.Class,javax.ws.rs.core.MediaType)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.ObjectBasedValueSource: java.lang.Object getValue(java.lang.String)> ->_CWE200_
<org.jboss.resteasy.plugins.server.tjws.PatchedHttpServletRequest: java.lang.String getRequestURI()> ->_CWE200_
<org.zkoss.bind.converter.sys.GridModelConverter: org.zkoss.zul.ListModel getComponentModel(org.zkoss.zul.Grid)> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionUserAgent(java.lang.String)> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object readEnum(org.apache.avro.Schema,org.apache.avro.io.Decoder)> ->_CWE200_
<com.vividsolutions.jts.geom.PrecisionModel: int getMaximumSignificantDigits()> ->_CWE200_
<org.apache.avro.io.JsonDecoder: java.nio.ByteBuffer readBytes(java.nio.ByteBuffer)> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.Coordinate[] getCoordinatesNoLeftParen()> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: int getDimension()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.w3c.dom.NamedNodeMap getAttributes()> ->_CWE200_
<com.vividsolutions.jts.io.InputStreamInStream: void read(byte[])> ->_CWE200_
<org.springframework.expression.spel.ast.Identifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaValidator: org.apache.xerces.xni.parser.XMLDocumentSource getDocumentSource()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.Settings: java.lang.String getModelEncoding()> ->_CWE200_
<org.zkoss.zk.ui.http.ExecutionImpl: java.lang.String[] getParameterValues(java.lang.String)> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedProperties()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.Object setContent(java.lang.String,java.lang.Object)> ->_CWE200_
<openlr.location.utils.worker.ClosedLineRW: openlr.location.Location readLocationString(java.lang.String,java.lang.String[],openlr.map.MapDatabase)> ->_CWE200_
<org.geotools.referencing.operation.transform.LogarithmicTransform1D: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceInOrder9Area()> ->_CWE200_
<org.apache.html.dom.HTMLInputElementImpl: boolean getReadOnly()> ->_CWE200_
<org.geotools.referencing.datum.DefaultEllipsoid: javax.measure.unit.Unit getAxisUnit()> ->_CWE200_
<com.vividsolutions.jts.triangulate.SplitSegment: double getConstrainedLength(double)> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanelTableModel: java.lang.String getColumnName(int)> ->_CWE200_
<com.google.common.io.CharStreams: java.lang.String readFirstLine(com.google.common.io.InputSupplier)> ->_CWE200_
<com.vividsolutions.jts.index.ArrayListVisitor: java.util.ArrayList getItems()> ->_CWE200_
<com.vividsolutions.jts.noding.SegmentIntersectionDetector: com.vividsolutions.jts.geom.Coordinate getIntersection()> ->_CWE200_
<com.vividsolutions.jts.geom.impl.PackedCoordinateSequenceFactory: int getDimension()> ->_CWE200_
<org.apache.commons.vfs2.operations.AbstractFileOperationProvider: org.apache.commons.vfs2.operations.FileOperation getOperation(org.apache.commons.vfs2.FileObject,java.lang.Class)> ->_CWE200_
<com.mchange.v1.identicator.WeakIdHashKey: java.lang.Object getKeyObj()> ->_CWE200_
<org.apache.regexp.ReaderCharacterIterator: int read(int)> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: org.zaproxy.zap.utils.ZapTextArea getDomainScopeTextArea()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: int readUnsignedShort()> ->_CWE200_
<com.vividsolutions.jts.index.chain.MonotoneChain: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getReversePOIBelongingToElectricVehicleStation()> ->_CWE200_
<org.zkoss.idom.transform.Transformer: java.util.Properties getOutputProperties()> ->_CWE200_
<com.zones.selection.CuboidSelection: int getPointsSize()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.SweepLineEvent: int getDeleteEventIndex()> ->_CWE200_
<openlr.decoder.data.CandidateLinesResultSet: java.util.List getCandidateLines(openlr.LocationReferencePoint)> ->_CWE200_
<openlr.location.utils.worker.PointAlongRW: openlr.location.Location readLocationString(java.lang.String,java.lang.String[],openlr.map.MapDatabase)> ->_CWE200_
<com.vividsolutions.jts.simplify.TaggedLineString: com.vividsolutions.jts.geom.Coordinate[] getParentCoordinates()> ->_CWE200_
<org.geotools.referencing.operation.projection.LambertAzimuthalEqualArea: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: org.apache.commons.vfs2.FileSystemManager getFileSystemManager()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.ForeignIdentifiableDecoratorHelper: java.util.List getProperties(com.teleatlas.global.common.ddct.impl.DictionaryPropertyCollection,com.teleatlas.global.common.ddct.DictionaryModel,java.util.Collection,com.teleatlas.global.common.ddct.HasProperties,boolean)> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: javax.ws.rs.ext.ContextResolver getContextResolver(java.lang.Class,javax.ws.rs.core.MediaType)> ->_CWE200_
<org.geotools.data.store.ContentDataStore: org.geotools.data.FeatureReader getFeatureReader(org.geotools.data.Query,org.geotools.data.Transaction)> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: java.lang.String getTypeShortName()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.lang.String getAnchorPointStableID()> ->_CWE200_
<org.reflections.adapters.JavassistAdapter: java.util.List getParameterNames(javassist.bytecode.MethodInfo)> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.MultiPolygon readMultiPolygon()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: boolean getEdgeDirection()> ->_CWE200_
<org.springframework.core.PrioritizedParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)> ->_CWE200_
<org.jboss.resteasy.core.messagebody.ReaderUtility: java.lang.Object doRead(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.InputStream)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: int getEdgeIndex(com.vividsolutions.jts.triangulate.quadedge.QuadEdge)> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,java.util.Date,java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarUtils: int getLongOctalBytes(long,byte[],int,int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.ManeuverValidityForCalculatedProhibitedManeuverImpl: java.util.Collection getValidityPeriod()> ->_CWE200_
<org.zkoss.idom.Document: org.w3c.dom.DOMImplementation getImplementation()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.zaproxy.zap.extension.auth.ContextAuth: org.parosproxy.paros.model.SiteNode getLoginSiteNode()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEndStar: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.Object setContent(java.lang.Object)> ->_CWE200_
<org.zkoss.idom.Attribute: org.zkoss.idom.Document getDocument()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: java.net.URL getURL()> ->_CWE200_
<org.dom4j.rule.RuleManager: org.dom4j.rule.Rule getMatchingRule(java.lang.String,org.dom4j.Node)> ->_CWE200_
<org.geotools.geometry.text.WKTParser: org.opengis.geometry.primitive.Curve readLinearRingText(java.io.StreamTokenizer)> ->_CWE200_
<org.apache.commons.codec.binary.BaseNCodecInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: org.apache.avro.io.parsing.Symbol getSymbol(org.apache.avro.Schema)> ->_CWE200_
<org.zkoss.idom.Attribute: short getNodeType()> ->_CWE200_
<org.geotools.referencing.wkt.AbstractConsole: java.lang.String readLine(java.io.LineNumberReader)> ->_CWE200_
<com.vividsolutions.jts.geom.LinearRing: int getBoundaryDimension()> ->_CWE200_
<openlr.location.InvalidLocation: openlr.map.Line getPoiLine()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.TrustEveryoneUserInfo: java.lang.String getPassword()> ->_CWE200_
<com.vividsolutions.jts.geom.IntersectionMatrix: int get(int,int)> ->_CWE200_
<org.joda.time.chrono.BuddhistChronology: java.lang.Object readResolve()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: org.apache.avro.util.Utf8 readString(org.apache.avro.util.Utf8)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle getAdjacentTriangleAcrossEdge(int)> ->_CWE200_
<com.vividsolutions.jts.io.WKTWriter: java.lang.String write(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.apache.log4j.pattern.BridgePatternParser: org.apache.log4j.helpers.PatternConverter parse()> ->_CWE200_
<com.sittinglittleduck.DirBuster.Manager: void setUpManager(java.lang.String[],int,int,java.lang.String,java.lang.String,int,com.sittinglittleduck.DirBuster.gui.StartGUI,int,java.lang.String,java.lang.String)> ->_CWE200_
<org.springframework.validation.BindException: java.util.List getAllErrors()> ->_CWE200_
<org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream: int read(byte[])> ->_CWE200_
<org.apache.commons.io.input.BOMInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: java.io.OutputStream getOutputStream()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.OffsetCurveBuilder: java.util.List getRingCurve(com.vividsolutions.jts.geom.Coordinate[],int,double)> ->_CWE200_
<org.zkoss.idom.DocType: java.lang.String getPublicId()> ->_CWE200_
<zemberek.morphology.lexicon.graph.IdMaker: java.lang.String get(java.lang.String)> ->_CWE200_
<org.springframework.validation.AbstractErrors: org.springframework.validation.ObjectError getGlobalError()> ->_CWE200_
<org.jboss.resteasy.mock.MockHttpRequest: javax.ws.rs.core.MultivaluedMap getDecodedFormParameters()> ->_CWE200_
<org.apache.commons.vfs2.provider.https.HttpsFileNameParser: org.apache.commons.vfs2.provider.FileNameParser getInstance()> ->_CWE200_
<org.springframework.validation.BindException: java.lang.String[] getSuppressedFields()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.AddressAreaImpl: java.util.Collection getAssociationAddressAreaDetailedPostalPointasDetailedPostalPoint()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.Reader,java.lang.Class)> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.LinearRing readLinearRingText()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdgeStar: int getOutgoingDegree(com.vividsolutions.jts.geomgraph.EdgeRing)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: java.security.cert.Certificate[] getCertificates()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.util.Map getModel()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearIterator: com.vividsolutions.jts.geom.Coordinate getSegmentStart()> ->_CWE200_
<org.geotools.referencing.operation.transform.LinearTransform1D: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.springframework.validation.DataBinder: java.lang.String getObjectName()> ->_CWE200_
<org.zkoss.zkmax.bind.FormBeanValidator: java.lang.Class getBeanClass(org.zkoss.bind.ValidationContext,java.lang.Object)> ->_CWE200_
<com.vividsolutions.jtsexample.io.gml2.KMLHandler: void characters(char[],int,int)> ->_CWE200_
<org.codehaus.jackson.map.ser.impl.SimpleFilterProvider: org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setDefaultFilter(org.codehaus.jackson.map.ser.BeanPropertyFilter)> ->_CWE200_
<org.geotools.referencing.operation.MathTransformProvider: java.lang.Class getOperationType()> ->_CWE200_
<com.vividsolutions.jts.index.kdtree.KdNode: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.xerces.impl.io.ASCIIReader: int read(char[],int,int)> ->_CWE200_
<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getParameterType(int)> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.Rows getRows()> ->_CWE200_
<org.apache.commons.io.input.ProxyReader: int read()> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: org.apache.xerces.xni.parser.XMLDocumentSource getDocumentSource()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: void setPreferredAuthentications(org.apache.commons.vfs2.FileSystemOptions,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: int getNumPoints()> ->_CWE200_
<com.vividsolutions.jts.index.sweepline.SweepLineInterval: double getMin()> ->_CWE200_
<org.apache.commons.vfs2.util.MonitorRandomAccessContent: java.lang.String readUTF()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.StreamingOutputProvider: long getSize(javax.ws.rs.core.StreamingOutput,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEnd: com.vividsolutions.jts.geom.Coordinate getDirectedCoordinate()> ->_CWE200_
<com.vividsolutions.jts.index.sweepline.SweepLineInterval: double getMax()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultURLConnection: java.lang.String getContentType()> ->_CWE200_
<org.dom4j.util.UserDataAttribute: java.lang.Object getData()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: double getDeterminant()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.util.List getFieldErrors()> ->_CWE200_
<openlr.location.InvalidLocation: openlr.map.GeoCoordinates getLowerLeftPoint()> ->_CWE200_
<org.geotools.referencing.operation.builder.LocalizationGridTransform2D: int getSourceDimensions()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConstraintVertex: java.lang.Object getConstraint()> ->_CWE200_
<org.zkoss.idom.input.SAXBuilder: org.zkoss.idom.Document build(java.io.Reader)> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryFactory: com.vividsolutions.jts.geom.PrecisionModel getPrecisionModel()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.association.mapimpl.FaceOfHolidayAreaGroundImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.HolidayAreaGround getHolidayAreaGround()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getReverseServiceBelongingToService()> ->_CWE200_
<com.google.common.io.MultiInputStream: int read()> ->_CWE200_
<openlr.location.InvalidLocation: openlr.location.data.SideOfRoad getSideOfRoad()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.util.List getGlobalErrors()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.remove.SvnRemoveCommand: org.apache.maven.scm.ScmResult executeRemoveCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.lang.String)> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.zkoss.idom.Group getParent()> ->_CWE200_
<org.geotools.data.shapefile.ShapefileDataStore: org.geotools.data.shapefile.prj.PrjFileReader openPrjReader()> ->_CWE200_
<org.geotools.data.FIDSQuery: java.lang.String[] getPropertyNames()> ->_CWE200_
<org.geotools.data.shapefile.dbf.DbaseFileReader: java.lang.Object readObject(int,int)> ->_CWE200_
<org.springframework.validation.BindException: org.springframework.validation.FieldError getFieldError(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getPath()> ->_CWE200_
<org.zkoss.idom.Element: org.w3c.dom.NamedNodeMap getAttributes()> ->_CWE200_
<org.parosproxy.paros.network.HttpInputStream: java.lang.String readHeader()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: com.vividsolutions.jts.geomgraph.Edge getCollapsedEdge()> ->_CWE200_
<org.apache.xerces.impl.validation.ValidationState: java.lang.String getSymbol(java.lang.String)> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanel: org.parosproxy.paros.model.SiteNode getSiteNode(java.lang.String)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.InputStreamProvider: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.geotools.referencing.operation.projection.AlbersEqualArea: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.GraphComponent: com.vividsolutions.jts.geomgraph.Label getLabel()> ->_CWE200_
<org.geotools.referencing.operation.projection.MercatorPseudoProvider: java.lang.Class getOperationType()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Node: com.vividsolutions.jts.geomgraph.EdgeEndStar getEdges()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.DerivationalSuffixTemplate getDerivationalTemplate(java.lang.String,zemberek.morphology.lexicon.Suffix,zemberek.morphology.lexicon.graph.TerminationType)> ->_CWE200_
<org.apache.commons.io.input.ProxyInputStream: int read(byte[],int,int)> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.geotools.data.DataAccess getDataStore()> ->_CWE200_
<org.apache.commons.vfs2.provider.url.UrlFileNameParser: org.apache.commons.vfs2.FileName parseUri(org.apache.commons.vfs2.provider.VfsComponentContext,org.apache.commons.vfs2.FileName,java.lang.String)> ->_CWE200_
<org.apache.avro.reflect.ReflectDatumReader: java.lang.Object readJavaArray(java.lang.Object,org.apache.avro.Schema,long,org.apache.avro.io.ResolvingDecoder)> ->_CWE200_
<com.vividsolutions.jts.algorithm.CentralEndpointIntersector: com.vividsolutions.jts.geom.Coordinate getIntersection(com.vividsolutions.jts.geom.Coordinate,com.vividsolutions.jts.geom.Coordinate,com.vividsolutions.jts.geom.Coordinate,com.vividsolutions.jts.geom.Coordinate)> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.DoubleBits: double truncateToPowerOfTwo(double)> ->_CWE200_
<org.zkoss.idom.Attribute: org.zkoss.idom.Namespace getNamespace()> ->_CWE200_
<edu.berkeley.nlp.lm.array.CustomWidthArray: long get(long,int,int)> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaLoader: java.lang.Object getParameter(java.lang.String)> ->_CWE200_
<com.mchange.v2.c3p0.management.PooledDataSourceManager: int getThreadPoolNumIdleThreads()> ->_CWE200_
<org.apache.maven.scm.provider.ScmProviderRepositoryWithHost: java.lang.String getPrivateKey()> ->_CWE200_
<com.thoughtworks.paranamer.JavadocParanamer: java.lang.String[] getParameterNames2(java.io.InputStream,java.lang.String,java.lang.Class[])> ->_CWE200_
<com.vividsolutions.jts.simplify.TaggedLineSegment: int getIndex()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulator: com.vividsolutions.jts.triangulate.ConstraintVertexFactory getVertexFactory()> ->_CWE200_
<org.geotools.referencing.factory.IdentifiedObjectFinder: org.opengis.metadata.citation.Citation getAuthority()> ->_CWE200_
<org.springframework.validation.DataBinder: org.springframework.validation.BindException getErrors()> ->_CWE200_
<com.tomtom.cpu.coredb.commons.utils.NessUUID: long decode(java.lang.String,int[],int)> ->_CWE200_
<org.jboss.resteasy.client.ClientRequest: javax.ws.rs.core.MultivaluedMap getHeaders()> ->_CWE200_
<org.apache.commons.vfs2.provider.URLFileName: java.lang.String getURIEncoded(java.lang.String)> ->_CWE200_
<org.springframework.validation.DirectFieldBindingResult: java.lang.Object getTarget()> ->_CWE200_
<openlr.location.InvalidLocation: java.util.List getLocationLines()> ->_CWE200_
<com.vividsolutions.jts.operation.valid.TopologyValidationError: int getErrorType()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.lang.String getExternalIdentifier()> ->_CWE200_
<com.mchange.v2.sql.filter.SynchronizedFilterDataSource: int getLoginTimeout()> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.GeometryFactory getFactory()> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: java.util.Collection getAlias()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultURLConnection: long getLastModified()> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: int getTypeId()> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: org.opengis.util.InternationalString getShortestTitle(org.opengis.metadata.citation.Citation)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.os.OperatingSystemUtils: java.util.Properties getSystemEnvVars()> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionThreadCount(int)> ->_CWE200_
<org.geotools.referencing.datum.DefaultEllipsoid: double getSemiMajorAxis()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.StreetIdentifierInfoImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.SideOfLine getSideOfLine()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarFileObject: java.util.jar.Manifest getManifest()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarBuffer: int getBlockSize()> ->_CWE200_
<org.geotools.metadata.iso.spatial.GridSpatialRepresentationImpl: java.util.List getAxisDimensionsProperties()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getLastChangedRevision()> ->_CWE200_
<org.zkoss.zul.Grid: java.lang.String getEmptyMessage()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.RegexBasedInterpolator: java.util.List getFeedback()> ->_CWE200_
<com.vividsolutions.jts.index.intervalrtree.SortedPackedIntervalRTree: void printNode(com.vividsolutions.jts.index.intervalrtree.IntervalRTreeNode)> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.ForeignIdentifiableDecoratorHelper: com.teleatlas.global.common.ddct.DictionaryProperty getProperty(com.teleatlas.global.common.ddct.impl.DictionaryPropertyCollection,com.teleatlas.global.common.ddct.DictionaryModel,java.util.Collection,com.teleatlas.global.common.ddct.HasProperties,java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferSubgraph: java.util.List getDirectedEdges()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.IsStrictlySidedImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.StrictlySided getSideOfLine()> ->_CWE200_
<org.codehaus.jackson.map.introspect.AnnotatedConstructor: int getParameterCount()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: void printReverse(java.io.PrintStream)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: java.lang.String readUTF()> ->_CWE200_
<org.apache.xerces.impl.dv.xs.TypeValidator: int getDataLength(java.lang.Object)> ->_CWE200_
<com.vividsolutions.jts.noding.FastNodingValidator: java.lang.String getErrorMessage()> ->_CWE200_
<org.geotools.referencing.operation.builder.BursaWolfTransformBuilder: double[] getParameters()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.PlanarGraph: java.util.Iterator getNodeIterator()> ->_CWE200_
<org.apache.commons.compress.archivers.dump.InvalidFormatException: long getOffset()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.SweepLineEvent: java.lang.Object getObject()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: int getDepth()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],org.codehaus.jackson.type.TypeReference)> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.HolidayAreaGroundImpl: java.util.Collection getFaceOfHolidayAreaGround()> ->_CWE200_
<org.zkoss.zkmax.init.TabletThemeProvider: int getWCSCacheControl(org.zkoss.zk.ui.Execution,java.lang.String)> ->_CWE200_
<org.zkoss.idom.Document: java.lang.String getXmlEncoding()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Depth: int getDelta(int)> ->_CWE200_
<openlr.location.GridLocation: openlr.map.GeoCoordinates getCenterPoint()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.lang.String getXMLObjectIdentifier()> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanelTableModel: java.lang.Class getColumnClass(int)> ->_CWE200_
<org.dom4j.io.SAXReader: org.dom4j.Document read(java.lang.String)> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.SuffixForm getSuffixFormById(java.lang.String)> ->_CWE200_
<com.mchange.v2.c3p0.DriverManagerDataSource: int getLoginTimeout()> ->_CWE200_
<com.vividsolutions.jts.operation.linemerge.LineMerger: java.util.Collection getMergedLineStrings()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.FileSystem getFileSystem()> ->_CWE200_
<zemberek.morphology.apps.UnidentifiedTokenParser: zemberek.morphology.structure.StemAndEnding getFromNumeral(java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.blame.SvnBlameCommand: org.apache.maven.scm.command.blame.BlameScmResult executeBlameCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarBuffer: boolean readBlock()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getCredits()> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ContextEncodedProbBackoffLm readContextEncodedKneserNeyLmFromTextFile(java.util.List,edu.berkeley.nlp.lm.WordIndexer,int,edu.berkeley.nlp.lm.ConfigOptions,java.io.File)> ->_CWE200_
<org.apache.http.message.BasicHttpRequest: org.apache.http.ProtocolVersion getProtocolVersion()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: org.apache.commons.vfs2.FileType getType()> ->_CWE200_
<com.vividsolutions.jts.noding.IntersectionAdder: com.vividsolutions.jts.geom.Coordinate getProperIntersectionPoint()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixedPropertiesValueSource: java.lang.Object getValue(java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.ScmVersion,java.util.Date)> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: com.teleatlas.global.common.ddct.DictionaryMetaProperty getMetaProperty(java.lang.String)> ->_CWE200_
<org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry readNewEntry(boolean)> ->_CWE200_
<org.joda.time.field.DividedDateTimeField: int getMaximumValue()> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: org.opengis.metadata.citation.Citation getAuthority()> ->_CWE200_
<org.zkoss.bind.impl.ValidationContextImpl: java.lang.Object getValidatorArg(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: org.apache.commons.vfs2.FileName getParent()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeList: void print(java.io.PrintStream)> ->_CWE200_
<org.apache.maven.scm.provider.ScmProviderRepositoryWithHost: java.lang.String getPassphrase()> ->_CWE200_
<zemberek.morphology.structure.IdItem: java.lang.String getId()> ->_CWE200_
<com.vividsolutions.jts.index.kdtree.KdNode: java.lang.Object getData()> ->_CWE200_
<org.zkoss.idom.Text: short getNodeType()> ->_CWE200_
<org.apache.thrift.protocol.TJSONProtocol: java.lang.String readJSONNumericChars()> ->_CWE200_
<org.dom4j.io.XPP3Reader: org.dom4j.Document read(java.io.Reader)> ->_CWE200_
<org.geotools.metadata.iso.identification.BrowseGraphicImpl: java.net.URI getApplicationSchemaInformation()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.RightmostEdgeFinder: com.vividsolutions.jts.geomgraph.DirectedEdge getEdge()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.ProviderHelper: void writeTo(java.io.InputStream,java.io.OutputStream)> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: java.io.File[] getIdentities(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.HolidayAreaGroundImpl: java.util.Collection getFaceOfLevel1AreaFeature()> ->_CWE200_
<org.zkoss.idom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: org.apache.commons.vfs2.FileObject getFileFromCache(org.apache.commons.vfs2.FileName)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: org.apache.commons.vfs2.RandomAccessContent getRandomAccessContent(org.apache.commons.vfs2.util.RandomAccessMode)> ->_CWE200_
<org.geotools.metadata.iso.IdentifierImpl: java.lang.String getCode()> ->_CWE200_
<zemberek.core.io.IOs: java.io.BufferedReader getReader(java.io.InputStream,java.lang.String)> ->_CWE200_
<org.zkoss.idom.util.IDOMs: java.lang.String getRequiredAttributeValue(org.zkoss.idom.Element,java.lang.String)> ->_CWE200_
<org.geotools.referencing.operation.transform.WarpTransform2D: org.opengis.parameter.ParameterDescriptorGroup getParameterDescriptors()> ->_CWE200_
<org.zkoss.bind.impl.WeakIdentityMap: java.lang.Object get(java.lang.Object)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.MovableBridgeSignImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.PositionalAccuracy getPositionalAccuracy()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.String[] getShortMonthNames(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<openlr.location.utils.worker.PoiAccessRW: openlr.location.Location readLocationString(java.lang.String,java.lang.String[],openlr.map.MapDatabase)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getAssociationServiceWithAddressInformationDetailedPostalPointasDetailedPostalPoint()> ->_CWE200_
<org.springframework.validation.BindException: int getGlobalErrorCount()> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Geometry getGeometryN(int)> ->_CWE200_
<org.geotools.referencing.factory.IdentifiedObjectFinder: org.geotools.referencing.factory.AuthorityFactoryProxy getProxy()> ->_CWE200_
<com.zones.util.FileUtil: java.lang.String readFile(java.io.File)> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.io.File)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.Integer getDataTimeout(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.zkoss.idom.transform.Transformer: org.zkoss.idom.Document transform(javax.xml.transform.Source)> ->_CWE200_
<com.vividsolutions.jts.geom.util.LineStringExtracter: java.util.List getLines(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<com.vividsolutions.jts.planargraph.Node: int getIndex(com.vividsolutions.jts.planargraph.Edge)> ->_CWE200_
<com.vividsolutions.jts.algorithm.CentralEndpointIntersector: com.vividsolutions.jts.geom.Coordinate getIntersection()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_speed_profile.domain.mapimpl.StrictValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom_speed_profile.domain.AllOfValidityDirection$RANGE getItem()> ->_CWE200_
<org.apache.avro.io.ResolvingDecoder: long readLong()> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: java.lang.String getUserAgent()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.Vertex: com.vividsolutions.jts.triangulate.quadedge.Vertex circleCenter(com.vividsolutions.jts.triangulate.quadedge.Vertex,com.vividsolutions.jts.triangulate.quadedge.Vertex)> ->_CWE200_
<com.vividsolutions.jts.geom.Point: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getRepositoryUUID()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileObject: org.apache.commons.httpclient.methods.HeadMethod getHeadMethod()> ->_CWE200_
<org.apache.thrift.protocol.TCompactProtocol: long readVarint64()> ->_CWE200_
<org.apache.commons.io.input.ProxyReader: int read(java.nio.CharBuffer)> ->_CWE200_
<org.springframework.core.convert.support.IdToEntityConverter: java.util.Set getConvertibleTypes()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: byte getByteValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<org.apache.thrift.protocol.TCompactProtocol: int readVarint32()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulator: java.util.List getInitialVertices()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.Importance getImportance()> ->_CWE200_
<com.vividsolutions.jts.linearref.LengthLocationMap: com.vividsolutions.jts.linearref.LinearLocation getLocation(com.vividsolutions.jts.geom.Geometry,double)> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaValidator: boolean getXsiNil(org.apache.xerces.xni.QName,java.lang.String)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.FormUrlEncodedProvider: long getSize(javax.ws.rs.core.MultivaluedMap,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.MappingIterator readValues(java.io.File)> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderContext: org.parosproxy.paros.extension.ExtensionPopupMenuItem getPopupContextMenu(org.zaproxy.zap.model.Context,java.lang.String)> ->_CWE200_
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()> ->_CWE200_
<openlr.decoder.worker.GridDecoder: openlr.location.Location doDecoding(openlr.decoder.properties.OpenLRDecoderProperties,openlr.map.MapDatabase,openlr.rawLocRef.RawLocationReference)> ->_CWE200_
<org.zkoss.bind.impl.ValidationContextImpl: java.util.Map getProperties(java.lang.Object)> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: org.zkoss.zk.ui.Component getFellowIfAny(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarUtils: java.lang.StringBuffer parseName(byte[],int,int)> ->_CWE200_
<com.tomtom.cpu.coredb.client.impl.ByIdReadCalls: com.tomtom.cpu.api.features.Feature getFeatureById(java.util.UUID)> ->_CWE200_
<com.vividsolutions.jts.noding.MCIndexNoder: com.vividsolutions.jts.index.SpatialIndex getIndex()> ->_CWE200_
<org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry readOldAsciiEntry()> ->_CWE200_
<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)> ->_CWE200_
<org.apache.commons.vfs2.UserAuthenticationData: char[] getData(org.apache.commons.vfs2.UserAuthenticationData$Type)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEndStar: void print(java.io.PrintStream)> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: java.util.Map getAttributes()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.JavaType)> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: double getDoubleValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.PolygonBuilder: java.util.List getPolygons()> ->_CWE200_
<org.apache.commons.io.input.ProxyReader: int read(char[])> ->_CWE200_
<com.vividsolutions.jts.util.Stopwatch: java.lang.String getTimeString()> ->_CWE200_
<org.apache.xerces.impl.dv.xs.AnyURIDV: java.lang.String encode(java.lang.String)> ->_CWE200_
<org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream: java.lang.String readCString(int)> ->_CWE200_
<com.vividsolutions.jts.io.ByteOrderDataInStream: long readLong()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: org.springframework.validation.ObjectError getGlobalError()> ->_CWE200_
<zemberek.core.hash.ByteGramProvider: int[] getKey(int)> ->_CWE200_
<org.apache.maven.scm.provider.svn.util.SvnUtil: java.io.File getSettingsFile()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.Integer getSoTimeout(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)> ->_CWE200_
<javax.servlet.ServletInputStream: int readLine(byte[],int,int)> ->_CWE200_
<com.vividsolutions.jts.JTSVersion: int getPatch()> ->_CWE200_
<org.zkoss.zul.Grid: java.lang.String getOddRowSclass()> ->_CWE200_
<com.vividsolutions.jts.noding.IteratedNoder: java.util.Collection getNodedSubstrings()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixedPropertiesValueSource: java.lang.String getLastExpression()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: com.vividsolutions.jts.triangulate.quadedge.QuadEdge getEdge(int)> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getServerMessageBodyReaderInterceptorRegistry()> ->_CWE200_
<org.zkoss.zkmax.zul.impl.LiveGridDataLoader: int getLimit()> ->_CWE200_
<org.tukaani.xz.DeltaInputStream: int read(byte[],int,int)> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: int getThreadCount()> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: com.vividsolutions.jts.geom.LineString getExteriorRing()> ->_CWE200_
<org.zkoss.idom.Document: boolean getStrictErrorChecking()> ->_CWE200_
<org.opengis.parameter.InvalidParameterTypeException: java.lang.String getParameterName()> ->_CWE200_
<org.springframework.validation.MapBindingResult: java.lang.Object getTarget()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: org.apache.commons.vfs2.FileSystemOptions getFileSystemOptions()> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: java.lang.String getCodeSpace(org.opengis.metadata.citation.Citation)> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionPostForm(boolean)> ->_CWE200_
<org.geotools.data.memory.MemoryDataStore: org.geotools.data.FeatureReader getFeatureReader(java.lang.String)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.InputStreamProvider: long getSize(java.io.InputStream,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.apache.thrift.protocol.TBinaryProtocol: java.lang.String readStringBody(int)> ->_CWE200_
<com.google.common.io.CharStreams: java.lang.Object readLines(com.google.common.io.InputSupplier,com.google.common.io.LineProcessor)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getMkdirCommand()> ->_CWE200_
<org.springframework.beans.factory.support.MethodOverride: boolean isOverloaded()> ->_CWE200_
<javassist.compiler.Lex: int readLine(javassist.compiler.Token)> ->_CWE200_
<com.vividsolutions.jts.linearref.LengthLocationMap: double getLength(com.vividsolutions.jts.geom.Geometry,com.vividsolutions.jts.linearref.LinearLocation)> ->_CWE200_
<org.zkoss.idom.util.IDOMs: org.zkoss.idom.Element getFirstElement(org.zkoss.idom.Group)> ->_CWE200_
<org.zkoss.zul.Grid: java.lang.String getAlign()> ->_CWE200_
<org.springframework.beans.factory.config.ProviderCreatingFactoryBean: java.lang.Class getObjectType()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileSelectorInfo: int getDepth()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: int getNewIndex()> ->_CWE200_
<org.geotools.referencing.operation.builder.GridToEnvelopeMapper: org.opengis.referencing.cs.CoordinateSystem getCoordinateSystem()> ->_CWE200_
<org.zkoss.idom.util.SimpleLocator: int getLineNumber()> ->_CWE200_
<com.vividsolutions.jts.index.kdtree.KdNode: double getX()> ->_CWE200_
<com.vividsolutions.jts.index.kdtree.KdNode: double getY()> ->_CWE200_
<com.zones.util.FileUtil: boolean copyFile(java.io.InputStream,java.io.OutputStream)> ->_CWE200_
<org.zkoss.idom.Binary: java.lang.String getName()> ->_CWE200_
<com.vividsolutions.jts.precision.CommonBits: int getBit(long,int)> ->_CWE200_
<com.mchange.v2.c3p0.impl.C3P0PooledConnectionPoolManager: int getStatementDestroyerNumThreads()> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)> ->_CWE200_
<org.apache.http.impl.client.DefaultRedirectStrategyAdaptor: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_CWE200_
<org.geotools.data.FIDSQuery: java.net.URI getNamespace()> ->_CWE200_
<com.vividsolutions.jts.awt.GeometryCollectionShape: java.awt.Rectangle getBounds()> ->_CWE200_
<org.zkoss.idom.Element: org.zkoss.idom.Namespace getNamespace()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.diff.SvnDiffConsumer: java.util.Map getDifferences()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: java.lang.Object getProvider(java.lang.Class)> ->_CWE200_
<javassist.CtBehavior: java.lang.Object[][] getParameterAnnotations(boolean)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getForwardServicesBelongingToServiceClasses()> ->_CWE200_
<com.vividsolutions.jts.planargraph.Subgraph: com.vividsolutions.jts.planargraph.PlanarGraph getParent()> ->_CWE200_
<org.apache.commons.vfs2.provider.res.ResourceFileProvider: org.apache.commons.vfs2.FileSystemConfigBuilder getConfigBuilder()> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.snap.SnapOverlayOp: com.vividsolutions.jts.geom.Geometry getResultGeometry(int)> ->_CWE200_
<org.apache.xerces.util.XMLResourceIdentifierImpl: java.lang.String getBaseSystemId()> ->_CWE200_
<org.jboss.resteasy.client.ClientRequest: java.lang.Object getTarget(java.lang.Class)> ->_CWE200_
<com.vividsolutions.jts.geom.impl.PackedCoordinateSequence: double getY(int)> ->_CWE200_
<com.vividsolutions.jts.geom.impl.PackedCoordinateSequence: double getX(int)> ->_CWE200_
<com.vividsolutions.jts.planargraph.PlanarGraph: java.util.Collection getNodes()> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderThread: javax.swing.DefaultListModel getList()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: short getCategory()> ->_CWE200_
<org.apache.xerces.parsers.NonValidatingConfiguration: boolean parse(boolean)> ->_CWE200_
<org.dom4j.jaxb.JAXBReader: org.dom4j.Document read(java.io.File,java.nio.charset.Charset)> ->_CWE200_
<com.tomtom.photon.tools.zonemaker.CountryIdMapper: java.lang.String getMapping(java.lang.String)> ->_CWE200_
<org.geotools.styling.UserLayerImpl: org.geotools.styling.Style[] getUserStyles()> ->_CWE200_
<org.apache.avro.io.BinaryDecoder: java.lang.String readString()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileProvider: org.apache.commons.vfs2.FileName parseUri(org.apache.commons.vfs2.FileName,java.lang.String)> ->_CWE200_
<org.zkoss.idom.impl.EmptyNamedNodeMap: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)> ->_CWE200_
<org.apache.commons.io.input.BOMInputStream: int read(byte[])> ->_CWE200_
<com.mchange.v2.cfg.ConfigUtils: java.util.List readResourcePathsFromResourcePathsTextFile(java.lang.String,java.util.List)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getAssociationServiceWithAddressInformationMainPostalPointasMainPostalPoint()> ->_CWE200_
<org.apache.commons.vfs2.util.UserAuthenticatorUtils: java.lang.String toString(char[])> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterZapRequestId: java.lang.String getName()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_ada.attribute.mapimpl.HasMandatoryValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom.ttom_ada.domain.AllOfValidityDirection getValidityDirection()> ->_CWE200_
<org.zkoss.bind.impl.ValidationMessagesImpl: java.lang.String[] getMessages(org.zkoss.zk.ui.Component,java.lang.String)> ->_CWE200_
<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.ser.FilterProvider getFilterProvider()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.PolygonizeGraph: int getDegreeNonDeleted(com.vividsolutions.jts.planargraph.Node)> ->_CWE200_
<com.vividsolutions.jts.algorithm.MinimumDiameter: com.vividsolutions.jts.geom.Geometry getMinimumRectangle()> ->_CWE200_
<com.vividsolutions.jts.triangulate.VertexTaggedGeometryDataMapper: java.util.List getCoordinates()> ->_CWE200_
<org.zkoss.io.RepeatableInputStream: int read()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.RightmostEdgeFinder: int getRightmostSideOfSegment(com.vividsolutions.jts.geomgraph.DirectedEdge,int)> ->_CWE200_
<org.zkoss.idom.Element: java.util.Collection getDeclaredNamespaces()> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object readBytes(java.lang.Object,org.apache.avro.io.Decoder)> ->_CWE200_
<org.zkoss.idom.Namespace: java.lang.String getURI()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: int getBoundaryDimension()> ->_CWE200_
<org.geotools.geometry.text.WKTParser: org.opengis.geometry.primitive.Surface readPolygonText(java.io.StreamTokenizer)> ->_CWE200_
<org.geotools.data.shapefile.ShapefileDataStore: org.geotools.data.shapefile.ShapefileAttributeReader getAttributesReader(boolean,org.geotools.data.Query)> ->_CWE200_
<org.dom4j.io.XPP3Reader: org.dom4j.Document read(java.io.InputStream,java.lang.String)> ->_CWE200_
<com.google.common.io.ByteSource: long countByReading(java.io.InputStream)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: java.lang.String[] getAttributeNames()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToRotation(double)> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.ScmVersion)> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomReader: com.vividsolutions.jts.geom.MultiPolygon read(com.tomtom.cpu.api.geometry.MultiPolygon)> ->_CWE200_
<org.zkoss.idom.Element: java.util.List getAttributes(java.lang.String,java.lang.String,int)> ->_CWE200_
<org.apache.commons.io.input.ProxyInputStream: int read(byte[])> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getDescriptiveKeywords()> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: com.vividsolutions.jts.geom.Geometry getBoundary()> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: java.lang.Object getAttribute(java.lang.String)> ->_CWE200_
<org.apache.commons.io.input.Tailer: long readLines(java.io.RandomAccessFile)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.AbstractFileCheckingConsumer: int parseInt(java.lang.String)> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getUriTrailer()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: int getMaximumSegmentIndex()> ->_CWE200_
<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: java.lang.Object getRealRenderer()> ->_CWE200_
<org.apache.commons.io.input.ProxyReader: int read(char[],int,int)> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ContextEncodedProbBackoffLm readContextEncodedLmFromArpa(edu.berkeley.nlp.lm.io.LmReader,edu.berkeley.nlp.lm.WordIndexer,edu.berkeley.nlp.lm.ConfigOptions)> ->_CWE200_
<com.vividsolutions.jtsexample.operation.linemerge.LineMergeExample: java.util.Collection getData()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.SuffixFormTemplate getTemplate(java.lang.String,zemberek.morphology.lexicon.Suffix,zemberek.morphology.lexicon.graph.TerminationType)> ->_CWE200_
<org.jboss.resteasy.client.ClientRequest: javax.ws.rs.core.UriBuilder getBuilder(java.lang.String)> ->_CWE200_
<openlr.location.GridLocation: openlr.map.Line getPoiLine()> ->_CWE200_
<org.apache.commons.vfs2.provider.zip.ZipFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<edu.berkeley.nlp.lm.phrasetable.PhraseTableValueContainer: long[] readOffsets(edu.berkeley.nlp.lm.array.CustomWidthArray)> ->_CWE200_
<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getUserName()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: java.util.jar.JarEntry getJarEntry()> ->_CWE200_
<com.vividsolutions.jtsexample.technique.LineStringSelfIntersections: void showSelfIntersections(com.vividsolutions.jts.geom.LineString)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.AbstractFunctionValueSourceWrapper: hidden.org.codehaus.plexus.interpolation.ValueSource getValueSource()> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.EdgeSetNoder: java.util.List getNodedEdges()> ->_CWE200_
<org.apache.avro.io.JsonDecoder: long readArrayStart()> ->_CWE200_
<org.zkoss.idom.ProcessingInstruction: java.lang.String getName()> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: java.util.List getElements(java.lang.String,java.lang.String,int)> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterChangeUserAgent: org.parosproxy.paros.extension.filter.FilterChangeUserAgentDialog getFilterChangeUserAgentDialog()> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: java.util.List getParsedNames()> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: int getNumPoints()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: java.lang.String getNextCloser()> ->_CWE200_
<org.zaproxy.zap.spider.Spider: org.parosproxy.paros.model.Model getModel()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileData: byte[] getBuffer()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<openlr.location.GridLocation: openlr.location.data.SideOfRoad getSideOfRoad()> ->_CWE200_
<org.jboss.resteasy.util.Base64: byte[] decode(java.lang.String,int)> ->_CWE200_
<com.tomtom.cpu.coredb.commons.utils.UUIDUtils: java.lang.String getDatasetNameFromUUID(java.util.UUID)> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: int getPointsSize()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileObject: org.apache.commons.vfs2.FileObject[] getChildren()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: int getTypeId()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.NodeMap: java.util.Collection getBoundaryNodes(int)> ->_CWE200_
<org.geotools.data.shapefile.ShpFiles: java.nio.channels.ReadableByteChannel getReadChannel(org.geotools.data.shapefile.ShpFileType,org.geotools.data.shapefile.FileReader)> ->_CWE200_
<openlr.decoder.data.CandidateLinePair: int getScore()> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: int readInt()> ->_CWE200_
<com.vividsolutions.jts.noding.IntersectionAdder: com.vividsolutions.jts.algorithm.LineIntersector getLineIntersector()> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ArrayEncodedProbBackoffLm readArrayEncodedLmFromArpa(edu.berkeley.nlp.lm.io.LmReader,boolean,edu.berkeley.nlp.lm.WordIndexer,edu.berkeley.nlp.lm.ConfigOptions)> ->_CWE200_
<org.geotools.referencing.datum.DefaultEllipsoid: double getInverseFlattening()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getBlameCommand()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarFileSystem: java.util.zip.ZipFile getZipFile()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: java.lang.String getGeometryType()> ->_CWE200_
<org.geotools.referencing.operation.DefaultOperation: org.opengis.parameter.ParameterValueGroup getParameterValues(org.opengis.referencing.operation.MathTransform,org.opengis.parameter.ParameterDescriptorGroup,boolean)> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileObject: org.apache.commons.vfs2.provider.ram.RamFileData getData()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeRing: com.vividsolutions.jts.geomgraph.Label getLabel()> ->_CWE200_
<org.apache.commons.codec.language.bm.BeiderMorseEncoder: org.apache.commons.codec.language.bm.RuleType getRuleType()> ->_CWE200_
<org.apache.http.impl.io.IdentityInputStream: int read()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: com.vividsolutions.jts.geom.Envelope getEnvelope()> ->_CWE200_
<org.geotools.data.shapefile.indexed.IndexedShapefileDataStore: org.geotools.data.shapefile.dbf.DbaseFileReader openDbfReader()> ->_CWE200_
<org.zkoss.idom.ProcessingInstruction: short getNodeType()> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionScopeString(java.lang.String)> ->_CWE200_
<openlr.location.GridLocation: openlr.map.GeoCoordinates getLowerLeftPoint()> ->_CWE200_
<org.dom4j.jaxb.JAXBReader: org.dom4j.Document read(java.io.File)> ->_CWE200_
<org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream: int read()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<com.vividsolutions.jts.geom.prep.PreparedPolygon: com.vividsolutions.jts.noding.FastSegmentSetIntersectionFinder getIntersectionFinder()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceInAdministrativePlace()> ->_CWE200_
<org.zkoss.zul.Grid: java.lang.Object getExtraCtrl()> ->_CWE200_
<com.vividsolutions.jts.densify.Densifier: com.vividsolutions.jts.geom.Geometry getResultGeometry()> ->_CWE200_
<org.geotools.referencing.operation.transform.NADCONTransform: java.nio.channels.ReadableByteChannel getReadChannel(java.net.URL)> ->_CWE200_
<org.geotools.data.SimpleFeatureCollectionBridge: org.geotools.geometry.jts.ReferencedEnvelope getBounds()> ->_CWE200_
<org.apache.commons.io.input.BOMInputStream: int readFirstBytes()> ->_CWE200_
<org.reflections.serializers.XmlSerializer: org.reflections.Reflections read(java.io.InputStream)> ->_CWE200_
<org.geotools.referencing.operation.projection.Mercator: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<com.vividsolutions.jts.geom.Envelope: double getHeight()> ->_CWE200_
<org.zaproxy.zap.spider.SpiderController: java.util.LinkedList getFetchFilters()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.HasValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.ValidityDirection getValidityDirection()> ->_CWE200_
<org.zkoss.idom.util.SimpleLocator: java.lang.String getSystemId()> ->_CWE200_
<openlr.location.InvalidLocation: int getNegativeOffset()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.mapimpl.HolidayRentalServiceSubcategoryTypeImpl: com.tomtom.cpu.api.semantic.ttom_poi.domain.CodeValuetypes$RANGE getItem()> ->_CWE200_
<org.parosproxy.paros.network.HttpInputStream: org.parosproxy.paros.network.HttpRequestHeader readRequestHeader(boolean)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.String getDefaultDateFormat(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.mchange.v2.c3p0.filter.FilterDataSource: int getLoginTimeout()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileRandomAccessContent: long getFilePointer()> ->_CWE200_
<zemberek.core.io.IOs: byte[] readAsByteArray(java.io.InputStream)> ->_CWE200_
<com.google.common.io.CharStreams: java.util.List readLines(com.google.common.io.InputSupplier)> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: boolean isParseComments()> ->_CWE200_
<com.vividsolutions.jts.io.WKBWriter: byte[] write(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getAssociationServiceWithAddressInformationDetailedPostalPointasDetailedPostalPoint()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: java.lang.String getName()> ->_CWE200_
<org.zkoss.idom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> ->_CWE200_
<com.sittinglittleduck.DirBuster.GenBaseCase: com.sittinglittleduck.DirBuster.BaseCase genBaseCase(java.lang.String,boolean,java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.status.SvnStatusCommand: org.apache.maven.scm.command.status.StatusScmResult executeStatusCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet)> ->_CWE200_
<com.vividsolutions.jts.geom.impl.PackedCoordinateSequence: com.vividsolutions.jts.geom.Coordinate getCoordinateCopy(int)> ->_CWE200_
<com.vividsolutions.jts.index.kdtree.KdNode: com.vividsolutions.jts.index.kdtree.KdNode getLeft()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsClientWrapper: org.apache.commons.vfs2.provider.GenericFileName getRoot()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToRotation(double,double)> ->_CWE200_
<com.vividsolutions.jts.algorithm.MinimumDiameter: com.vividsolutions.jts.geom.Coordinate getWidthCoordinate()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.ValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.AllOfValidityDirection$RANGE getItem()> ->_CWE200_
<org.springframework.core.PrioritizedParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: double getArea()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.FileContent getContent()> ->_CWE200_
<org.jboss.resteasy.util.HttpServletRequestDelegate: java.lang.String getParameter(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getScheme()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: int getDepthDelta()> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: org.opengis.util.InternationalString getRemarks()> ->_CWE200_
<org.geotools.metadata.iso.spatial.GridSpatialRepresentationImpl: java.lang.Integer getNumberOfDimensions()> ->_CWE200_
<org.apache.commons.vfs2.provider.local.LocalFileRandomAccessContent: long getFilePointer()> ->_CWE200_
<org.apache.commons.vfs2.provider.GenericFileName: java.lang.String getUserName()> ->_CWE200_
<ch.csnc.extension.httpclient.SSLContextManager: java.util.List getAliases(java.security.KeyStore)> ->_CWE200_
<org.apache.commons.vfs2.provider.URLFileName: java.lang.String getQueryString()> ->_CWE200_
<org.zkoss.composite.CompositeCtrls: java.lang.String readTextContent(java.io.InputStream,int)> ->_CWE200_
<com.vividsolutions.jts.noding.BasicSegmentString: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.zaproxy.zap.spider.Spider: org.parosproxy.paros.network.HttpSender getHttpSender()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: java.util.List getTriangleVertices(boolean)> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: org.springframework.validation.FieldError getFieldError(java.lang.String)> ->_CWE200_
<org.springframework.beans.factory.support.SimpleSecurityContextProvider: java.security.AccessControlContext getAccessControlContext()> ->_CWE200_
<org.zkoss.idom.Attribute: org.w3c.dom.Document getOwnerDocument()> ->_CWE200_
<com.vividsolutions.jts.geom.Point: double getY()> ->_CWE200_
<org.geotools.referencing.operation.projection.NewZealandMapGrid: org.opengis.parameter.ParameterDescriptorGroup getParameterDescriptors()> ->_CWE200_
<com.vividsolutions.jts.geom.Point: double getX()> ->_CWE200_
<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer getKeySerializer()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.HolidayAreaGroundImpl: java.util.Collection getFaceOfOtherLandUseFeature()> ->_CWE200_
<com.vividsolutions.jts.index.sweepline.SweepLineEvent: com.vividsolutions.jts.index.sweepline.SweepLineInterval getInterval()> ->_CWE200_
<com.vividsolutions.jts.simplify.DouglasPeuckerSimplifier: com.vividsolutions.jts.geom.Geometry getResultGeometry()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.PlanarGraph: void debugPrintln(java.lang.Object)> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: short readShort()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getInfoCommand()> ->_CWE200_
<com.vividsolutions.jts.util.CoordinateArrayFilter: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: byte readAndCheckByte()> ->_CWE200_
<org.zkoss.zk.ui.http.ExecutionImpl: java.util.Map getParameterMap()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.reflection.ClassMap: java.lang.Class getCachedClass()> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.geotools.geometry.jts.ReferencedEnvelope getBounds(org.geotools.data.Query)> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.Polygon readPolygon()> ->_CWE200_
<com.google.common.io.MultiReader: boolean ready()> ->_CWE200_
<org.zkoss.idom.input.SAXBuilder: org.zkoss.idom.Document build(java.net.URL)> ->_CWE200_
<org.apache.maven.scm.provider.svn.util.SvnUtil: org.apache.maven.scm.providers.svn.settings.Settings readSettings()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: java.io.OutputStream getOutputStream(boolean)> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomReader: com.vividsolutions.jts.geom.Polygon read(com.tomtom.cpu.api.geometry.Polygon)> ->_CWE200_
<openlr.rawLocRef.RawGridLocRef: openlr.map.GeoCoordinates getUpperRightPoint()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: java.net.URL getJarFileURL()> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: int getOffset()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.StringTextStar: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.apache.commons.vfs2.provider.GenericFileName: int getDefaultPort()> ->_CWE200_
<com.sittinglittleduck.DirBuster.GenBaseCase: com.sittinglittleduck.DirBuster.BaseCase genURLFuzzBaseCase(java.lang.String,java.lang.String)> ->_CWE200_
<openlr.decoder.data.CandidateNodesResultSet: java.util.List getCandidateNodes(openlr.LocationReferencePoint)> ->_CWE200_
<org.codehaus.jackson.jaxrs.JacksonJsonProvider: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.apache.commons.vfs2.util.MonitorInputStream: int read()> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ContextEncodedProbBackoffLm readContextEncodedLmFromArpa(java.lang.String,edu.berkeley.nlp.lm.WordIndexer,edu.berkeley.nlp.lm.ConfigOptions,int)> ->_CWE200_
<com.googlecode.zohhak.internal.junit.AnnotationUtil: java.lang.String[] getParameters(org.junit.runners.model.FrameworkMethod)> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: int getClassSortIndex()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.HasMandatoryAndUniqueValidityPeriodImpl: java.lang.String getValidityPeriod()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.String getNodeName()> ->_CWE200_
<com.mchange.v1.identicator.IdList: java.lang.Object set(int,java.lang.Object)> ->_CWE200_
<org.apache.commons.vfs2.provider.HostFileNameParser: int getDefaultPort()> ->_CWE200_
<org.geotools.data.shapefile.shp.xml.IdInfo: com.vividsolutions.jts.geom.Envelope getBounding()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.FileName getName()> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionHandleODataParametersVisited(boolean)> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: org.opengis.util.InternationalString getAbstract()> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: java.lang.String getScope()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.InputStreamProvider: void writeTo(java.io.InputStream,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getForwardServicesBelongingToServiceClasses()> ->_CWE200_
<org.parosproxy.paros.core.scanner.VariantODataIdQuery: java.lang.String setParameter(org.parosproxy.paros.network.HttpMessage,org.parosproxy.paros.core.scanner.NameValuePair,java.lang.String,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.operation.BoundaryOp: com.vividsolutions.jts.geom.MultiPoint getEmptyMultiPoint()> ->_CWE200_
<org.geotools.data.shapefile.shp.xml.IdInfo: com.vividsolutions.jts.geom.Envelope getLbounding()> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: double readDouble()> ->_CWE200_
<org.apache.maven.scm.provider.svn.AbstractSvnScmProvider: java.lang.String getScmType()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.String getNamespaceURI()> ->_CWE200_
<com.vividsolutions.jts.planargraph.Edge: com.vividsolutions.jts.planargraph.DirectedEdge getDirEdge(int)> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterChangeUserAgentDialog: int getUserAgentItem()> ->_CWE200_
<org.apache.http.impl.client.BasicCredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)> ->_CWE200_
<org.zkoss.idom.Element: org.zkoss.idom.Attribute setAttributeValue(java.lang.String,java.lang.String)> ->_CWE200_
<edu.berkeley.nlp.lm.io.IOUtils: java.lang.String readLine(java.lang.String)> ->_CWE200_
<com.vividsolutions.jtsexample.io.gml2.KMLReader: void read()> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaValidator: org.apache.xerces.xni.XMLDocumentHandler getDocumentHandler()> ->_CWE200_
<com.vividsolutions.jts.geom.impl.PackedCoordinateSequence: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<org.geotools.referencing.datum.DefaultEllipsoid: double getEccentricity()> ->_CWE200_
<org.geotools.filter.FidFilterImpl: java.util.Set getFidsSet()> ->_CWE200_
<org.joda.time.field.SkipUndoDateTimeField: java.lang.Object readResolve()> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: org.w3c.dom.NodeList getChildNodes()> ->_CWE200_
<com.vividsolutions.jts.operation.relate.RelateOp: com.vividsolutions.jts.geom.IntersectionMatrix getIntersectionMatrix()> ->_CWE200_
<org.apache.xerces.impl.dv.xs.AnyURIDV: short getAllowedFacets()> ->_CWE200_
<org.apache.avro.io.BinaryDecoder: long doReadItemCount()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],org.codehaus.jackson.type.JavaType)> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: int getRequestWaitTime()> ->_CWE200_
<org.springframework.validation.AbstractErrors: org.springframework.validation.FieldError getFieldError()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder: java.lang.Class getConfigClass()> ->_CWE200_
<org.springframework.validation.AbstractPropertyBindingResult: java.beans.PropertyEditor getCustomEditor(java.lang.String)> ->_CWE200_
<org.geotools.referencing.operation.transform.MolodenskiTransform: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.lang.String getExternalIdentifier()> ->_CWE200_
<org.geotools.referencing.factory.IdentifiedObjectFinder: java.util.Set getCodeCandidates(org.opengis.referencing.IdentifiedObject)> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: float readFloat()> ->_CWE200_
<com.vividsolutions.jts.index.bintree.Node: com.vividsolutions.jts.index.bintree.Interval getInterval()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FTPClientWrapper: org.apache.commons.net.ftp.FTPClient getFtpClient()> ->_CWE200_
<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: int read(byte[],int,int)> ->_CWE200_
<org.springframework.beans.factory.support.AutowireCandidateQualifier: java.lang.String getTypeName()> ->_CWE200_
<org.apache.maven.scm.provider.ScmProviderRepositoryWithHost: int getPort()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.ObjectBasedValueSource: java.util.List getFeedback()> ->_CWE200_
<org.geotools.referencing.operation.projection.EquidistantCylindrical: org.opengis.parameter.ParameterDescriptorGroup getParameterDescriptors()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.String getPrefix()> ->_CWE200_
<org.geotools.referencing.datum.DefaultEllipsoid: double getSemiMinorAxis()> ->_CWE200_
<org.geotools.referencing.operation.transform.GeocentricTranslation: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.spi.StringConverter getStringConverter(java.lang.Class)> ->_CWE200_
<com.vividsolutions.jts.operation.BoundaryOp: com.vividsolutions.jts.geom.Geometry getBoundary()> ->_CWE200_
<com.vividsolutions.jts.planargraph.GraphComponent: java.lang.Object getData()> ->_CWE200_
<edu.berkeley.nlp.lm.array.CustomWidthArray: long get(long)> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Geometry getEnvelope()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.lang.String getXMLObjectIdentifier()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.update.SvnUpdateCommand: org.apache.maven.scm.command.update.UpdateScmResult executeUpdateCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.ScmVersion)> ->_CWE200_
<org.apache.commons.configuration.plist.PropertyListParserTokenManager: org.apache.commons.configuration.plist.Token getNextToken()> ->_CWE200_
<com.vividsolutions.jts.io.WKTFileReader: java.util.List read(java.io.BufferedReader)> ->_CWE200_
<org.springframework.asm.ClassReader: java.lang.String readClass(int,char[])> ->_CWE200_
<com.vividsolutions.jts.geom.prep.BasicPreparedGeometry: java.util.List getRepresentativePoints()> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: org.w3c.dom.Node getFirstChild()> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: int readUnsignedShort()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.os.OperatingSystemUtils: java.util.Properties getSystemEnvVars(boolean)> ->_CWE200_
<com.sittinglittleduck.DirBuster.GenBaseCase: java.lang.String getBaseCaseAgain(java.net.URL,java.lang.String)> ->_CWE200_
<org.jboss.resteasy.client.ClientRequest: org.jboss.resteasy.client.ClientResponse get(java.lang.Class)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getFriendlyURI()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.diff.SvnDiffConsumer: java.lang.String getPatch()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.DrivingSideImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.DrivingSide$RANGE getItem()> ->_CWE200_
<org.zaproxy.zap.extension.spider.ExtensionSpider: java.util.List getExcludeList()> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: com.vividsolutions.jts.geom.Point getEndPoint()> ->_CWE200_
<org.zkoss.xel.zel.XelELResolver: boolean isReadOnly(org.zkoss.zel.ELContext,java.lang.Object,java.lang.Object)> ->_CWE200_
<org.zkoss.bind.impl.ValidationContextImpl: org.zkoss.bind.Property getProperty()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: org.apache.commons.vfs2.FileName getRootName()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.w3c.dom.NodeList getChildNodes()> ->_CWE200_
<zen.core.Zen: java.lang.String read(java.lang.String)> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanel: javax.swing.JLabel getFoundCountNameLabel()> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ArrayEncodedProbBackoffLm readArrayEncodedLmFromArpa(java.lang.String,boolean,edu.berkeley.nlp.lm.WordIndexer)> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: java.lang.String getElementValue(java.lang.String,boolean)> ->_CWE200_
<org.springframework.validation.BeanPropertyBindingResult: java.lang.Object getTarget()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.w3c.dom.Document getOwnerDocument()> ->_CWE200_
<com.vividsolutions.jts.index.strtree.AbstractNode: java.lang.Object getBounds()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: org.apache.commons.vfs2.provider.FileContentThreadData getThreadData()> ->_CWE200_
<org.springframework.beans.factory.access.el.SpringBeanELResolver: boolean isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)> ->_CWE200_
<org.geotools.referencing.operation.transform.ExponentialTransform1D: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.springframework.beans.factory.support.MethodOverrides: org.springframework.beans.factory.support.MethodOverride getOverride(java.lang.reflect.Method)> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdgeStar: int getIndex(com.vividsolutions.jts.planargraph.Edge)> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: java.lang.Object getAttribute(java.lang.String,boolean)> ->_CWE200_
<org.geotools.referencing.operation.transform.IdentityTransform: int getSourceDimensions()> ->_CWE200_
<com.tomtom.cpu.coredb.client.impl.ByIdReadCalls: com.tomtom.cpu.api.features.Feature getFeatureByIdFromGetFeaturesCache(java.lang.String)> ->_CWE200_
<org.geotools.data.SimpleFeatureCollectionBridge: java.lang.String getID()> ->_CWE200_
<org.springframework.core.OverridingClassLoader: byte[] loadBytesForClass(java.lang.String)> ->_CWE200_
<org.apache.avro.io.BinaryDecoder: int readEnum()> ->_CWE200_
<org.geotools.geometry.text.WKTParser: org.opengis.geometry.aggregate.MultiPrimitive readMultiPointText(java.io.StreamTokenizer)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TgzFileProvider: java.lang.String[] getSchemes()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: java.util.jar.Attributes getAttributes()> ->_CWE200_
<javax.servlet.ServletRequestWrapper: java.util.Enumeration getParameterNames()> ->_CWE200_
<org.springframework.validation.BindException: java.lang.String getNestedPath()> ->_CWE200_
<org.geotools.metadata.iso.IdentifierImpl: org.opengis.metadata.citation.Citation getAuthority()> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: java.util.Set getAvailableAtClient(int,int)> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.validate.OffsetPointGenerator: java.util.List getPoints(double)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.GeometryGraph: com.vividsolutions.jts.geom.Coordinate[] getBoundaryPoints()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: java.nio.ByteBuffer readBytes(java.nio.ByteBuffer)> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: java.util.Set getIdentifiers()> ->_CWE200_
<com.nesscomputing.uuid.NessUUID: int getNibbleFromChar(char)> ->_CWE200_
<org.apache.commons.io.input.BoundedInputStream: int read(byte[])> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: com.vividsolutions.jts.triangulate.quadedge.Vertex[] getVertices()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.ServiceGroupTypes getServiceGroup()> ->_CWE200_
<org.zkoss.bind.validator.BeanValidations: javax.validation.Validator getValidator()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getStatus()> ->_CWE200_
<org.apache.avro.io.JsonDecoder: long readMapStart()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.Settings: java.lang.String getCygwinMountPath()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: java.lang.String getRequiredAttributeValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.lang.Object getRawFieldValue(java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.info.SvnInfoConsumer: java.lang.String getValue(java.lang.String)> ->_CWE200_
<org.jboss.resteasy.test.TestPortProvider: org.jboss.resteasy.client.ClientRequest createClientRequest(org.jboss.resteasy.client.ClientRequestFactory,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.PolygonizeDirectedEdge: com.vividsolutions.jts.operation.polygonize.PolygonizeDirectedEdge getNext()> ->_CWE200_
<org.zkoss.idom.util.SimpleLocator: int getColumnNumber()> ->_CWE200_
<com.github.kristofa.brave.SpanIdImpl: long getTraceId()> ->_CWE200_
<org.apache.maven.scm.provider.ScmUrlUtils: java.lang.String getProviderSpecificPart(java.lang.String)> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: org.apache.xerces.impl.xs.identity.Field getFieldAt(int)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.SvnCommandLineUtils: int execute(org.codehaus.plexus.util.cli.Commandline,org.codehaus.plexus.util.cli.StreamConsumer,org.codehaus.plexus.util.cli.CommandLineUtils$StringStreamConsumer,org.apache.maven.scm.log.ScmLogger)> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileSystemConfigBuilder: int getMaxSize(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<edu.berkeley.nlp.lm.StupidBackoffLm: long getRawCount(int[],int,int)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.checkin.SvnCheckInCommand: org.apache.maven.scm.command.checkin.CheckInScmResult executeCheckInCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,org.apache.maven.scm.ScmVersion)> ->_CWE200_
<com.vividsolutions.jts.operation.distance.GeometryLocation: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.maven.scm.provider.svn.AbstractSvnScmProvider: org.apache.maven.scm.provider.svn.AbstractSvnScmProvider$ScmUrlParserResult parseScmUrl(java.lang.String)> ->_CWE200_
<org.apache.xerces.parsers.DOMBuilderImpl: java.lang.Object getParameter(java.lang.String)> ->_CWE200_
<org.springframework.jmx.export.naming.IdentityNamingStrategy: javax.management.ObjectName getObjectName(java.lang.Object,java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.ExceptionConverter: org.apache.commons.vfs2.FileSystemException generate(org.apache.jackrabbit.webdav.DavException,org.apache.jackrabbit.webdav.client.methods.DavMethod)> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpRandomAccessContent: java.io.DataInputStream getDataInputStream()> ->_CWE200_
<com.vividsolutions.jts.planargraph.Node: java.util.Collection getEdgesBetween(com.vividsolutions.jts.planargraph.Node,com.vividsolutions.jts.planargraph.Node)> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder: java.lang.String getProxyHost(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.avro.io.JsonDecoder: boolean readBoolean()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarFileSystem: java.util.jar.Attributes getAttributes()> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.Geometry read(com.vividsolutions.jts.io.InStream)> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulator: com.vividsolutions.jts.geom.Geometry getConvexHull()> ->_CWE200_
<org.apache.commons.compress.archivers.dump.DumpArchiveInputStream: long getBytesRead()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_ada.domain.mapimpl.StrictValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom_ada.domain.AllOfValidityDirection$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Label: int getGeometryCount()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.String getNodeValue()> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,java.lang.String)> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.ForeignIdentifiableDecoratorHelper: java.util.Collection getPropertiesWithDefaultValue(com.teleatlas.global.common.ddct.impl.DictionaryPropertyCollection,com.teleatlas.global.common.ddct.DictionaryModel,java.util.Collection,com.teleatlas.global.common.ddct.HasProperties,boolean)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: java.io.InputStream getInputStream()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.association.mapimpl.FaceOfHolidayAreaGroundImpl: com.tomtom.cpu.api.semantic.ttom.ttom_topology.generalization.feature.Level1AreaFeature getLevel1AreaFeature()> ->_CWE200_
<org.springframework.core.OverridingClassLoader: java.lang.Class loadClassForOverriding(java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getReversePOIBelongingToElectricVehicleStation()> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: org.zkoss.zk.ui.Component newUnloadedItem(java.lang.Object,int)> ->_CWE200_
<org.apache.maven.scm.provider.svn.SvnTagBranchUtils: java.lang.String getProjectRoot(java.lang.String)> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.String getBaseURI()> ->_CWE200_
<org.apache.commons.httpclient.methods.EntityEnclosingMethod: org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: int getIntegerValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.mapimpl.ParkAndRideFacilityTypeImpl: com.tomtom.cpu.api.semantic.ttom_poi.domain.ParkAndRideFacilityType$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jts.awt.PolygonShape: java.awt.Rectangle getBounds()> ->_CWE200_
<openlr.location.GridLocation: int getNegativeOffset()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileRandomAccessContent: java.lang.String readLine()> ->_CWE200_
<com.vividsolutions.jts.operation.valid.SimpleNestedRingTester: com.vividsolutions.jts.geom.Coordinate getNestedPoint()> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderThread: org.parosproxy.paros.model.SiteNode getStartNode()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.AccidentHazardSignImpl: java.lang.Integer getLengthOfTrafficCondition()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileObject: org.apache.commons.vfs2.provider.ftp.FtpFileObject$FtpInputStream getInputStream(long)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.reflection.ReflectionValueExtractor: hidden.org.codehaus.plexus.interpolation.reflection.ClassMap getClassMap(java.lang.Class)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: org.apache.commons.vfs2.provider.FileSystemKey getCacheKey()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdgeStar: int getOutgoingDegree()> ->_CWE200_
<org.dom4j.io.SAXValidator: void setXMLReader(org.xml.sax.XMLReader)> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: java.lang.String getGeometryType()> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterChangeUserAgent: int getId()> ->_CWE200_
<org.joda.time.field.DividedDateTimeField: int getDivisor()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.remove.SvnRemoveConsumer: java.util.List getRemovedFiles()> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: int[][] getPoints()> ->_CWE200_
<org.zkoss.idom.input.SAXHandler: org.zkoss.idom.input.IDOMFactory getIDOMFactory()> ->_CWE200_
<org.geotools.styling.UserLayerImpl: org.geotools.styling.FeatureTypeConstraint[] getLayerFeatureConstraints()> ->_CWE200_
<org.geotools.filter.function.IDFunction: int getArgCount()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearLocation: double getSegmentFraction()> ->_CWE200_
<org.zkoss.idom.Document: org.zkoss.idom.DocType getDocType()> ->_CWE200_
<com.vividsolutions.jts.noding.IntersectionFinderAdder: java.util.List getInteriorIntersections()> ->_CWE200_
<org.zaproxy.zap.extension.httppanel.view.impl.models.http.response.ResponseBodyByteHttpPanelViewModel: byte[] getData()> ->_CWE200_
<org.joda.time.chrono.IslamicChronology: java.lang.Object readResolve()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToReflection(double,double,double,double)> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.Geometry setSRID(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.apache.maven.scm.provider.svn.repository.SvnScmProviderRepository: org.apache.maven.scm.provider.ScmProviderRepository getParent()> ->_CWE200_
<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.File)> ->_CWE200_
<com.vividsolutions.jts.index.sweepline.SweepLineEvent: com.vividsolutions.jts.index.sweepline.SweepLineEvent getInsertEvent()> ->_CWE200_
<org.zaproxy.zap.spider.parser.SpiderHtmlFormParser: java.lang.String buildEncodedUrlQuery(java.util.List)> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.NullSuffixForm getNull(java.lang.String,zemberek.morphology.lexicon.SuffixFormTemplate,zemberek.morphology.lexicon.graph.TerminationType)> ->_CWE200_
<com.vividsolutions.jts.index.bintree.Node: com.vividsolutions.jts.index.bintree.Node getNode(com.vividsolutions.jts.index.bintree.Interval)> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterChangeUserAgentDialog: javax.swing.JPanel getJPanel()> ->_CWE200_
<org.geotools.referencing.operation.builder.GridToEnvelopeMapper: org.opengis.referencing.datum.PixelInCell getPixelAnchor()> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomWriter: com.tomtom.cpu.api.geometry.MultiPolygon write(com.vividsolutions.jts.geom.MultiPolygon)> ->_CWE200_
<javax.servlet.ServletRequestWrapper: java.util.Map getParameterMap()> ->_CWE200_
<org.apache.avro.io.JsonDecoder: long readLong()> ->_CWE200_
<zemberek.core.hash.StringHashKeyProvider: int[] getKey(int)> ->_CWE200_
<com.vividsolutions.jts.algorithm.LineIntersector: java.lang.String getTopologySummary()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.InterpolationException: java.lang.String getExpression()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getForwardServiceBelongingToService()> ->_CWE200_
<org.apache.commons.httpclient.ChunkedInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: int readStored(byte[],int,int)> ->_CWE200_
<com.vividsolutions.jtsexample.geom.prep.PreparedGeometryExample: void main(java.lang.String[])> ->_CWE200_
<zemberek.morphology.lexicon.graph.IdMaker: java.lang.String get()> ->_CWE200_
<org.springframework.validation.AbstractErrors: java.util.List getFieldErrors(java.lang.String)> ->_CWE200_
<org.zkoss.idom.Attribute: org.w3c.dom.TypeInfo getSchemaTypeInfo()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getClientMessageBodyReaderInterceptorRegistry()> ->_CWE200_
<com.vividsolutions.jts.util.UniqueCoordinateArrayFilter: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.RightmostEdgeFinder: int getRightmostSide(com.vividsolutions.jts.geomgraph.DirectedEdge,int)> ->_CWE200_
<org.codehaus.jackson.map.SerializerProvider: java.lang.Class getSerializationView()> ->_CWE200_
<org.jboss.resteasy.core.request.QualityValue: org.jboss.resteasy.core.request.QualityValue valueOf(java.lang.String)> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: java.util.Set getElementNames()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileProvider: org.apache.commons.vfs2.FileSystemConfigBuilder getConfigBuilder()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformationBuilder: com.vividsolutions.jts.geom.util.AffineTransformation getTransformation()> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: java.lang.Object setAttribute(java.lang.String,java.lang.Object)> ->_CWE200_
<javax.activation.MimeType: java.lang.String getParameter(java.lang.String)> ->_CWE200_
<org.zkoss.idom.Element: org.w3c.dom.TypeInfo getSchemaTypeInfo()> ->_CWE200_
<com.vividsolutions.jts.algorithm.distance.PointPairDistance: double getDistance()> ->_CWE200_
<org.zkoss.idom.Comment: java.lang.String getName()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: com.vividsolutions.jts.geom.Geometry getGeometryN(int)> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getName()> ->_CWE200_
<org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver: org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()> ->_CWE200_
<org.apache.thrift.transport.TFileTransport: boolean readEvent()> ->_CWE200_
<com.google.common.primitives.AndroidInteger: java.lang.Integer tryParse(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpRandomAccessContent: long getFilePointer()> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.NodeBase: int getNodeCount()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEnd: void print(java.io.PrintStream)> ->_CWE200_
<com.vividsolutions.jts.simplify.TaggedLineString: int getResultSize()> ->_CWE200_
<org.joda.time.chrono.GregorianChronology: java.lang.Object readResolve()> ->_CWE200_
<org.apache.commons.io.input.ProxyReader: boolean ready()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.MonotoneChainEdge: int[] getStartIndexes()> ->_CWE200_
<org.zaproxy.zap.extension.auth.SessionAuthenticationPanel: org.zaproxy.zap.utils.ZapTextField getTxtLoginUrl()> ->_CWE200_
<org.geotools.data.shapefile.ShpFiles: java.net.URL acquireRead(org.geotools.data.shapefile.ShpFileType,org.geotools.data.shapefile.FileReader)> ->_CWE200_
<com.vividsolutions.jts.io.WKTFileReader: java.util.List read()> ->_CWE200_
<org.geotools.geometry.text.WKTParser: org.opengis.geometry.primitive.Curve readLineStringText(java.io.StreamTokenizer)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.StrictValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.AllOfValidityDirection$RANGE getItem()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getStandardPOIInOrder9Area()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.SubgraphDepthLocater: int getDepth(com.vividsolutions.jts.geom.Coordinate)> ->_CWE200_
<org.geotools.referencing.operation.builder.GridToEnvelopeMapper: org.opengis.referencing.datum.PixelInCell getGridType()> ->_CWE200_
<com.vividsolutions.jts.index.bintree.NodeBase: java.util.List getItems()> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileObject: java.lang.String encodePath(java.lang.String)> ->_CWE200_
<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.Reader)> ->_CWE200_
<org.joda.time.chrono.EthiopicChronology: java.lang.Object readResolve()> ->_CWE200_
<org.zaproxy.clientapi.gen.Auth: org.zaproxy.clientapi.core.ApiResponse setLoginUrl(java.lang.String,java.lang.String,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.geotools.data.FIDSQuery: java.lang.String getTypeName()> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: java.lang.String getName0(org.opengis.referencing.IdentifiedObject,org.opengis.metadata.citation.Citation)> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderURL: int getParentMenuIndex()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.SimpleRecursionInterceptor: java.util.List getExpressionCycle(java.lang.String)> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetListener: org.zkoss.zk.ui.util.ConditionImpl getCondition()> ->_CWE200_
<com.vividsolutions.jts.geom.Envelope: double getArea()> ->_CWE200_
<org.joda.time.Weeks: java.lang.Object readResolve()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getAttributeValue(java.lang.String,java.lang.String,int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getAddressInformation()> ->_CWE200_
<openlr.location.data.SideOfRoad: java.util.List getSideOfRoadValues()> ->_CWE200_
<org.zkoss.zul.Slider: java.lang.String getSlidingtext()> ->_CWE200_
<org.apache.thrift.transport.TFileTransport: int tailRead(java.io.InputStream,byte[],int,int,org.apache.thrift.transport.TFileTransport$tailPolicy)> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: java.lang.Object getData()> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: com.vividsolutions.jts.geom.LineSegment getLineSegment()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: int readUnsignedByte()> ->_CWE200_
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: javax.validation.metadata.BeanDescriptor getConstraintsForClass(java.lang.Class)> ->_CWE200_
<org.geotools.data.shapefile.indexed.IndexedFidReader: long getCount()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getAssociationServiceWithAddressInformationMainPostalPointasMainPostalPoint()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: long getLongValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)> ->_CWE200_
<org.apache.xerces.impl.io.UCSReader: int read()> ->_CWE200_
<com.vividsolutions.jts.algorithm.distance.PointPairDistance: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.apache.commons.vfs2.util.UserAuthenticatorUtils: char[] getData(org.apache.commons.vfs2.UserAuthenticationData,org.apache.commons.vfs2.UserAuthenticationData$Type,char[])> ->_CWE200_
<org.codehaus.jackson.map.ser.impl.SimpleFilterProvider: org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean)> ->_CWE200_
<org.apache.commons.codec.language.bm.BeiderMorseEncoder: java.lang.String encode(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TgzFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<openlr.location.GridLocation: openlr.map.GeoCoordinates getPointLocation()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.GeometryCollection readGeometryCollectionText()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.HasAllOfValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.AllOfValidityDirection getValidityDirection()> ->_CWE200_
<com.googlecode.zohhak.internal.junit.RunnerDelegator: java.lang.String[] getParameters(org.junit.runners.model.FrameworkMethod)> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdgeStar: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.String getEntryParser(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixedValueSourceWrapper: java.lang.Object getValue(java.lang.String)> ->_CWE200_
<org.apache.commons.io.input.TeeInputStream: int read(byte[])> ->_CWE200_
<org.geotools.referencing.cs.DirectionAlongMeridian: double getAngle(org.geotools.referencing.cs.DirectionAlongMeridian)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdge: java.lang.Object getData()> ->_CWE200_
<org.xerial.snappy.SnappyLoader: java.io.File extractLibraryFile(java.lang.String,java.lang.String,java.lang.String)> ->_CWE200_
<org.springframework.beans.InvalidPropertyException: java.lang.Class getBeanClass()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: java.util.Map getContextDataMap()> ->_CWE200_
<org.apache.thrift.protocol.TCompactProtocol: java.lang.String readString()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: com.vividsolutions.jts.geomgraph.Edge getEdge()> ->_CWE200_
<org.slf4j.helpers.NamedLoggerBase: java.lang.Object readResolve()> ->_CWE200_
<org.apache.maven.scm.provider.ScmProviderRepository: java.lang.String getRelativePath(org.apache.maven.scm.provider.ScmProviderRepository)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getBaseName()> ->_CWE200_
<org.springframework.validation.BindException: java.lang.String getObjectName()> ->_CWE200_
<com.vividsolutions.jts.awt.ShapeCollectionPathIterator: int getWindingRule()> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: java.lang.String getExternalEntityRefInAttrValue(java.lang.String)> ->_CWE200_
<org.apache.xerces.impl.dv.xs.IDDV: java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)> ->_CWE200_
<org.apache.commons.io.input.SwappedDataInputStream: boolean readBoolean()> ->_CWE200_
<org.apache.xerces.impl.dv.xs.IDDV: short getAllowedFacets()> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.GeometryCollection readGeometryCollection()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: java.lang.String getProxyHost(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.vividsolutions.jts.index.bintree.NodeBase: int getSubnodeIndex(com.vividsolutions.jts.index.bintree.Interval,double)> ->_CWE200_
<org.springframework.validation.AbstractErrors: int getFieldErrorCount()> ->_CWE200_
<org.codehaus.jackson.map.ser.impl.SimpleFilterProvider: org.codehaus.jackson.map.ser.BeanPropertyFilter getDefaultFilter()> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: java.lang.String getSkipURLString()> ->_CWE200_
<com.vividsolutions.jts.geom.MultiPolygon: int getDimension()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileData: org.apache.commons.vfs2.FileType getType()> ->_CWE200_
<com.vividsolutions.jts.algorithm.HCoordinate: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystem: double getLastModTimeAccuracy()> ->_CWE200_
<org.geotools.filter.function.FilterFunction_isValid: int getArgCount()> ->_CWE200_
<org.zkoss.idom.util.IDOMs: java.util.Map parseParams(org.zkoss.idom.Element,java.lang.String,java.lang.String,java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileObject: org.apache.commons.vfs2.FileObject getLinkDestination()> ->_CWE200_
<org.geotools.referencing.operation.transform.WarpTransform2D: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object readInt(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.Decoder)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.FileProvider: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.opengis.util.CodeList: java.lang.Object readResolve()> ->_CWE200_
<org.joda.time.Seconds: java.lang.Object readResolve()> ->_CWE200_
<org.geotools.data.directory.DirectoryDataStore: org.geotools.data.FeatureReader getFeatureReader(org.geotools.data.Query,org.geotools.data.Transaction)> ->_CWE200_
<openlr.location.GridLocation: long getRadius()> ->_CWE200_
<org.dom4j.io.STAXEventReader: org.dom4j.Element readElement(javax.xml.stream.XMLEventReader)> ->_CWE200_
<org.apache.http.impl.client.BasicCredentialsProvider: void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials)> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: java.util.Collection getMetaProperties(java.lang.String)> ->_CWE200_
<org.springframework.validation.DataBinder: org.springframework.beans.TypeConverter getTypeConverter()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: long readArrayStart()> ->_CWE200_
<org.apache.maven.scm.provider.svn.AbstractSvnScmProvider: org.apache.maven.scm.ScmResult executeCommand(org.apache.maven.scm.provider.svn.command.SvnCommand,org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.CommandParameters)> ->_CWE200_
<com.teleatlas.global.common.ddct.wrappers.DictionaryPropertyWithParentWrapper: java.util.List getBreadCrumb()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.LocateFailureException: com.vividsolutions.jts.geom.LineSegment getSegment()> ->_CWE200_
<com.vividsolutions.jts.geom.MultiPoint: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.Geometry read(java.io.Reader)> ->_CWE200_
<org.apache.xerces.impl.dv.xs.TypeValidator: int getDigit(char)> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: org.apache.xerces.xs.XSNamespaceItem getNamespaceItem()> ->_CWE200_
<org.zkoss.zk.ui.http.ExecutionImpl: java.lang.String getParameter(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle[] getNeighbours()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.blame.SvnBlameConsumer: java.util.Date parseDateTime(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.MultiLineString: com.vividsolutions.jts.geom.Geometry getBoundary()> ->_CWE200_
<org.joda.time.field.DividedDateTimeField: long getDifferenceAsLong(long,long)> ->_CWE200_
<org.zaproxy.zap.extension.spider.ExtensionSpider: org.zaproxy.zap.spider.SpiderParam getSpiderParam()> ->_CWE200_
<org.zkoss.idom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarFileSystem: java.io.InputStream getInputStream(org.apache.commons.vfs2.provider.tar.TarEntry)> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderScope: java.lang.String getParentMenuName()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.lang.Object getFieldValue(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: java.lang.Object getAttribute(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearLocation: int getSegmentIndex()> ->_CWE200_
<org.dom4j.io.XPP3Reader: org.dom4j.Document read(java.io.File)> ->_CWE200_
<com.thoughtworks.paranamer.DefaultParanamer: java.lang.String getParameterTypeName(java.lang.Class)> ->_CWE200_
<org.jboss.resteasy.client.core.ClientInterceptorRepositoryImpl: org.jboss.resteasy.spi.interception.MessageBodyReaderInterceptor[] getReaderInterceptors()> ->_CWE200_
<org.apache.xerces.util.XMLResourceIdentifierImpl: java.lang.String getLiteralSystemId()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.ForeignIdentifiableDecoratorHelper: com.teleatlas.global.common.ddct.DictionaryProperty getProperty(com.teleatlas.global.common.ddct.impl.DictionaryPropertyCollection,com.teleatlas.global.common.ddct.DictionaryModel,java.util.Collection,com.teleatlas.global.common.ddct.HasProperties,int)> ->_CWE200_
<com.vividsolutions.jts.geom.CoordinateList: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<com.mchange.v1.identicator.WeakIdHashKey: com.mchange.v1.identicator.WeakIdHashKey$Ref getInternalRef()> ->_CWE200_
<org.zkoss.idom.ProcessingInstruction: java.util.Map parseToMap(java.util.Map,java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.association.mapimpl.FaceOfHolidayAreaGroundImpl: com.tomtom.cpu.api.semantic.ttom.ttom_topology.feature.Face getFace()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: org.apache.xerces.xs.XSIDCDefinition getRefKey()> ->_CWE200_
<org.apache.avro.io.JsonDecoder: double readDouble()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdgeStar: com.vividsolutions.jts.planargraph.DirectedEdge getNextEdge(com.vividsolutions.jts.planargraph.DirectedEdge)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Label: int getLocation(int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.StreetIdentifierInfoImpl: java.lang.String getStreetIdentifier()> ->_CWE200_
<openlr.decoder.data.CandidateLinesResultSet: openlr.decoder.data.CandidateLine getBestCandidateLine(openlr.LocationReferencePoint)> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: int getSRID()> ->_CWE200_
<org.zkoss.idom.ProcessingInstruction: java.lang.String getText()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearIterator: int getComponentIndex()> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.snap.SnapOverlayOp: void checkValid(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.zkoss.zkmax.zul.impl.LiveGridDataLoader: java.util.Set getAvailableAtClient()> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ArrayEncodedProbBackoffLm readArrayEncodedLmFromArpa(java.lang.String,boolean)> ->_CWE200_
<com.vividsolutions.jts.geom.DefaultCoordinateSequence: com.vividsolutions.jts.geom.Coordinate getCoordinateCopy(int)> ->_CWE200_
<org.geotools.geometry.text.WKTParser: org.opengis.geometry.aggregate.MultiPrimitive readMultiLineStringText(java.io.StreamTokenizer)> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: double getLength()> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderScope: int getParentMenuIndex()> ->_CWE200_
<org.zkoss.idom.CData: java.lang.String getName()> ->_CWE200_
<com.vividsolutions.jts.noding.MCIndexNoder: java.util.List getMonotoneChains()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferSubgraph: com.vividsolutions.jts.geom.Coordinate getRightmostCoordinate()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferBuilder: com.vividsolutions.jts.noding.Noder getNoder(com.vividsolutions.jts.geom.PrecisionModel)> ->_CWE200_
<com.vividsolutions.jts.geom.prep.BasicPreparedGeometry: com.vividsolutions.jts.geom.Geometry getGeometry()> ->_CWE200_
<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getParameterClass(int)> ->_CWE200_
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)> ->_CWE200_
<org.geotools.referencing.operation.builder.LocalizationGridTransform2D: int getTargetDimensions()> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomReader: com.vividsolutions.jts.geom.LineString read(com.tomtom.cpu.api.geometry.LineString)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getStandardPOIInOrder8Area()> ->_CWE200_
<org.geotools.referencing.operation.transform.IdentityTransform: org.opengis.referencing.operation.Matrix getMatrix()> ->_CWE200_
<com.vividsolutions.jts.geom.DefaultCoordinateSequence: int getDimension()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.AllOfValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.AllOfValidityDirection$RANGE getItem()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.HasMandatoryLaneValidityImpl: java.lang.String getLaneValidity()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.ProviderHelper: java.util.List getAvailableVariants(java.util.List)> ->_CWE200_
<org.jboss.resteasy.util.HttpServletRequestDelegate: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)> ->_CWE200_
<com.mchange.v1.identicator.IdHashMap: java.lang.Object get(java.lang.Object)> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterChangeUserAgentDialog: javax.swing.JComboBox getCmbUserAgent()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getStatusCommand()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: byte readByte()> ->_CWE200_
<org.geotools.geometry.text.WKTParser: org.opengis.geometry.aggregate.MultiPrimitive readGeometryCollectionText(java.io.StreamTokenizer)> ->_CWE200_
<org.parosproxy.paros.network.HttpInputStream: int readBody(int,int,byte[])> ->_CWE200_
<com.vividsolutions.jtsexample.geom.ExtendedCoordinateSequence: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<com.vividsolutions.jts.io.ttom.CoordConv: double getScale()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: char readChar()> ->_CWE200_
<org.geotools.referencing.factory.IdentifiedObjectFinder: java.lang.String getIdentifier(org.opengis.referencing.IdentifiedObject)> ->_CWE200_
<openlr.location.InvalidLocation: openlr.map.GeoCoordinates getAccessPoint()> ->_CWE200_
<zemberek.morphology.apps.UnidentifiedTokenParser: java.util.List parseNumeral(java.lang.String)> ->_CWE200_
<org.zkoss.zk.au.out.AuResizeWidget: java.lang.String getOverrideKey()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: java.lang.String getXmlName()> ->_CWE200_
<com.vividsolutions.jts.geom.MultiLineString: int getDimension()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileSystemConfigBuilder: org.apache.commons.vfs2.provider.ram.RamFileSystemConfigBuilder getInstance()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEnd: int getQuadrant()> ->_CWE200_
<com.vividsolutions.jts.algorithm.RayCrossingCounter: int getLocation()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpRandomAccessContent: java.io.DataInputStream getDataInputStream()> ->_CWE200_
<org.apache.commons.vfs2.provider.local.LocalFileName: java.lang.String getRootFile()> ->_CWE200_
<org.zkoss.zk.ui.EventListenerInfo: java.util.Map read(java.io.ObjectInputStream,org.zkoss.zk.ui.AbstractComponent)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.ByteArrayProvider: long getSize(byte[],java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.apache.xerces.impl.XMLEntityManager: java.lang.String setupCurrentEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)> ->_CWE200_
<org.apache.commons.httpclient.UsernamePasswordCredentials: void setPassword(java.lang.String)> ->_CWE200_
<org.geotools.referencing.operation.transform.ProjectiveTransform: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getChangeLogCommand()> ->_CWE200_
<org.zkoss.bind.impl.ValidationMessagesImpl: java.lang.String[] getKeyMessages(java.lang.String)> ->_CWE200_
<com.vividsolutions.jtsexample.geom.ConstructionExample: void main(java.lang.String[])> ->_CWE200_
<org.apache.commons.vfs2.provider.res.ResourceFileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<org.zkoss.idom.transform.Transformer: org.zkoss.idom.Document processDocType(org.zkoss.idom.Document)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: int getDepthDelta()> ->_CWE200_
<com.vividsolutions.jts.triangulate.VoronoiDiagramBuilder: com.vividsolutions.jts.geom.Geometry getDiagram(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<com.vividsolutions.jts.linearref.LocationIndexedLine: com.vividsolutions.jts.linearref.LinearLocation getEndIndex()> ->_CWE200_
<org.zaproxy.zap.extension.httppanel.view.impl.models.http.response.ResponseBodyStringHttpPanelViewModel: java.lang.String getData()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: com.teleatlas.global.common.ddct.DictionaryMetaProperty getMetaProperty(java.lang.String)> ->_CWE200_
<org.joda.time.chrono.GJChronology: java.lang.Object readResolve()> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.Node: com.vividsolutions.jts.geom.Envelope getEnvelope()> ->_CWE200_
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])> ->_CWE200_
<org.dom4j.jaxb.JAXBReader: org.dom4j.Document read(java.io.InputStream,java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavMethodRetryHandler: org.apache.commons.vfs2.provider.webdav.WebdavMethodRetryHandler getInstance()> ->_CWE200_
<com.vividsolutions.jts.operation.valid.SweeplineNestedRingTester: com.vividsolutions.jts.geom.Coordinate getNestedPoint()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: java.lang.Boolean getUserDirIsRoot(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.springframework.validation.MapBindingResult: java.util.Map getTargetMap()> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,boolean)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.update.SvnUpdateCommand: org.apache.maven.scm.command.changelog.ChangeLogCommand getChangeLogCommand()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.Selector: org.apache.xerces.impl.xpath.XPath getXPath()> ->_CWE200_
<org.zkoss.idom.Attribute: java.lang.String getValue()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarUtils: int getOctalBytes(long,byte[],int,int)> ->_CWE200_
<com.vividsolutions.jtsexample.geom.ExtendedCoordinateSequence: int getDimension()> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.PrecisionModel getPrecisionModel()> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomWriter: com.tomtom.cpu.api.geometry.Geometry write(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.geotools.filter.FidFilterImpl: java.lang.String[] getFids()> ->_CWE200_
<org.apache.log4j.LogManager: boolean isLikelySafeScenario(java.lang.Exception)> ->_CWE200_
<com.vividsolutions.jtsexample.geom.SimpleMethodsExample: void run()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PropertiesBasedValueSource: java.lang.Object getValue(java.lang.String)> ->_CWE200_
<org.zkoss.zk.au.AuRequest: int getOptions()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.FormUrlEncodedProvider: javax.ws.rs.core.MultivaluedMap readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)> ->_CWE200_
<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer getNullKeySerializer()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarFileObject: java.util.jar.Attributes getAttributes()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: java.io.InputStream getInputStream()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: double[] getMatrixEntries()> ->_CWE200_
<org.geotools.metadata.iso.identification.BrowseGraphicImpl: org.opengis.util.InternationalString getFileDescription()> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.MappingIterator readValues(byte[])> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConstraintEnforcementException: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<com.vividsolutions.jts.algorithm.HCoordinate: double getY()> ->_CWE200_
<com.vividsolutions.jts.algorithm.HCoordinate: double getX()> ->_CWE200_
<com.vividsolutions.jts.index.strtree.STRtree: com.vividsolutions.jts.index.strtree.AbstractSTRtree$IntersectsOp getIntersectsOp()> ->_CWE200_
<org.zkoss.zk.ui.metainfo.impl.WidgetDefinitionImpl: java.lang.String getWidgetClass()> ->_CWE200_
<com.vividsolutions.jts.operation.distance.GeometryLocation: com.vividsolutions.jts.geom.Geometry getGeometryComponent()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: org.apache.xerces.xs.XSObjectList getAnnotations()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarFileSystem: java.lang.Object getAttribute(java.lang.String)> ->_CWE200_
<org.parosproxy.paros.network.GenericMethod: org.apache.commons.httpclient.NameValuePair getParameter(java.lang.String)> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.SuffixForm getForm(java.lang.String,zemberek.morphology.lexicon.Suffix,java.lang.String,zemberek.morphology.lexicon.graph.TerminationType)> ->_CWE200_
<org.zaproxy.zap.extension.spider.ExtensionSpider: org.zaproxy.zap.extension.spider.SpiderPanel getSpiderPanel()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getPathDecoded()> ->_CWE200_
<org.zkoss.bind.validator.BeanValidator: javax.validation.Validator getValidator()> ->_CWE200_
<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.InputStream)> ->_CWE200_
<org.zkoss.idom.Binary: java.lang.String getNodeName()> ->_CWE200_
<org.springframework.remoting.rmi.RemoteInvocationSerializingExporter: org.springframework.remoting.support.RemoteInvocation doReadRemoteInvocation(java.io.ObjectInputStream)> ->_CWE200_
<org.apache.commons.lang3.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)> ->_CWE200_
<com.vividsolutions.jts.noding.NodedSegmentString: java.lang.Object getData()> ->_CWE200_
<com.vividsolutions.jts.noding.snapround.MCIndexSnapRounder: java.util.Collection getNodedSubstrings()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystem: org.apache.commons.vfs2.provider.ftp.FtpClient getClient()> ->_CWE200_
<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.net.URL getResource(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.bzip2.CBZip2InputStream: void getAndMoveToFrontDecode()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceInBuilt_UpArea()> ->_CWE200_
<org.geotools.referencing.factory.IdentifiedObjectSet: java.lang.String getAuthorityCode(org.opengis.referencing.IdentifiedObject)> ->_CWE200_
<org.zaproxy.zap.spider.SpiderController: java.util.LinkedList getParseFilters()> ->_CWE200_
<javassist.tools.reflect.Metaobject: java.lang.Class[] getParameterTypes(int)> ->_CWE200_
<org.zkoss.idom.Element: org.zkoss.idom.Attribute getAttributeItem(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: com.vividsolutions.jts.geomgraph.DirectedEdge getNext()> ->_CWE200_
<org.springframework.validation.BindException: int getFieldErrorCount(java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getRevision()> ->_CWE200_
<org.apache.xerces.util.XMLResourceIdentifierImpl: java.lang.String getPublicId()> ->_CWE200_
<org.zkoss.idom.input.SAXHandler: org.zkoss.idom.Group getTopGroup()> ->_CWE200_
<com.tomtom.cpu.coredb.client.impl.ByIdReadCalls: com.tomtom.cpu.api.features.Feature getFeatureById(java.lang.String,java.lang.String)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixedValueSourceWrapper: java.lang.String getLastExpression()> ->_CWE200_
<org.parosproxy.paros.extension.history.ExtensionHistory: org.parosproxy.paros.extension.manualrequest.ManualRequestEditorDialog getResendDialog()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.Tbz2FileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<org.zkoss.bind.impl.ValidationContextImpl: java.lang.String getCommand()> ->_CWE200_
<com.vividsolutions.jts.simplify.TaggedLineSegment: com.vividsolutions.jts.geom.Geometry getParent()> ->_CWE200_
<org.geotools.filter.identity.FeatureIdImpl: java.lang.String getID()> ->_CWE200_
<zemberek.core.io.SimpleTextReader: zemberek.core.io.IterableLineReader getIterableReader()> ->_CWE200_
<com.vividsolutions.jts.index.sweepline.SweepLineInterval: java.lang.Object getItem()> ->_CWE200_
<org.apache.xerces.parsers.NonValidatingConfiguration: boolean getFeature(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: int getEdgeIndex(com.vividsolutions.jts.triangulate.quadedge.Vertex)> ->_CWE200_
<org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream: int readFully(byte[],int,int)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.status.SvnStatusConsumer: java.util.List getChangedFiles()> ->_CWE200_
<org.zkoss.zul.Slider: java.lang.String getZclass()> ->_CWE200_
<org.apache.avro.io.JsonDecoder: int readEnum()> ->_CWE200_
<com.vividsolutions.jtsexample.geom.ExtendedCoordinateExample: void main(java.lang.String[])> ->_CWE200_
<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer _createAndCacheValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: java.util.List getVertexUniqueEdges(boolean)> ->_CWE200_
<org.zkoss.idom.Attribute: java.lang.String getText()> ->_CWE200_
<org.apache.commons.vfs2.provider.local.LocalFile: boolean doIsReadable()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.FormUrlEncodedProvider: javax.ws.rs.core.MultivaluedMap parseForm(java.io.InputStream)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.SideOfLineAndOnImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.AllOfSideOfLine$RANGE getItem()> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: org.zkoss.idom.Element getElement(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToReflectionBasic(double,double,double,double)> ->_CWE200_
<com.vividsolutions.jts.geom.MultiLineString: java.lang.String getGeometryType()> ->_CWE200_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: javax.validation.ConstraintValidatorFactory getConstraintValidatorFactory()> ->_CWE200_
<org.springframework.beans.propertyeditors.UUIDEditor: java.lang.String getAsText()> ->_CWE200_
<org.zaproxy.zap.extension.auth.ExtensionAuth: org.zaproxy.zap.extension.stdmenus.PopupContextMenuSiteNodeFactory getPopupFlagLoginMenuFactory()> ->_CWE200_
<org.apache.commons.vfs2.provider.UriParser: java.lang.String decode(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.String getDefaultDateFormat(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.codehaus.jackson.io.BaseReader: int read()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.AbstractFunctionValueSourceWrapper: java.lang.Object getValue(java.lang.String)> ->_CWE200_
<com.google.common.io.Files: java.lang.String readFirstLine(java.io.File,java.nio.charset.Charset)> ->_CWE200_
<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: int getNumInteriorRing()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: java.lang.String getSelectorStr()> ->_CWE200_
<org.geotools.filter.function.FilterFunction_centroid: int getArgCount()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearIterator: int getVertexIndex()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()> ->_CWE200_
<com.vividsolutions.jts.linearref.LengthLocationMap: double getLength(com.vividsolutions.jts.linearref.LinearLocation)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory getEntryParserFactory(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.vividsolutions.jts.geom.util.PolygonExtracter: java.util.List getPolygons(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Point getCentroid()> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.PolygonizeEdge: com.vividsolutions.jts.geom.LineString getLine()> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderThread: org.zaproxy.zap.extension.spider.SpiderPanelTableModel getResultsTableModel()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: org.opengis.util.InternationalString getPurpose()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)> ->_CWE200_
<openlr.decoder.data.CandidateNodesResultSet: openlr.decoder.data.NodeWithDistance getClosestNode(openlr.LocationReferencePoint)> ->_CWE200_
<org.apache.thrift.transport.TFileTransport: int read(byte[],int,int)> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderURL: java.lang.String getParentMenuName()> ->_CWE200_
<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.InputStream,java.lang.String)> ->_CWE200_
<org.geotools.data.DefaultFeatureReader: org.opengis.feature.simple.SimpleFeature readFeature(org.geotools.data.AttributeReader)> ->_CWE200_
<org.dom4j.io.XPPReader: org.dom4j.Document read(java.io.Reader)> ->_CWE200_
<org.zkoss.idom.transform.Transformer: javax.xml.transform.ErrorListener getErrorListener()> ->_CWE200_
<org.springframework.validation.beanvalidation.MessageSourceResourceBundleLocator: java.util.ResourceBundle getResourceBundle(java.util.Locale)> ->_CWE200_
<com.google.common.io.MultiReader: int read(char[],int,int)> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: org.zkoss.zk.ui.Component getOwner()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.PointPairDistance: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.apache.commons.vfs2.util.MonitorRandomAccessContent: java.lang.String readLine()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: void readFixed(byte[],int,int)> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: java.lang.String getElementName()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getServerPreProcessInterceptorRegistry()> ->_CWE200_
<org.zkoss.idom.Element: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)> ->_CWE200_
<openlr.location.InvalidLocation: long getRadius()> ->_CWE200_
<org.geotools.metadata.iso.identification.DataIdentificationImpl: org.opengis.util.InternationalString getEnvironmentDescription()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeRing: java.util.List getEdges()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: java.io.OutputStream getOutputStream()> ->_CWE200_
<org.joda.time.tz.DefaultNameProvider: java.lang.String getShortName(java.util.Locale,java.lang.String,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.index.kdtree.KdNode: com.vividsolutions.jts.index.kdtree.KdNode getRight()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: org.apache.xerces.impl.dtd.DTDGrammarBucket getGrammarBucket()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: org.apache.xerces.impl.xs.identity.Selector getSelector()> ->_CWE200_
<edu.berkeley.nlp.lm.phrasetable.PhraseTableValueContainer: int[] readOrders(edu.berkeley.nlp.lm.array.CustomWidthArray)> ->_CWE200_
<org.apache.commons.vfs2.provider.URLFileName: java.lang.String getPathQuery()> ->_CWE200_
<edu.berkeley.nlp.lm.array.CustomWidthArray: long getHelp(long,int,int)> ->_CWE200_
<org.apache.commons.io.input.DemuxInputStream: int read()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: java.util.Map getAttributes()> ->_CWE200_
<org.apache.xml.serialize.DOMWriterImpl: java.lang.Object getParameter(java.lang.String)> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterChangeUserAgent: java.lang.String getName()> ->_CWE200_
<org.opengis.parameter.InvalidParameterNameException: java.lang.String getParameterName()> ->_CWE200_
<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.BufferResultValidator: com.vividsolutions.jts.geom.Coordinate getErrorLocation()> ->_CWE200_
<com.vividsolutions.jtsexample.io.gml2.KMLHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)> ->_CWE200_
<org.zkoss.idom.impl.DOMImplementation: java.lang.Object getFeature(java.lang.String,java.lang.String)> ->_CWE200_
<org.jboss.resteasy.plugins.server.servlet.ListenerBootstrap: java.util.Set getParameterNames()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.reflection.ClassMap: java.lang.reflect.Method[] getAccessibleMethods(java.lang.Class)> ->_CWE200_
<org.springframework.core.MethodParameter: java.lang.Class getParameterType()> ->_CWE200_
<org.zkoss.zkmax.zul.impl.LiveGridDataLoader: org.zkoss.zul.Grid getGrid()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.String getText()> ->_CWE200_
<com.mchange.v2.sql.filter.FilterDataSource: int getLoginTimeout()> ->_CWE200_
<org.dom4j.util.UserDataElement: java.lang.Object getData()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.changelog.SvnChangeLogConsumer: java.util.List getModifications()> ->_CWE200_
<com.google.common.io.LineReader: java.lang.String readLine()> ->_CWE200_
<org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge: java.io.InputStream getInputView()> ->_CWE200_
<org.geotools.data.AbstractDataStore: org.geotools.data.FeatureReader getFeatureReader(java.lang.String,org.geotools.data.Query)> ->_CWE200_
<com.vividsolutions.jtsexample.operation.linemerge.LineMergeExample: com.vividsolutions.jts.geom.Geometry read(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: int getContentLength()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulationBuilder: com.vividsolutions.jts.geom.Geometry getEdges(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FTPClientWrapper: org.apache.commons.vfs2.provider.GenericFileName getRoot()> ->_CWE200_
<org.zkoss.idom.Namespace: org.zkoss.idom.Namespace getSpecial(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.UriParser: java.lang.String[] encode(java.lang.String[])> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.association.mapimpl.FaceOfHolidayAreaGroundImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.generalization.feature.OtherLandUseFeature getOtherLandUseFeature()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: long getSize()> ->_CWE200_
<org.jboss.resteasy.client.ClientRequest: org.jboss.resteasy.client.ClientResponse get(java.lang.Class,java.lang.reflect.Type)> ->_CWE200_
<org.zkoss.idom.Document: org.w3c.dom.Element getElementById(java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.SvnCommandLineUtils: int execute(org.codehaus.plexus.util.cli.Commandline,org.codehaus.plexus.util.cli.CommandLineUtils$StringStreamConsumer,org.codehaus.plexus.util.cli.CommandLineUtils$StringStreamConsumer,org.apache.maven.scm.log.ScmLogger)> ->_CWE200_
<com.vividsolutions.jts.util.Debug: void main(java.lang.String[])> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: java.lang.String getUserName()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.SweepLineEvent: com.vividsolutions.jts.geomgraph.index.SweepLineEvent getInsertEvent()> ->_CWE200_
<org.apache.maven.scm.provider.ScmProviderRepository: java.lang.String getPassword()> ->_CWE200_
<org.apache.avro.reflect.ReflectDatumReader: java.lang.Object readArray(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.ResolvingDecoder)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: com.vividsolutions.jts.geomgraph.EdgeIntersectionList getEdgeIntersectionList()> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomWriter: com.tomtom.cpu.api.geometry.GeometryCollection write(com.vividsolutions.jts.geom.GeometryCollection)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceFeatureAlongRoadElement()> ->_CWE200_
<org.geotools.metadata.iso.identification.BrowseGraphicImpl: java.net.URI getFileName()> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ContextEncodedProbBackoffLm readContextEncodedLmFromArpa(java.lang.String,edu.berkeley.nlp.lm.WordIndexer)> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JCheckBox getChkParseRobotsTxt()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Depth: int getLocation(int,int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceBelongingToEntryPoint()> ->_CWE200_
<org.jboss.resteasy.mock.MockHttpRequest: java.lang.Object getAttribute(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.simplify.TopologyPreservingSimplifier: com.vividsolutions.jts.geom.Geometry getResultGeometry()> ->_CWE200_
<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type[] getParameterTypes()> ->_CWE200_
<com.vividsolutions.jts.noding.snapround.HotPixel: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.dom4j.io.XPPReader: org.dom4j.Document read(java.net.URL)> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.Polygonizer: java.util.Collection getInvalidRingLines()> ->_CWE200_
<com.google.common.primitives.AndroidInteger: java.lang.Integer tryParse(java.lang.String,int,int,boolean)> ->_CWE200_
<com.tomtom.cpu.coredb.writeapi.impl.logical.CreateCompositeFeatureImpl: java.lang.Object readResolve()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: long readLong()> ->_CWE200_
<org.zkoss.idom.impl.AbstractTextual: java.lang.String getTextContent()> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode readTree(java.io.Reader)> ->_CWE200_
<org.zkoss.io.RepeatableURLInputStream: int read()> ->_CWE200_
<org.springframework.beans.factory.support.MethodOverrides: java.util.Set getOverrides()> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.DoubleBits: int getExponent()> ->_CWE200_
<org.springframework.validation.DirectFieldBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()> ->_CWE200_
<com.google.common.io.CharSource: com.google.common.collect.ImmutableList readLines()> ->_CWE200_
<com.vividsolutions.jts.geom.prep.PreparedPolygon: com.vividsolutions.jts.algorithm.locate.PointOnGeometryLocator getPointLocator()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: com.vividsolutions.jts.geom.Geometry getTriangles(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.NoIdlingSignImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.association.TrafficSignAlongRoadElement getTrafficSignAlongRoadElement()> ->_CWE200_
<org.zkoss.xel.util.MethodFunction: java.lang.Class[] getParameterTypes()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.Field: org.apache.xerces.impl.xs.identity.IdentityConstraint getIdentityConstraint()> ->_CWE200_
<com.vividsolutions.jts.planargraph.Edge: com.vividsolutions.jts.planargraph.Node getOppositeNode(com.vividsolutions.jts.planargraph.Node)> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder getInstance()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: int getErrorCount()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getReverseServiceBelongingToService()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarUtils: int getNameBytes(java.lang.StringBuffer,byte[],int,int)> ->_CWE200_
<org.jboss.resteasy.util.HttpServletRequestDelegate: java.io.BufferedReader getReader()> ->_CWE200_
<org.springframework.core.convert.Property: org.springframework.core.MethodParameter resolveReadMethodParameter()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: int getFormCount()> ->_CWE200_
<org.geotools.data.shapefile.ShapefileDataStore: org.geotools.data.shapefile.dbf.DbaseFileReader openDbfReader()> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: int getHighZ()> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: int getHighY()> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: int getHighX()> ->_CWE200_
<org.zkoss.bind.validator.DeferredValidator: org.zkoss.bind.Validator getValidator()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToRotation(double,double,double)> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: boolean isParseRobotsTxt()> ->_CWE200_
<org.dom4j.util.UserDataElement: java.lang.Object getCopyOfUserData()> ->_CWE200_
<com.vividsolutions.jtsexample.geom.ExtendedCoordinateSequence: double getY(int)> ->_CWE200_
<com.vividsolutions.jtsexample.geom.ExtendedCoordinateSequence: double getX(int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceInNeighborhood()> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: org.opengis.referencing.ReferenceIdentifier getIdentifier(org.opengis.referencing.IdentifiedObject,org.opengis.metadata.citation.Citation)> ->_CWE200_
<com.vividsolutions.jts.operation.union.CascadedPolygonUnion: com.vividsolutions.jts.geom.Geometry getGeometry(java.util.List,int)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdge: com.vividsolutions.jts.triangulate.quadedge.QuadEdge getPrimary()> ->_CWE200_
<org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory: javax.validation.ConstraintValidator getInstance(java.lang.Class)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.reflection.MethodMap: java.util.List get(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.compressed.CompressedFileFileProvider: org.apache.commons.vfs2.FileSystem doCreateFileSystem(java.lang.String,org.apache.commons.vfs2.FileObject,org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: org.zkoss.idom.Element getElement(java.lang.String,java.lang.String,int)> ->_CWE200_
<org.zkoss.io.ResetableInputStream: int read()> ->_CWE200_
<org.geotools.metadata.iso.identification.DataIdentificationImpl: java.util.Collection getExtent()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.StrictlySidedImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.AllOfSideOfLine$RANGE getItem()> ->_CWE200_
<org.parosproxy.paros.core.scanner.VariantODataIdQuery: java.util.Vector getParamList()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.Importance getImportance()> ->_CWE200_
<org.apache.maven.scm.provider.ScmUrlUtils: java.lang.String getProvider(java.lang.String)> ->_CWE200_
<org.zkoss.idom.input.SAXBuilder: org.zkoss.idom.input.IDOMFactory getIDOMFactory()> ->_CWE200_
<com.vividsolutions.jts.linearref.LengthLocationMap: com.vividsolutions.jts.linearref.LinearLocation getLocation(double)> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.PolygonizeGraph: com.vividsolutions.jts.planargraph.Node getNode(com.vividsolutions.jts.geom.Coordinate)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEnd: double getDx()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEnd: double getDy()> ->_CWE200_
<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.impl.DataLoader getDataLoader()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.HolidayAreaGroundImpl: java.util.Collection getFaceOfArea()> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetAttribute: org.zkoss.zk.xel.EvaluatorRef getEvaluatorRef()> ->_CWE200_
<com.vividsolutions.jts.index.kdtree.KdNode: int getCount()> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionParseRobotsTxt(boolean)> ->_CWE200_
<org.zkoss.idom.ProcessingInstruction: java.util.Map parseData()> ->_CWE200_
<org.apache.avro.util.WeakIdentityHashMap: java.lang.Object get(java.lang.Object)> ->_CWE200_
<edu.berkeley.nlp.lm.StupidBackoffLm: float getLogProb(java.util.List)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: boolean readBoolean()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileRandomAccessContent: java.io.InputStream getInputStream()> ->_CWE200_
<com.vividsolutions.jts.operation.valid.TopologyValidationError: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultURLConnection: java.io.OutputStream getOutputStream()> ->_CWE200_
<org.zkoss.idom.input.SAXHandler: org.xml.sax.ErrorHandler getErrorHandler()> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: int getTotalSize()> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: org.zkoss.zk.ui.Component getCropOwner()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: java.util.List getClientErrorInterceptors()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getForwardServiceBelongingToService()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.String getServerTimeZoneId(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.zkoss.idom.Binary: java.lang.Object getValue()> ->_CWE200_
<org.dom4j.io.DOMReader: org.dom4j.Document read(org.w3c.dom.Document)> ->_CWE200_
<com.vividsolutions.jts.precision.CommonBits: double getCommon()> ->_CWE200_
<com.vividsolutions.jts.planargraph.Node: int getDegree()> ->_CWE200_
<org.geotools.referencing.operation.projection.LambertConformal: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: int getQuadrant()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileSelectorInfo: org.apache.commons.vfs2.FileObject getFile()> ->_CWE200_
<org.geotools.referencing.cs.DirectionAlongMeridian: org.geotools.referencing.cs.DirectionAlongMeridian parse(java.lang.String)> ->_CWE200_
<ch.csnc.extension.httpclient.AliasKeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: java.lang.String getName(org.opengis.metadata.citation.Citation)> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.Node: com.vividsolutions.jts.index.quadtree.Node getNode(com.vividsolutions.jts.geom.Envelope)> ->_CWE200_
<com.zones.util.FileUtil: java.lang.String readFile(java.io.InputStream)> ->_CWE200_
<org.zkoss.idom.Attribute: boolean getSpecified()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getInternetAddress()> ->_CWE200_
<org.springframework.validation.DataBinder: org.springframework.validation.BindingErrorProcessor getBindingErrorProcessor()> ->_CWE200_
<org.geotools.referencing.cs.DirectionAlongMeridian: org.opengis.referencing.cs.AxisDirection getDirection()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.changelog.SvnChangeLogConsumer: java.lang.String getRevision(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: java.security.cert.Certificate[] getCertificates()> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object read(java.lang.Object,org.apache.avro.io.Decoder)> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: double getLength()> ->_CWE200_
<org.springframework.validation.BindException: java.lang.String getMessage()> ->_CWE200_
<com.vividsolutions.jts.geom.impl.PackedCoordinateSequence: com.vividsolutions.jts.geom.Coordinate[] getCachedCoords()> ->_CWE200_
<org.geotools.geometry.jts.WKTReader2: com.vividsolutions.jts.geom.GeometryCollection readGeometryCollectionText()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: int readInt()> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderContext: org.zaproxy.zap.extension.spider.ExtensionSpider getExtensionSpider()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setTransformation(com.vividsolutions.jts.geom.util.AffineTransformation)> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderSubtree: int getParentMenuIndex()> ->_CWE200_
<org.geotools.geometry.jts.WKTReader2: com.vividsolutions.jts.geom.Polygon readCurvePolygonText()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferParameters: int getEndCapStyle()> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object read(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.ResolvingDecoder)> ->_CWE200_
<javax.servlet.ServletRequestWrapper: java.io.BufferedReader getReader()> ->_CWE200_
<org.apache.thrift.protocol.TBinaryProtocol: java.lang.String readString()> ->_CWE200_
<com.vividsolutions.jts.noding.NodedSegmentString: int getSegmentOctant(int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_ada.domain.mapimpl.AllOfValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom_ada.domain.AllOfValidityDirection$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulator: java.util.Collection getConstraintSegments()> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionParseComments(boolean)> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderSubtree: java.lang.String getParentMenuName()> ->_CWE200_
<zemberek.core.io.IOs: zemberek.core.io.IterableLineReader getIterableReader(java.io.InputStream,java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.MovableBridgeSignImpl: java.lang.Integer getid()> ->_CWE200_
<org.apache.commons.vfs2.provider.bzip2.CRC: int getFinalCRC()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: java.io.OutputStream getOutputStream()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: java.lang.String getTypeName()> ->_CWE200_
<org.apache.avro.io.BinaryDecoder: int readIndex()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileObject: org.apache.jackrabbit.webdav.property.DavProperty getProperty(org.apache.commons.vfs2.provider.URLFileName,java.lang.String)> ->_CWE200_
<openlr.location.InvalidLocation: openlr.map.GeoCoordinates getPointLocation()> ->_CWE200_
<org.apache.xerces.impl.io.UTF8Reader: int read()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.Class getConfigClass()> ->_CWE200_
<org.geotools.referencing.operation.builder.LocalizationGrid: java.awt.Dimension getSize()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getTextOfChild(java.lang.Object)> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.XmlDictionaryModelStore: java.util.Collection readExternalMetaPropertyDescriptors(java.lang.String,com.teleatlas.global.common.ddct.DictionaryModelDescriptor)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.TopologyLocation: int get(int)> ->_CWE200_
<org.zaproxy.zap.utils.HttpUserAgent: java.lang.String getBrowserVersion(java.lang.String)> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: org.opengis.util.GenericName getName()> ->_CWE200_
<org.zaproxy.zap.control.ControlOverrides: int getProxyPort()> ->_CWE200_
<openlr.location.GridLocation: openlr.location.data.AffectedLines getAffectedLines()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarURLConnectionImpl: java.util.jar.Manifest getManifest()> ->_CWE200_
<com.vividsolutions.jts.triangulate.VoronoiDiagramBuilder: com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision getSubdivision()> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomReader: com.vividsolutions.jts.geom.LinearRing read(com.tomtom.cpu.api.geometry.LinearRing)> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearGeometryBuilder: com.vividsolutions.jts.geom.Geometry getGeometry()> ->_CWE200_
<zemberek.morphology.lexicon.graph.IdMaker: java.lang.String getRandom()> ->_CWE200_
<org.zkoss.idom.Document: java.lang.String getInputEncoding()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.String getServerTimeZoneId(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.dom4j.io.SAXModifier: org.dom4j.io.SAXReader installModifyReader()> ->_CWE200_
<com.vividsolutions.jts.noding.snapround.SimpleSnapRounder: java.util.Collection getNodedSubstrings()> ->_CWE200_
<org.dom4j.io.XPP3Reader: org.dom4j.Document read(java.io.Reader,java.lang.String)> ->_CWE200_
<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.InputStream,java.lang.String)> ->_CWE200_
<org.springframework.validation.BindingResultUtils: org.springframework.validation.BindingResult getRequiredBindingResult(java.util.Map,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.PolygonizeGraph: java.util.List getEdgeRings()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractVfsComponent: org.apache.commons.logging.Log getLogger()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.Geometry read(java.lang.String)> ->_CWE200_
<org.dom4j.util.UserDataDocumentFactory: org.dom4j.DocumentFactory getInstance()> ->_CWE200_
<org.parosproxy.paros.core.scanner.VariantODataIdQuery: java.lang.String setEscapedParameter(org.parosproxy.paros.network.HttpMessage,org.parosproxy.paros.core.scanner.NameValuePair,java.lang.String,java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.url.UrlFileProvider: org.apache.commons.vfs2.FileSystemConfigBuilder getConfigBuilder()> ->_CWE200_
<org.zkoss.zul.Slider: int getPageIncrement()> ->_CWE200_
<org.apache.avro.io.DirectBinaryDecoder: boolean readBoolean()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeRing: com.vividsolutions.jts.geom.LinearRing getLinearRing()> ->_CWE200_
<com.vividsolutions.jts.linearref.LengthIndexedLine: double getStartIndex()> ->_CWE200_
<org.apache.commons.vfs2.provider.UriParser: java.lang.String encode(java.lang.String)> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: int getFieldCount()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.SvnCommandLineUtils: int executeCleanUp(java.io.File,org.codehaus.plexus.util.cli.StreamConsumer,org.codehaus.plexus.util.cli.StreamConsumer)> ->_CWE200_
<org.geotools.referencing.operation.builder.LocalizationGridTransform2D: org.opengis.parameter.ParameterDescriptorGroup getParameterDescriptors()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: com.vividsolutions.jts.geomgraph.DirectedEdge getSym()> ->_CWE200_
<org.zaproxy.zap.extension.spider.ExtensionSpider: java.lang.String getDescription()> ->_CWE200_
<org.springframework.validation.BindException: java.lang.Object getFieldValue(java.lang.String)> ->_CWE200_
<org.springframework.validation.BindException: java.lang.Class getFieldType(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferParameters: int getQuadrantSegments()> ->_CWE200_
<com.vividsolutions.jts.planargraph.Edge: com.vividsolutions.jts.planargraph.DirectedEdge getDirEdge(com.vividsolutions.jts.planargraph.Node)> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.io.File)> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearGeometryBuilder: com.vividsolutions.jts.geom.Coordinate getLastCoordinate()> ->_CWE200_
<org.dom4j.jaxb.JAXBReader: org.dom4j.Document read(java.io.InputStream)> ->_CWE200_
<org.apache.avro.io.DirectBinaryDecoder: long readLong()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: void printEdge(java.io.PrintStream)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEnd: com.vividsolutions.jts.geomgraph.Node getNode()> ->_CWE200_
<org.geotools.data.FIDSQuery: java.lang.String getHandle()> ->_CWE200_
<com.vividsolutions.jts.noding.SegmentNodeList: void print(java.io.PrintStream)> ->_CWE200_
<zemberek.core.io.SimpleTextReader: zemberek.core.io.IterableLineReader trimmingUTF8IterableLineReader(java.io.File)> ->_CWE200_
<org.apache.commons.io.input.SwappedDataInputStream: char readChar()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.FileContentInfoFactory getFileContentInfoFactory()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.list.SvnListConsumer: java.util.List getFiles()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getServerPostProcessInterceptorRegistry()> ->_CWE200_
<org.apache.maven.scm.provider.svn.repository.SvnScmProviderRepository: java.lang.String getBranchBase()> ->_CWE200_
<openlr.decoder.data.CandidateLinePair: int getStartIndex()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: java.io.File getFile()> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.ListModel getModel()> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.MappingIterator readValues(java.io.InputStream)> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaValidator: java.lang.Boolean getFeatureDefault(java.lang.String)> ->_CWE200_
<org.zaproxy.zap.spider.SpiderParam: int getMaxDepth()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<org.springframework.util.xml.StaxUtils: javax.xml.stream.XMLEventReader getXMLEventReader(javax.xml.transform.Source)> ->_CWE200_
<Zql.ZqlJJParserTokenManager: Zql.Token getNextToken()> ->_CWE200_
<org.apache.commons.io.input.TeeInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileRandomAccessContent: int getLeftBytes()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: java.lang.String getTypeShortName()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.BufferDistanceValidator: com.vividsolutions.jts.geom.Geometry getPolygonLines(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.BufferDistanceValidator: java.lang.String getErrorMessage()> ->_CWE200_
<org.zkoss.idom.DocType: java.lang.String getInternalSubset()> ->_CWE200_
<org.jboss.resteasy.test.BaseResourceTest: java.lang.String readString(java.io.InputStream)> ->_CWE200_
<org.apache.commons.compress.archivers.ar.ArArchiveInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[],int,int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_speed_profile.attribute.mapimpl.HasValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom.ttom_speed_profile.domain.StrictValidityDirection getValidityDirection()> ->_CWE200_
<com.vividsolutions.jts.index.chain.MonotoneChain: int getId()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],java.lang.Class)> ->_CWE200_
<org.zkoss.zkplus.databind.BindingValidateEvent: java.util.List getReferences()> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderThread: int getProgress()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarFileSystem: org.apache.commons.vfs2.provider.tar.TarInputStream getTarFile()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileProvider: org.apache.commons.vfs2.FileSystemConfigBuilder getConfigBuilder()> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: int getContentSpecType(int)> ->_CWE200_
<com.vividsolutions.jtsexample.geom.PrecisionModelExample: void intersection(java.lang.String,java.lang.String,com.vividsolutions.jts.geom.PrecisionModel)> ->_CWE200_
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: java.lang.Object[] getArgumentsForConstraint(java.lang.String,java.lang.String,javax.validation.metadata.ConstraintDescriptor)> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.MinimalEdgeRing: com.vividsolutions.jts.geomgraph.DirectedEdge getNext(com.vividsolutions.jts.geomgraph.DirectedEdge)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getAddCommand()> ->_CWE200_
<javax.servlet.ServletRequestWrapper: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)> ->_CWE200_
<org.geotools.data.FIDSQuery: int getMaxFeatures()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: com.vividsolutions.jts.planargraph.Edge getEdge()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: com.vividsolutions.jts.geom.Geometry getEdges(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.MaximalEdgeRing: com.vividsolutions.jts.geomgraph.DirectedEdge getNext(com.vividsolutions.jts.geomgraph.DirectedEdge)> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetAttribute: java.lang.String getRawValue()> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderThread: int getMaximum()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.AccidentHazardSignImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.association.TrafficSignAlongRoadElement getTrafficSignAlongRoadElement()> ->_CWE200_
<com.vividsolutions.jts.operation.valid.IsValidOp: com.vividsolutions.jts.operation.valid.TopologyValidationError getValidationError()> ->_CWE200_
<com.vividsolutions.jts.geom.LineString: com.vividsolutions.jts.geom.CoordinateSequence getCoordinateSequence()> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,boolean)> ->_CWE200_
<org.geotools.styling.UserLayerImpl: org.geotools.styling.RemoteOWS getRemoteOWS()> ->_CWE200_
<org.jboss.resteasy.test.TestPortProvider: org.jboss.resteasy.client.ClientRequest createClientRequest(java.lang.String)> ->_CWE200_
<org.apache.xerces.util.XMLResourceIdentifierImpl: java.lang.String getNamespace()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileSystemConfigBuilder: java.lang.Class getConfigClass()> ->_CWE200_
<com.vividsolutions.jts.geom.MultiPoint: int getDimension()> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.io.Reader)> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: java.lang.String getXmlName()> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JScrollPane getDomainsScrollPane()> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JSlider getSliderThreads()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.changelog.SvnChangeLogConsumer: java.util.Date getDate(java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.changelog.SvnChangeLogCommand: org.apache.maven.scm.command.changelog.ChangeLogScmResult executeChangeLogCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.ScmVersion,org.apache.maven.scm.ScmVersion,java.lang.String)> ->_CWE200_
<org.geotools.metadata.iso.identification.ResolutionImpl: org.opengis.metadata.identification.RepresentativeFraction getEquivalentScale()> ->_CWE200_
<org.geotools.data.DefaultFeatureResults: org.geotools.data.FeatureReader boundsReader()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileNameParser: org.apache.commons.vfs2.provider.FileNameParser getInstance()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.info.SvnInfoCommand: org.apache.maven.scm.ScmResult executeCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.CommandParameters)> ->_CWE200_
<com.vividsolutions.jts.planargraph.PlanarGraph: java.util.Collection getEdges()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.association.mapimpl.FaceOfHolidayAreaGroundImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.generalization.feature.LandUse getLandUse()> ->_CWE200_
<com.vividsolutions.jts.noding.SegmentIntersectionDetector: com.vividsolutions.jts.geom.Coordinate[] getIntersectionSegments()> ->_CWE200_
<com.vividsolutions.jts.index.bintree.Interval: double getWidth()> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.Geometry read(byte[])> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getNodeKind()> ->_CWE200_
<org.geotools.geometry.text.WKTParser: org.opengis.geometry.Geometry readGeometryTaggedText(java.io.StreamTokenizer)> ->_CWE200_
<com.vividsolutions.jts.geom.Point: int getBoundaryDimension()> ->_CWE200_
<org.codehaus.plexus.util.InterpolationFilterReader: int read()> ->_CWE200_
<org.springframework.core.io.support.EncodedResource: java.io.Reader getReader()> ->_CWE200_
<openlr.location.InvalidLocation: java.util.List getSubRouteList()> ->_CWE200_
<org.jboss.resteasy.plugins.server.servlet.FilterBootstrap: java.util.Set getParameterNames()> ->_CWE200_
<org.zkoss.zk.ui.impl.PhantomExecution: java.lang.String[] getParameterValues(java.lang.String)> ->_CWE200_
<org.apache.commons.io.input.SwappedDataInputStream: byte readByte()> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.Key: com.vividsolutions.jts.geom.Coordinate getPoint()> ->_CWE200_
<org.springframework.core.type.classreading.SimpleMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(java.lang.String)> ->_CWE200_
<org.geotools.referencing.cs.DirectionAlongMeridian: org.geotools.referencing.cs.DirectionAlongMeridian parse(org.opengis.referencing.cs.AxisDirection)> ->_CWE200_
<com.vividsolutions.jts.simplify.TaggedLineString: com.vividsolutions.jts.geom.Coordinate[] getResultCoordinates()> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.snap.SnapIfNeededOverlayOp: com.vividsolutions.jts.geom.Geometry getResultGeometry(int)> ->_CWE200_
<org.geotools.data.shapefile.indexed.attribute.AttributeIndexWriter: org.geotools.data.shapefile.indexed.attribute.IndexRecord readRecord(java.io.DataInputStream)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.add.SvnAddCommand: org.apache.maven.scm.ScmResult executeAddCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,boolean)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_speed_profile.domain.mapimpl.AllOfValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom_speed_profile.domain.AllOfValidityDirection$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomReader: com.vividsolutions.jts.geom.MultiLineString read(com.tomtom.cpu.api.geometry.PartialLineString)> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.w3c.dom.Node getNextSibling()> ->_CWE200_
<com.tomtom.openlr.coremap.AbstractRoadElement: java.lang.String readProperty(com.teleatlas.global.common.ddct.SimpleDictionaryProperty,com.tomtom.cpu.coredb.features.Feature)> ->_CWE200_
<org.geotools.resources.Arguments: java.io.Reader getReader(java.io.InputStream)> ->_CWE200_
<com.vividsolutions.jts.noding.BasicSegmentString: java.lang.Object getData()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: org.apache.maven.scm.providers.svn.settings.Settings read(java.io.Reader,boolean)> ->_CWE200_
<org.dom4j.io.STAXEventReader: org.dom4j.Document readDocument(java.io.Reader)> ->_CWE200_
<com.vividsolutions.jts.linearref.LengthLocationMap: com.vividsolutions.jts.linearref.LinearLocation getLocationForward(double)> ->_CWE200_
<org.springframework.beans.factory.support.MethodOverride: java.lang.Object getSource()> ->_CWE200_
<org.apache.commons.vfs2.provider.local.LocalFileRandomAccessContent: java.io.InputStream getInputStream()> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterChangeUserAgentDialog: javax.swing.JButton getBtnOK()> ->_CWE200_
<com.vividsolutions.jts.geom.impl.CoordinateArraySequence: int getDimension()> ->_CWE200_
<com.vividsolutions.jts.index.chain.MonotoneChain: com.vividsolutions.jts.geom.Envelope getEnvelope()> ->_CWE200_
<org.codehaus.jackson.io.MergedStream: int read()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.OffsetCurveVertexList: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.dom4j.jaxb.JAXBReader: org.dom4j.Document read(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulationBuilder: com.vividsolutions.jts.geom.Geometry getTriangles(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<org.geotools.geometry.jts.WKTReader2: com.vividsolutions.jts.geom.Geometry readGeometryTaggedText()> ->_CWE200_
<org.geotools.referencing.operation.builder.GridToEnvelopeMapper: org.opengis.geometry.Envelope getEnvelope()> ->_CWE200_
<com.vividsolutions.jts.geom.util.LineStringExtracter: java.util.List getLines(com.vividsolutions.jts.geom.Geometry,java.util.List)> ->_CWE200_
<com.vividsolutions.jts.planargraph.Node: com.vividsolutions.jts.planargraph.DirectedEdgeStar getOutEdges()> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.LineString readLineString()> ->_CWE200_
<org.joda.time.Months: java.lang.Object readResolve()> ->_CWE200_
<com.vividsolutions.jts.awt.FontGlyphReader: com.vividsolutions.jts.geom.Geometry read(java.lang.String,java.awt.Font,double,com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<org.joda.time.field.DividedDateTimeField: int getDifference(long,long)> ->_CWE200_
<org.zaproxy.zap.view.SessionExcludeFromSpiderPanel: javax.swing.JScrollPane getJScrollPane()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.update.SvnUpdateConsumer: java.util.List getUpdatedFiles()> ->_CWE200_
<org.geotools.data.SimpleFeatureCollectionBridge: org.opengis.feature.simple.SimpleFeatureType getSchema()> ->_CWE200_
<org.apache.avro.reflect.DateAsLongEncoding: java.util.Date read(java.lang.Object,org.apache.avro.io.Decoder)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: long readLong()> ->_CWE200_
<org.springframework.validation.DefaultBindingErrorProcessor: java.lang.Object[] getArgumentsForBindError(java.lang.String,java.lang.String)> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object readString(java.lang.Object,org.apache.avro.io.Decoder)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Node: void print(java.io.PrintStream)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getReverseServicesBelongingToServiceClasses()> ->_CWE200_
<org.geotools.data.shapefile.indexed.IndexedShapefileDataStore: org.geotools.data.shapefile.indexed.IndexedShapefileAttributeReader getAttributesReader(boolean,boolean,org.geotools.data.Query,org.opengis.feature.simple.SimpleFeatureType)> ->_CWE200_
<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)> ->_CWE200_
<com.vividsolutions.jtsexample.geom.PrecisionModelExample: void difference(java.lang.String,java.lang.String,com.vividsolutions.jts.geom.PrecisionModel)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsClientWrapper: org.apache.commons.vfs2.FileSystemOptions getFileSystemOptions()> ->_CWE200_
<com.sittinglittleduck.DirBuster.Manager: void setupManager(java.lang.String,java.lang.String[],int,int,java.lang.String,java.lang.String,int,java.lang.String,com.sittinglittleduck.DirBuster.gui.StartGUI,int,boolean,boolean,boolean,boolean)> ->_CWE200_
<ch.csnc.extension.httpclient.AliasKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: java.util.List getContextResolvers(java.lang.Class,javax.ws.rs.core.MediaType)> ->_CWE200_
<org.joda.time.chrono.JulianChronology: java.lang.Object readResolve()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: long readMapStart()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpRandomAccessContent: long getFilePointer()> ->_CWE200_
<org.apache.thrift.protocol.TJSONProtocol: byte[] readJSONBase64()> ->_CWE200_
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: org.springframework.context.MessageSourceResolvable getResolvableField(java.lang.String,java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.blame.SvnBlameConsumer: java.util.List getLines()> ->_CWE200_
<org.zaproxy.zap.extension.spider.ExtensionSpider: org.zaproxy.zap.extension.spider.OptionsSpiderPanel getOptionsSpiderPanel()> ->_CWE200_
<com.mchange.util.impl.HexAsciiMD5PropertiesPasswordManager: boolean validate(java.lang.String,java.lang.String)> ->_CWE200_
<org.zkoss.idom.Document: org.w3c.dom.Element getDocumentElement()> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.Node: com.vividsolutions.jts.index.quadtree.Node getSubnode(int)> ->_CWE200_
<org.dom4j.io.STAXEventReader: org.dom4j.Document readDocument(java.io.InputStream)> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.geotools.data.simple.SimpleFeatureCollection getFeatures()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FTPClientWrapper: java.lang.String getReplyString()> ->_CWE200_
<org.zkoss.idom.impl.EmptyNamedNodeMap: org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.PlanarGraph: java.util.Collection getNodes()> ->_CWE200_
<org.opengis.parameter.InvalidParameterValueException: java.lang.String getParameterName()> ->_CWE200_
<com.mchange.v1.identicator.IdHashKey: com.mchange.v1.identicator.Identicator getIdenticator()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: boolean doIsReadable()> ->_CWE200_
<org.apache.commons.vfs2.provider.zip.ZipFileSystem: java.util.zip.ZipFile getZipFile()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.os.Os: java.lang.String getOsFamily()> ->_CWE200_
<org.apache.commons.compress.archivers.dump.DumpArchiveInputStream: int read(byte[],int,int)> ->_CWE200_
<zemberek.core.io.IOs: java.lang.String readAsString(java.io.BufferedReader)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: com.vividsolutions.jts.geom.Envelope getEnvelope()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.info.SvnInfoCommand: org.apache.maven.scm.provider.svn.command.info.SvnInfoScmResult executeInfoCommand(org.apache.maven.scm.provider.svn.repository.SvnScmProviderRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.CommandParameters,boolean,java.lang.String)> ->_CWE200_
<org.zkoss.zkmax.zul.impl.LiveGridDataLoader: int getOffset()> ->_CWE200_
<org.zkoss.idom.impl.AbstractTextual: java.lang.String getWholeText()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder: void setProxyAuthenticator(org.apache.commons.vfs2.FileSystemOptions,org.apache.commons.vfs2.UserAuthenticator)> ->_CWE200_
<org.zkoss.zkmax.bind.BeanValidator: java.lang.Object[] getValidationInfo(org.zkoss.bind.ValidationContext,java.lang.Object,java.lang.String)> ->_CWE200_
<org.geotools.filter.identity.GmlObjectIdImpl: java.lang.String getID()> ->_CWE200_
<org.apache.commons.httpclient.ContentLengthInputStream: int read(byte[],int,int)> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.geotools.data.QueryCapabilities getQueryCapabilities()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.zkoss.xml.Locator getLocator()> ->_CWE200_
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: org.springframework.asm.ClassReader getClassReader(java.lang.Class)> ->_CWE200_
<org.apache.commons.lang.enums.Enum: java.lang.Object readResolve()> ->_CWE200_
<org.zkoss.bind.impl.ValidationMessagesImpl: java.lang.String[] getMessages(org.zkoss.zk.ui.Component)> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.Geometry readGeometryTaggedText()> ->_CWE200_
<com.vividsolutions.jts.index.intervalrtree.IntervalRTreeNode: double getMax()> ->_CWE200_
<openlr.decoder.data.CandidateLine: openlr.map.Line getLine()> ->_CWE200_
<org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.util.List getFieldErrors(java.lang.String)> ->_CWE200_
<org.apache.avro.io.JsonDecoder: int readIndex()> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: int getLowX()> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: int getLowZ()> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: int getLowY()> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.log.ScmLogger getLogger()> ->_CWE200_
<org.dom4j.io.XPP3Reader: org.dom4j.Document read(java.lang.String)> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: org.zkoss.zk.ui.Component getFellow(java.lang.String,boolean)> ->_CWE200_
<com.vividsolutions.jts.index.intervalrtree.IntervalRTreeNode: double getMin()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: com.vividsolutions.jts.planargraph.Node getToNode()> ->_CWE200_
<org.zkoss.idom.Element: org.zkoss.idom.Attribute getAttributeItem(java.lang.String,java.lang.String,int)> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderAPI: java.lang.String getPrefix()> ->_CWE200_
<org.springframework.core.enums.StaticLabeledEnum: java.lang.Object readResolve()> ->_CWE200_
<com.vividsolutions.jts.noding.InteriorIntersectionFinder: com.vividsolutions.jts.geom.Coordinate[] getIntersectionSegments()> ->_CWE200_
<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanelTableModel: int getRowCount()> ->_CWE200_
<org.geotools.referencing.operation.transform.IdentityTransform: org.opengis.parameter.ParameterDescriptorGroup getParameterDescriptors()> ->_CWE200_
<com.vividsolutions.jts.algorithm.MinimumBoundingCircle: com.vividsolutions.jts.geom.Coordinate[] getExtremalPoints()> ->_CWE200_
<com.tomtom.openlr.coremap.AbstractRoadElement: java.lang.Object readValue(java.util.Collection)> ->_CWE200_
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()> ->_CWE200_
<com.vividsolutions.jts.operation.relate.EdgeEndBundle: com.vividsolutions.jts.geomgraph.Label getLabel()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: boolean readBoolean()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getClientExecutionInterceptorRegistry()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: com.vividsolutions.jts.triangulate.quadedge.Vertex getVertex(int)> ->_CWE200_
<org.geotools.referencing.AbstractIdentifiedObject: java.util.Map getProperties(org.opengis.referencing.IdentifiedObject,org.opengis.metadata.citation.Citation)> ->_CWE200_
<org.geotools.data.shapefile.indexed.IndexedShapefileDataStore: org.geotools.data.FeatureReader getFeatureReader(java.lang.String,org.geotools.data.Query)> ->_CWE200_
<org.zaproxy.zap.extension.auth.SessionAuthenticationPanel: org.zaproxy.zap.utils.ZapTextField getTxtLoginPostData()> ->_CWE200_
<openlr.location.utils.worker.LineRW: openlr.location.Location readLocationString(java.lang.String,java.lang.String[],openlr.map.MapDatabase)> ->_CWE200_
<openlr.location.GridLocation: openlr.map.GeoCoordinates getAccessPoint()> ->_CWE200_
<org.apache.commons.compress.archivers.tar.TarArchiveInputStream: int read(byte[],int,int)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: void print(java.io.PrintStream)> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.Object getFeature(java.lang.String,java.lang.String)> ->_CWE200_
<openlr.location.InvalidLocation: openlr.location.data.Orientation getOrientation()> ->_CWE200_
<openlr.location.InvalidLocation: openlr.location.data.AffectedLines getAffectedLines()> ->_CWE200_
<org.apache.maven.scm.provider.svn.AbstractSvnScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.CommandParameters)> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.spi.StringConverter getStringConverter(java.lang.Class)> ->_CWE200_
<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode readTree(java.io.InputStream)> ->_CWE200_
<org.geotools.geometry.text.WKTParser: org.opengis.geometry.primitive.Point readPointText(java.io.StreamTokenizer)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: org.apache.commons.vfs2.FilesCache getCache()> ->_CWE200_
<com.vividsolutions.jts.geom.DefaultCoordinateSequence: double getY(int)> ->_CWE200_
<com.vividsolutions.jts.geom.DefaultCoordinateSequence: double getX(int)> ->_CWE200_
<org.geotools.filter.FidFilterImpl: java.util.Set getIdentifiers()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: java.util.Collection getMetaProperties()> ->_CWE200_
<com.mchange.v2.c3p0.impl.C3P0PooledConnectionPoolManager: int getThreadPoolSize()> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: com.teleatlas.global.common.ddct.DictionaryModel getDefiningModel()> ->_CWE200_
<com.vividsolutions.jts.triangulate.DelaunayTriangulationBuilder: com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision getSubdivision()> ->_CWE200_
<org.tukaani.xz.BlockInputStream: int read(byte[],int,int)> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: org.w3c.dom.Node getLastChild()> ->_CWE200_
<com.vividsolutions.jts.noding.SegmentNode: void print(java.io.PrintStream)> ->_CWE200_
<org.springframework.core.io.AbstractFileResolvingResource: boolean isReadable()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.TypeReference)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getTelephoneInformation()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getCheckOutCommand()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeIntersection: void print(java.io.PrintStream)> ->_CWE200_
<org.apache.commons.io.input.NullReader: int read(char[])> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.SweepLineSegment: double getMinX()> ->_CWE200_
<org.geotools.metadata.iso.identification.RepresentativeFractionImpl: long getDenominator()> ->_CWE200_
<org.zkoss.idom.DocType: org.w3c.dom.NamedNodeMap getNotations()> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultFileContent: long getLastModifiedTime()> ->_CWE200_
<org.apache.maven.scm.provider.svn.repository.SvnScmProviderRepository: java.lang.String getTagBase()> ->_CWE200_
<org.zkoss.zul.Slider: int getMaxpos()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarUtils: long parseOctal(byte[],int,int)> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ContextEncodedProbBackoffLm readContextEncodedLmFromArpa(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.operation.linemerge.LineMergeDirectedEdge: com.vividsolutions.jts.operation.linemerge.LineMergeDirectedEdge getNext()> ->_CWE200_
<org.geotools.data.collection.CollectionDataStore: org.geotools.data.FeatureReader getFeatureReader(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileProvider: org.apache.commons.vfs2.FileSystemConfigBuilder getConfigBuilder()> ->_CWE200_
<com.vividsolutions.jts.triangulate.DelaunayTriangulationBuilder: com.vividsolutions.jts.geom.Geometry getTriangles(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.info.SvnInfoConsumer: java.util.List getInfoItems()> ->_CWE200_
<com.vividsolutions.jts.awt.PolygonShape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomWriter: com.tomtom.cpu.api.geometry.MultiLineString write(com.vividsolutions.jts.geom.MultiLineString)> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder: java.lang.String getUrlCharset(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: java.lang.Object readValue(java.util.Map$Entry)> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: java.lang.Object getProvider(java.lang.Class)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.SvnCommandLineUtils: int executeCleanUp(java.io.File,org.codehaus.plexus.util.cli.StreamConsumer,org.codehaus.plexus.util.cli.StreamConsumer,org.apache.maven.scm.log.ScmLogger)> ->_CWE200_
<org.zkoss.idom.input.SAXHandler: org.xml.sax.EntityResolver getEntityResolver()> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupExcludeFromSpiderMenu: java.lang.String getParentMenuName()> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupExcludeFromSpiderMenu: int getParentMenuIndex()> ->_CWE200_
<com.vividsolutions.jts.geom.Point: int getDimension()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,java.lang.Class)> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToScale(double,double)> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.Point readPointText()> ->_CWE200_
<com.vividsolutions.jts.index.bintree.Node: com.vividsolutions.jts.index.bintree.Node getSubnode(int)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.NodeMap: void print(java.io.PrintStream)> ->_CWE200_
<com.vividsolutions.jts.operation.relate.EdgeEndBundle: java.util.List getEdgeEnds()> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getServerMessageBodyWriterInterceptorRegistry()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.StreamingOutputProvider: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.zkoss.idom.Element: short getNodeType()> ->_CWE200_
<com.zones.selection.CuboidSelection: java.lang.Class getType()> ->_CWE200_
<org.apache.log4j.Level: java.lang.Object readResolve()> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.Polygonizer: java.util.Collection getDangles()> ->_CWE200_
<org.geotools.data.shapefile.shp.PolygonHandler: java.lang.Object read(java.nio.ByteBuffer,org.geotools.data.shapefile.shp.ShapeType,boolean)> ->_CWE200_
<org.tukaani.xz.SimpleInputStream: int read(byte[],int,int)> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetAttribute: org.zkoss.zk.ui.util.ConditionImpl getCondition()> ->_CWE200_
<org.apache.avro.io.ResolvingDecoder: double readDouble()> ->_CWE200_
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)> ->_CWE200_
<openlr.location.GridLocation: java.util.List getCornerPoints()> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: char readChar()> ->_CWE200_
<org.springframework.validation.AbstractErrors: java.lang.Class getFieldType(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.Point: com.vividsolutions.jts.geom.Geometry getBoundary()> ->_CWE200_
<openlr.decoder.location.DecodedGridLocation: openlr.location.data.AffectedLines getAffectedLines()> ->_CWE200_
<com.vividsolutions.jts.io.ByteOrderDataInStream: int readInt()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getFaxNumber()> ->_CWE200_
<org.apache.commons.codec.language.bm.BeiderMorseEncoder: org.apache.commons.codec.language.bm.NameType getNameType()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceWithMandatoryServiceBelongingToEntryPoint()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.SideOfLineImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.AllOfSideOfLine$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jts.planargraph.GraphComponent: java.lang.Object getContext()> ->_CWE200_
<com.vividsolutions.jts.noding.NodedSegmentString: java.util.List getNodedSubstrings(java.util.Collection)> ->_CWE200_
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.branch.SvnBranchCommand: org.apache.maven.scm.ScmResult executeBranchCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,org.apache.maven.scm.ScmBranchParameters)> ->_CWE200_
<org.opengis.parameter.InvalidParameterCardinalityException: java.lang.String getParameterName()> ->_CWE200_
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)> ->_CWE200_
<org.apache.xerces.impl.dv.xs.TypeValidator: int getFractionDigits(java.lang.Object)> ->_CWE200_
<org.zkoss.io.ResetableReader: int read(char[],int,int)> ->_CWE200_
<org.joda.time.chrono.CopticChronology: java.lang.Object readResolve()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getServerMessageBodyReaderInterceptorRegistry()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: void readFully(byte[],int,int)> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToReflection(double,double)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.SegmentIntersector: com.vividsolutions.jts.geom.Coordinate getProperIntersectionPoint()> ->_CWE200_
<org.apache.commons.vfs2.provider.local.LocalFileRandomAccessContent: java.lang.String readUTF()> ->_CWE200_
<org.zkoss.io.RepeatableReader: int read(char[],int,int)> ->_CWE200_
<org.springframework.beans.factory.support.LookupOverride: java.lang.String getBeanName()> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.SuffixForm getForm(zemberek.morphology.lexicon.Suffix,java.lang.String)> ->_CWE200_
<org.apache.commons.httpclient.ChunkedInputStream: int read()> ->_CWE200_
<org.apache.http.auth.UsernamePasswordCredentials: java.security.Principal getUserPrincipal()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.branch.SvnBranchCommand: org.apache.maven.scm.ScmResult executeBranchCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,java.lang.String)> ->_CWE200_
<org.springframework.validation.FieldError: java.lang.Object getRejectedValue()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.lang.Class getFieldType(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.noding.SimpleNoder: java.util.Collection getNodedSubstrings()> ->_CWE200_
<com.vividsolutions.jts.geom.Point: java.lang.String getGeometryType()> ->_CWE200_
<openlr.location.InvalidLocation: int getNumberOfRows()> ->_CWE200_
<com.vividsolutions.jts.planargraph.GraphComponent: com.vividsolutions.jts.planargraph.GraphComponent getComponentWithVisitedState(java.util.Iterator,boolean)> ->_CWE200_
<org.springframework.validation.MapBindingResult: java.lang.Object getActualFieldValue(java.lang.String)> ->_CWE200_
<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getUserName()> ->_CWE200_
<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)> ->_CWE200_
<org.apache.commons.httpclient.InvalidRedirectLocationException: java.lang.String getLocation()> ->_CWE200_
<com.vividsolutions.jts.algorithm.CentroidPoint: com.vividsolutions.jts.geom.Coordinate getCentroid()> ->_CWE200_
<org.joda.time.tz.ZoneInfoProvider: org.joda.time.DateTimeZone loadZoneData(java.lang.String)> ->_CWE200_
<org.zkoss.bind.impl.ValidationMessagesImpl: java.lang.String[] getMessages()> ->_CWE200_
<org.apache.commons.io.input.ReaderInputStream: int read(byte[])> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.list.SvnListCommand: org.apache.maven.scm.command.list.ListScmResult executeListCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,boolean,org.apache.maven.scm.ScmVersion)> ->_CWE200_
<org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream: int read(byte[],int,int)> ->_CWE200_
<com.github.kristofa.brave.SpanIdImpl: java.lang.Long getParentSpanId()> ->_CWE200_
<org.apache.xerces.impl.dv.xs.TypeValidator: int getTotalDigits(java.lang.Object)> ->_CWE200_
<com.mchange.v2.sql.filter.SynchronizedFilterCallableStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE200_
<org.dom4j.io.STAXEventReader: org.dom4j.Document readDocument(javax.xml.stream.XMLEventReader)> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: org.apache.maven.scm.providers.svn.settings.Settings read(java.io.Reader)> ->_CWE200_
<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: int cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int)> ->_CWE200_
<org.geotools.metadata.iso.IdentifierImpl: java.lang.String getVersion()> ->_CWE200_
<org.geotools.referencing.factory.epsg.SingleConnectionDataSource: int getLoginTimeout()> ->_CWE200_
<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader getXMLReader()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.BufferSubgraph: java.util.List getNodes()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.HolidayAreaGroundImpl: java.util.Collection getFaceOfLandUse()> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object readString(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.Decoder)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: org.apache.commons.vfs2.FileObject getRoot()> ->_CWE200_
<org.jboss.resteasy.plugins.server.servlet.ServletBootstrap: java.lang.String getParameter(java.lang.String)> ->_CWE200_
<org.dom4j.io.XPP3Reader: org.dom4j.Document read(java.net.URL)> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanel: javax.swing.JScrollPane getWorkPanel()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getResourceSpecificUsages()> ->_CWE200_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.GeoCodingAccuracyLevel getGeoCodingAccuracyLevel()> ->_CWE200_
<com.tomtom.openlr.coremap.ReaderProvider: com.tomtom.cpu.coredb.client.interfaces.ReadInterface getReader()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.LaneDividerTypeInfoImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.LaneDividerType getLaneDividerType()> ->_CWE200_
<com.vividsolutions.jts.algorithm.CentroidLine: com.vividsolutions.jts.geom.Coordinate getCentroid()> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: org.opengis.util.GenericName getName(org.opengis.metadata.citation.Citation,java.lang.CharSequence)> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.spi.InjectorFactory getInjectorFactory()> ->_CWE200_
<org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry readOldBinaryEntry(boolean)> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.TypeReference)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.EnvarBasedValueSource: java.lang.Object getValue(java.lang.String)> ->_CWE200_
<org.springframework.context.config.PropertyOverrideBeanDefinitionParser: java.lang.Class getBeanClass(org.w3c.dom.Element)> ->_CWE200_
<com.vividsolutions.jts.index.bintree.Key: double getPoint()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.GeometryGraph: com.vividsolutions.jts.algorithm.BoundaryNodeRule getBoundaryNodeRule()> ->_CWE200_
<com.google.common.io.CharStreams: java.lang.Object readLines(java.lang.Readable,com.google.common.io.LineProcessor)> ->_CWE200_
<org.apache.http.impl.io.ChunkedInputStream: int read()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.HasOptionalLaneValidityImpl: java.lang.String getLaneValidity()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<com.vividsolutions.jts.geom.MultiPolygon: int getBoundaryDimension()> ->_CWE200_
<com.vividsolutions.jts.index.strtree.AbstractSTRtree: com.vividsolutions.jts.index.strtree.AbstractNode getRoot()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.PlanarGraph: void debugPrint(java.lang.Object)> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.validate.OverlayResultValidator: com.vividsolutions.jts.geom.Coordinate getInvalidLocation()> ->_CWE200_
<org.dom4j.io.DOMReader: void readTree(org.w3c.dom.Node,org.dom4j.Branch)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: int getMode()> ->_CWE200_
<org.zkoss.idom.Comment: short getNodeType()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeList: java.util.List getEdges()> ->_CWE200_
<org.geotools.metadata.iso.identification.DataIdentificationImpl: org.opengis.util.InternationalString getSupplementalInformation()> ->_CWE200_
<org.zaproxy.zap.spider.URLCanonicalizer: java.lang.String getCleanedQuery(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEnd: com.vividsolutions.jts.geomgraph.Edge getEdge()> ->_CWE200_
<org.geotools.referencing.operation.builder.LocalizationGrid: java.awt.geom.AffineTransform getAffineTransform()> ->_CWE200_
<org.apache.commons.io.input.BoundedInputStream: int read(byte[],int,int)> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.JavaType)> ->_CWE200_
<org.zkoss.idom.impl.FacadeNodeList: int getLength()> ->_CWE200_
<org.apache.commons.vfs2.provider.LayeredFileNameParser: org.apache.commons.vfs2.FileName parseUri(org.apache.commons.vfs2.provider.VfsComponentContext,org.apache.commons.vfs2.FileName,java.lang.String)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.DefaultTextPlain: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.geotools.referencing.operation.projection.ObliqueMercator: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystem: com.jcraft.jsch.ChannelSftp getChannel()> ->_CWE200_
<org.zkoss.idom.input.SAXHandler: org.zkoss.idom.Document getDocument()> ->_CWE200_
<org.apache.http.auth.NTUserPrincipal: java.lang.String getName()> ->_CWE200_
<openlr.location.utils.worker.GeoCoordRW: openlr.location.Location readLocationString(java.lang.String,java.lang.String[],openlr.map.MapDatabase)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarBuffer: int getCurrentBlockNum()> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object readMap(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.ResolvingDecoder)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: double getLastModTimeAccuracy()> ->_CWE200_
<openlr.rawLocRef.RawGridLocRef: int getNumberOfRows()> ->_CWE200_
<org.apache.commons.vfs2.provider.DelegateFileObject: org.apache.commons.vfs2.FileObject getDelegateFile()> ->_CWE200_
<org.opengis.referencing.NoSuchIdentifierException: java.lang.String getIdentifierCode()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: java.util.List getPrimaryEdges(boolean)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getEmailAddress()> ->_CWE200_
<org.jboss.resteasy.plugins.server.servlet.FilterBootstrap: java.lang.String getParameter(java.lang.String)> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: java.lang.String getElementValue(java.lang.String,java.lang.String,int,boolean)> ->_CWE200_
<com.vividsolutions.jts.algorithm.MinimumDiameter: com.vividsolutions.jts.geom.LineString getSupportingSegment()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.ManeuverValidityImpl: java.util.Collection getValidityPeriod()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileObject: org.apache.jackrabbit.webdav.property.DavPropertySet getProperties(org.apache.commons.vfs2.provider.URLFileName)> ->_CWE200_
<org.zkoss.idom.input.SAXBuilder: org.zkoss.idom.Document build(org.xml.sax.InputSource)> ->_CWE200_
<com.vividsolutions.jts.triangulate.SplitSegment: com.vividsolutions.jts.geom.Coordinate getSplitPoint()> ->_CWE200_
<org.jboss.resteasy.util.ReadFromStream: byte[] readFromStream(int,java.io.InputStream)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.InterpolatorFilterReader: int read()> ->_CWE200_
<com.vividsolutions.jts.index.strtree.Interval: double getCentre()> ->_CWE200_
<org.apache.avro.file.LengthLimitedInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)> ->_CWE200_
<org.zkoss.idom.CData: short getNodeType()> ->_CWE200_
<org.apache.commons.vfs2.provider.ram.RamFileRandomAccessContent: java.lang.String readUTF()> ->_CWE200_
<com.vividsolutions.jtsexample.geom.BasicExample: void main(java.lang.String[])> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaValidator: org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.EdgeRing: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: com.vividsolutions.jts.geom.Coordinate getStart()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: java.lang.String getNameSpace()> ->_CWE200_
<javassist.tools.rmi.ObjectImporter: java.lang.Object lookupObject(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomReader: com.vividsolutions.jts.geom.Geometry read(com.tomtom.cpu.api.geometry.Geometry)> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: java.lang.Class getConfigClass()> ->_CWE200_
<org.geotools.data.store.ContentFeatureSource: org.geotools.data.FeatureReader getReader()> ->_CWE200_
<org.apache.xerces.impl.io.UTF8Reader: int read(char[],int,int)> ->_CWE200_
<org.geotools.referencing.operation.builder.LocalizationGrid: java.awt.geom.Point2D getLocalizationPoint(java.awt.Point)> ->_CWE200_
<org.zaproxy.zap.extension.spider.SpiderPanel: javax.swing.JLabel getFoundCountValueLabel()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: double getNextNumber()> ->_CWE200_
<org.apache.commons.httpclient.methods.PostMethod: org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity()> ->_CWE200_
<org.geotools.geometry.jts.WKTReader2: com.vividsolutions.jts.geom.MultiPolygon readMultiPolygonText()> ->_CWE200_
<org.zkoss.zkmax.init.TabletThemeProvider: java.util.Collection getThemeURIs(org.zkoss.zk.ui.Execution,java.util.List)> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: java.lang.String getNextCloserOrComma()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getOpeningPeriod()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: java.io.OutputStream getOutputStream(boolean)> ->_CWE200_
<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer _createDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.DoubleBits: double getDouble()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.DetailedPostalPointImpl: java.util.Collection getAssociationAddressAreaDetailedPostalPointasDetailedPostalPoint()> ->_CWE200_
<org.apache.xerces.impl.io.UCSReader: int read(char[],int,int)> ->_CWE200_
<org.apache.commons.compress.compressors.pack200.StreamBridge: java.io.InputStream getInput()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearLocation: com.vividsolutions.jts.geom.LineSegment getSegment(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.springframework.validation.BindException: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetAttribute: java.lang.String getName()> ->_CWE200_
<com.vividsolutions.jts.linearref.LengthIndexedLine: double getEndIndex()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.Integer getDataTimeout(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.joda.time.Years: java.lang.Object readResolve()> ->_CWE200_
<org.codehaus.jackson.io.MergedStream: int read(byte[])> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: java.lang.String getCompression(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.vividsolutions.jts.io.gml2.GMLReader: com.vividsolutions.jts.geom.Geometry read(java.lang.String,com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: com.vividsolutions.jts.geomgraph.EdgeRing getMinEdgeRing()> ->_CWE200_
<org.zkoss.zul.Grid: java.lang.String getInnerWidth()> ->_CWE200_
<org.parosproxy.paros.core.scanner.VariantAbstractRPCQuery: java.lang.String getReadableParametrizedQuery()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.PointPairDistance: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<com.vividsolutions.jts.index.sweepline.SweepLineEvent: int getDeleteEventIndex()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getStandardPOIInBuilt_upArea()> ->_CWE200_
<com.vividsolutions.jts.geom.GeometryCollection: int getNumGeometries()> ->_CWE200_
<org.zaproxy.zap.spider.parser.SpiderHtmlFormParser: java.lang.String getDefaultTextValue(net.htmlparser.jericho.FormField)> ->_CWE200_
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.MonotoneChainEdge: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: java.util.List getTriangleCoordinates(boolean)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.String[] getShortMonthNames(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: java.lang.String sanitizeTagName(java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getEmailAddress()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileObject: org.apache.jackrabbit.webdav.property.DavPropertySet getPropertyNames(org.apache.commons.vfs2.provider.URLFileName)> ->_CWE200_
<org.geotools.data.FIDSQuery: org.opengis.filter.Filter getFilter()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: org.apache.maven.scm.providers.svn.settings.Settings read(java.io.InputStream,boolean)> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getRepositoryRoot()> ->_CWE200_
<org.joda.time.field.DividedDateTimeField: int get(long)> ->_CWE200_
<org.jboss.resteasy.core.ThreadLocalResteasyProviderFactory: javax.ws.rs.ext.ExceptionMapper getExceptionMapper(java.lang.Class)> ->_CWE200_
<com.vividsolutions.jts.noding.InteriorIntersectionFinder: com.vividsolutions.jts.geom.Coordinate getInteriorIntersection()> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.opengis.feature.type.Name getName()> ->_CWE200_
<com.zones.ZoneManager: com.zones.model.ZoneBase loadFromPersistentData(com.zones.WorldManager,com.zones.persistence.Zone)> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.OffsetCurveBuilder: java.util.List getLineCurve(com.vividsolutions.jts.geom.Coordinate[],double)> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,java.util.Date)> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: int getContextDataLevelCount()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: java.lang.String getRepositoryURL(java.io.File)> ->_CWE200_
<org.apache.commons.vfs2.provider.local.GenericFileNameParser: org.apache.commons.vfs2.provider.local.GenericFileNameParser getInstance()> ->_CWE200_
<org.apache.commons.compress.archivers.dump.TapeInputStream: boolean readBlock(boolean)> ->_CWE200_
<com.mchange.v2.sql.filter.FilterPreparedStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE200_
<org.zkoss.bind.impl.ValidationMessagesImpl: java.lang.String[] getKeyMessages(org.zkoss.zk.ui.Component,java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.mkdir.SvnMkdirCommand: org.apache.maven.scm.command.mkdir.MkdirScmResult executeMkdirCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,boolean)> ->_CWE200_
<org.zaproxy.zap.spider.URLResolver: org.zaproxy.zap.spider.URLResolver$Url parseUrl(java.lang.String)> ->_CWE200_
<com.vividsolutions.jtsexample.io.gml2.KMLHandler: java.util.List getGeometries()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.w3c.dom.Node getPreviousSibling()> ->_CWE200_
<org.geotools.metadata.iso.identification.DataIdentificationImpl: java.util.Collection getTopicCategories()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.attribute.ContentInformation getContentInformation()> ->_CWE200_
<org.zkoss.idom.Document: org.w3c.dom.DOMConfiguration getDomConfig()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.String getFtpsType(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.vividsolutions.jts.awt.ShapeReader: com.vividsolutions.jts.geom.Geometry read(java.awt.geom.PathIterator)> ->_CWE200_
<org.zkoss.idom.Namespace: java.lang.String getPrefix()> ->_CWE200_
<com.vividsolutions.jts.index.bintree.Key: com.vividsolutions.jts.index.bintree.Interval getInterval()> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.ext.Paginal getPaginal()> ->_CWE200_
<org.geotools.data.ows.AbstractRequest: java.net.URL getFinalURL()> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.Paging getPagingChild()> ->_CWE200_
<org.zkoss.zul.Grid: java.lang.String getZclass()> ->_CWE200_
<com.vividsolutions.jts.geom.Point: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.apache.http.impl.conn.LoggingSessionInputBuffer: java.lang.String readLine()> ->_CWE200_
<org.joda.time.tz.DefaultNameProvider: java.lang.String getName(java.util.Locale,java.lang.String,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.impl.PackedCoordinateSequenceFactory: int getType()> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.Key: int getLevel()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.diff.SvnDiffConsumer: java.util.List getChangedFiles()> ->_CWE200_
<org.geotools.metadata.iso.identification.UsageImpl: java.util.Collection getUserContactInfo()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: char getCharacterValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getStandardPOIInNamedArea()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceWithMandatoryServiceBelongingToEntryPoint()> ->_CWE200_
<org.springframework.validation.DataBinder: java.lang.String[] getRequiredFields()> ->_CWE200_
<org.geotools.data.FIDSQuery: org.opengis.referencing.crs.CoordinateReferenceSystem getCoordinateSystem()> ->_CWE200_
<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)> ->_CWE200_
<org.zkoss.io.RepeatableURLReader: int read(char[],int,int)> ->_CWE200_
<com.vividsolutions.jts.algorithm.LineIntersector: int getIndexAlongSegment(int,int)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getCheckInCommand()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.HasMandatoryValidityPeriodImpl: java.util.Collection getValidityPeriod()> ->_CWE200_
<org.apache.commons.httpclient.HttpMethodBase: java.io.InputStream readResponseBody(org.apache.commons.httpclient.HttpConnection)> ->_CWE200_
<org.parosproxy.paros.extension.filter.FilterChangeUserAgentDialog: javax.swing.JButton getBtnCancel()> ->_CWE200_
<com.vividsolutions.jts.JTSVersion: void main(java.lang.String[])> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: double getEndX()> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: double getEndZ()> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: double getEndY()> ->_CWE200_
<zemberek.core.io.IOs: zemberek.core.io.IterableLineReader getIterableReader(java.io.InputStream)> ->_CWE200_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: java.util.Map getValidationPropertyMap()> ->_CWE200_
<com.vividsolutions.jts.awt.GeometryCollectionShape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: int readUnsignedByte()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.GeometryGraph: com.vividsolutions.jts.geom.Geometry getGeometry()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_ada.attribute.mapimpl.HasStrictValidityDirectionImpl: com.tomtom.cpu.api.semantic.ttom.ttom_ada.domain.StrictValidityDirection getValidityDirection()> ->_CWE200_
<org.geotools.data.DataUtilities: boolean checkFileReadable(java.io.File,java.util.logging.Logger)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeIntersection: int getSegmentIndex()> ->_CWE200_
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()> ->_CWE200_
<org.apache.commons.vfs2.provider.GenericFileName: int getPort()> ->_CWE200_
<org.apache.http.impl.client.DefaultRedirectStrategy: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileObject: java.lang.String getRelPath()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: org.apache.commons.vfs2.FileName getRoot()> ->_CWE200_
<org.springframework.validation.DataBinder: org.springframework.validation.BindingResult getBindingResult()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.reflection.MethodMap: java.util.LinkedList getApplicables(java.util.List,java.lang.Class[])> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: int getProxyPort(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixedValueSourceWrapper: java.util.List getFeedback()> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.geotools.data.ResourceInfo getInfo()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileNameParser: org.apache.commons.vfs2.provider.FileNameParser getInstance()> ->_CWE200_
<org.zkoss.idom.Element: int getAttributeIndex(int,java.lang.String,java.lang.String,int)> ->_CWE200_
<org.apache.commons.httpclient.HttpParser: byte[] readRawLine(java.io.InputStream)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.add.SvnAddConsumer: java.util.List getAddedFiles()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.MultiPolygon readMultiPolygonText()> ->_CWE200_
<com.mchange.v2.c3p0.impl.NewProxyPreparedStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.EdgeRing: com.vividsolutions.jts.geom.Polygon getPolygon()> ->_CWE200_
<javassist.tools.web.Webserver: java.lang.String readLine(java.io.InputStream)> ->_CWE200_
<com.google.common.primitives.AndroidInteger: java.lang.Integer tryParse(java.lang.String,int)> ->_CWE200_
<org.springframework.validation.DataBinder: java.lang.Object getTarget()> ->_CWE200_
<com.tomtom.cpu.coredb.client.impl.ByIdReadCalls: com.tomtom.cpu.api.features.Feature getFeatureById(java.lang.String,long,java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getDiffCommand()> ->_CWE200_
<org.apache.http.impl.io.AbstractSessionInputBuffer: java.lang.String readLine()> ->_CWE200_
<org.joda.time.tz.UTCProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceInNamedArea()> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: boolean readBoolean()> ->_CWE200_
<org.geotools.referencing.operation.transform.NADCONTransform: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: java.lang.Object getRejectedValue(java.lang.String,javax.validation.ConstraintViolation,org.springframework.validation.BindingResult)> ->_CWE200_
<org.apache.maven.scm.provider.ScmProviderRepository: org.apache.maven.scm.provider.ScmProviderRepository getParent()> ->_CWE200_
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.String getEntityName(java.lang.Class)> ->_CWE200_
<org.geotools.data.SimpleFeatureStoreBridge: org.geotools.data.Transaction getTransaction()> ->_CWE200_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: javax.validation.Validator getValidator()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.MapBasedValueSource: java.lang.Object getValue(java.lang.String)> ->_CWE200_
<org.parosproxy.paros.network.HttpInputStream: org.zaproxy.zap.network.HttpRequestBody readRequestBody(org.parosproxy.paros.network.HttpHeader)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileName: java.lang.String getExtension()> ->_CWE200_
<com.vividsolutions.jts.algorithm.InteriorPointPoint: com.vividsolutions.jts.geom.Coordinate getInteriorPoint()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getResourceConstraints()> ->_CWE200_
<openlr.location.GridLocation: int getPositiveOffset()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.ForeignIdentifiableDecoratorHelper: java.util.Collection getMetaProperties(com.teleatlas.global.common.ddct.impl.ForeignIdentifiableDecorator,java.util.Collection)> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: java.lang.Object getProviderInstance(java.lang.Class)> ->_CWE200_
<com.vividsolutions.jts.index.strtree.ItemBoundable: java.lang.Object getItem()> ->_CWE200_
<org.zkoss.zk.ui.metainfo.impl.WidgetDefinitionImpl: java.lang.String getMoldURI(java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.NoIdlingSignImpl: java.lang.Integer getid()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: org.apache.commons.vfs2.FileObject getParentLayer()> ->_CWE200_
<com.vividsolutions.jts.operation.polygonize.Polygonizer: java.util.Collection getCutEdges()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder$ProxyType getProxyType(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.commons.httpclient.params.DefaultHttpParams: java.lang.Object getParameter(java.lang.String)> ->_CWE200_
<org.apache.xerces.impl.xs.identity.Field: org.apache.xerces.impl.xpath.XPath getXPath()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixedObjectValueSource: java.util.List getFeedback()> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: float readFloat()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.AccidentHazardSignImpl: java.lang.Integer getDistanceToTrafficCondition()> ->_CWE200_
<org.springframework.validation.BindException: int getErrorCount()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.lang.String getAnchorPointStableID()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: java.lang.String getTrimmedValue(java.lang.String)> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.ListModel getListModel()> ->_CWE200_
<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer _createAndCache2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)> ->_CWE200_
<org.apache.commons.lang.enum.Enum: java.lang.Object readResolve()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.PrefixedObjectValueSource: java.lang.String getLastExpression()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.BufferDistanceValidator: com.vividsolutions.jts.geom.Coordinate getErrorLocation()> ->_CWE200_
<org.joda.time.Days: java.lang.Object readResolve()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.ServiceGroupTypes getServiceGroup()> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: double getLength()> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: com.vividsolutions.jts.geom.Point getInteriorPoint()> ->_CWE200_
<com.vividsolutions.jts.util.Debug: void instancePrint(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileProvider: org.apache.commons.vfs2.FileSystemConfigBuilder getConfigBuilder()> ->_CWE200_
<org.springframework.validation.DataBinder: java.lang.String[] getDisallowedFields()> ->_CWE200_
<org.zaproxy.zap.extension.stdmenus.PopupMenuSpiderSite: org.zaproxy.zap.extension.spider.ExtensionSpider getExtensionSpider()> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: long readLong()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.bitmask.ServicesAndFacilities getServicesAndFacilities()> ->_CWE200_
<org.dom4j.io.XPP3Reader: org.dom4j.Document read(char[])> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.JavaType)> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdge: void print(java.io.PrintStream)> ->_CWE200_
<org.geotools.data.shapefile.ShapefileDataStore: java.util.List readAttributes()> ->_CWE200_
<org.geotools.styling.UserLayerImpl: org.geotools.data.DataStore getInlineFeatureDatastore()> ->_CWE200_
<org.geotools.metadata.iso.identification.DataIdentificationImpl: java.util.Collection getSpatialRepresentationTypes()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeTriangle: com.vividsolutions.jts.geom.Geometry getGeometry(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileSystem: java.lang.Object getAttribute(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.algorithm.MinimumBoundingCircle: double getRadius()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearLocation: com.vividsolutions.jts.geom.Coordinate getCoordinate(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: java.io.File getKnownHosts(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeIntersection: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.joda.time.field.DividedDateTimeField: int getRemainder(int)> ->_CWE200_
<org.zkoss.zul.Grid: void readObject(java.io.ObjectInputStream)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.SvnExeScmProvider: org.apache.maven.scm.provider.svn.command.SvnCommand getBranchCommand()> ->_CWE200_
<org.springframework.validation.BindException: int getFieldErrorCount()> ->_CWE200_
<org.joda.time.field.DividedDateTimeField: long set(long,int)> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.XmlDictionaryModelStoreHelper: com.teleatlas.global.common.ddct.impl.MetaPropertyDescriptorContainer readMetaPropDescriptorContainer(java.lang.String,com.teleatlas.global.common.ddct.DictionaryModelDescriptor,javax.xml.bind.Unmarshaller$Listener)> ->_CWE200_
<com.vividsolutions.jts.geom.util.PointExtracter: java.util.List getPoints(com.vividsolutions.jts.geom.Geometry,java.util.List)> ->_CWE200_
<org.reflections.adapters.JavassistAdapter: java.util.List getParameterNames(java.lang.Object)> ->_CWE200_
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])> ->_CWE200_
<org.apache.avro.io.DirectBinaryDecoder: java.nio.ByteBuffer readBytes(java.nio.ByteBuffer)> ->_CWE200_
<org.zkoss.idom.impl.EmptyNamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: java.util.List getVoronoiCellPolygons(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<org.zkoss.idom.input.SAXBuilder: javax.xml.parsers.SAXParser getParser()> ->_CWE200_
<org.apache.avro.io.ResolvingDecoder: float readFloat()> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: short getType()> ->_CWE200_
<org.zaproxy.zap.spider.SpiderController: java.util.List getParsers(org.parosproxy.paros.network.HttpMessage)> ->_CWE200_
<com.vividsolutions.jts.index.strtree.SIRtree: java.util.Comparator getComparator()> ->_CWE200_
<openlr.location.InvalidLocation: java.util.List getCornerPoints()> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomReader: com.vividsolutions.jts.geom.MultiLineString read(com.tomtom.cpu.api.geometry.MultiLineString)> ->_CWE200_
<org.geotools.data.FIDFeatureReader: org.opengis.feature.simple.SimpleFeatureType getFeatureType()> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.Vertex: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.zkoss.idom.Attribute: org.zkoss.idom.Item getOwner()> ->_CWE200_
<org.zkoss.idom.impl.AbstractTextual: java.lang.String getText()> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.Polygon readPolygonText()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getFaxNumber()> ->_CWE200_
<openlr.location.data.SideOfRoad: openlr.location.data.SideOfRoad getDefault()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.TrustEveryoneUserInfo: java.lang.String getPassphrase()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractVfsComponent: org.apache.commons.vfs2.provider.VfsComponentContext getContext()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: com.teleatlas.global.common.ddct.DictionaryModel getDefiningModel()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdgeStar: int getIndex(int)> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: java.util.Collection getMetaProperties()> ->_CWE200_
<org.dom4j.io.SAXReader: org.dom4j.Document read(java.io.InputStream)> ->_CWE200_
<org.springframework.validation.AbstractPropertyBindingResult: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.Settings: java.lang.String getConfigDirectory()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: com.teleatlas.global.common.ddct.DictionaryModel getModel()> ->_CWE200_
<org.apache.xerces.impl.xs.XMLSchemaValidator: java.lang.String[] getRecognizedFeatures()> ->_CWE200_
<org.geotools.metadata.iso.identification.IdentificationImpl: java.util.Collection getResourceMaintenance()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.tag.SvnTagCommand: org.apache.maven.scm.ScmResult executeTagCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,java.lang.String)> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: java.lang.Class getTypeClass()> ->_CWE200_
<org.zkoss.bind.impl.ValidationContextImpl: org.zkoss.bind.BindContext getBindContext()> ->_CWE200_
<org.codehaus.jackson.io.UTF32Reader: int read()> ->_CWE200_
<com.vividsolutions.jts.index.chain.MonotoneChain: java.lang.Object getContext()> ->_CWE200_
<org.zkoss.idom.Document: short getNodeType()> ->_CWE200_
<com.vividsolutions.jts.geom.MultiPoint: int getBoundaryDimension()> ->_CWE200_
<javassist.compiler.Lex: int readEscapeChar()> ->_CWE200_
<org.zkoss.idom.Document: java.lang.String getName()> ->_CWE200_
<com.mchange.v2.sql.filter.SynchronizedFilterPreparedStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE200_
<com.vividsolutions.jts.geom.Point: int getNumPoints()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeRing: int getMaxNodeDegree()> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: org.geotools.geometry.jts.ReferencedEnvelope getBounds()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: java.util.Date getModTime()> ->_CWE200_
<com.teleatlas.global.common.util.dbunit.AbstractCreateSchemaBuilder: java.lang.String readFile(java.lang.String)> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetListener: org.zkoss.zk.xel.EvaluatorRef getEvaluatorRef()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEndStar: int getDegree()> ->_CWE200_
<org.apache.xerces.dom.PSVIDocumentImpl: void readObject(java.io.ObjectInputStream)> ->_CWE200_
<org.geotools.referencing.operation.DefaultOperation: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToTranslation(double,double)> ->_CWE200_
<com.vividsolutions.jts.io.WKBReader: com.vividsolutions.jts.geom.MultiLineString readMultiLineString()> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: org.zkoss.zk.ui.Component newUnloadedCell(org.zkoss.zul.RowRenderer,org.zkoss.zul.Row)> ->_CWE200_
<org.zkoss.idom.impl.EmptyNamedNodeMap: int getLength()> ->_CWE200_
<com.mchange.v2.c3p0.management.PooledDataSourceManager: int getThreadPoolNumTasksPending()> ->_CWE200_
<com.tomtom.cpu.coredb.readapi.BidirectionalDelta: com.tomtom.cpu.coredb.mapdata.MapData getReversedDelta()> ->_CWE200_
<org.zkoss.idom.ProcessingInstruction: java.lang.String getTarget()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdgeStar: com.vividsolutions.jts.geomgraph.DirectedEdge getRightmostEdge()> ->_CWE200_
<org.dom4j.jaxb.JAXBReader: org.dom4j.Document read(java.net.URL)> ->_CWE200_
<org.zkoss.zkplus.embed.Bridge: java.lang.String getResult()> ->_CWE200_
<org.apache.xerces.impl.validation.ValidationState: java.lang.String getURI(java.lang.String)> ->_CWE200_
<org.zkoss.spring.web.context.request.IdSpaceScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)> ->_CWE200_
<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)> ->_CWE200_
<org.geotools.factory.FactoryIteratorProviders: org.geotools.factory.FactoryIteratorProvider[] getIteratorProviders()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getNamespaceURI()> ->_CWE200_
<org.joda.time.tz.ZoneInfoProvider: org.joda.time.DateTimeZone getZone(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.BufferResultValidator: void report(java.lang.String)> ->_CWE200_
<org.apache.commons.vfs2.provider.DefaultURLConnection: java.io.InputStream getInputStream()> ->_CWE200_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: javax.validation.MessageInterpolator getMessageInterpolator()> ->_CWE200_
<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer _createUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: double getArea()> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: java.lang.String getVersion()> ->_CWE200_
<org.zkoss.idom.Attribute: java.lang.String getPrefix()> ->_CWE200_
<org.apache.commons.vfs2.provider.FileContentThreadData: org.apache.commons.vfs2.provider.DefaultFileContent$FileContentOutputStream getOutstr()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.FileType getType()> ->_CWE200_
<org.opengis.parameter.InvalidParameterValueException: java.lang.Object getValue()> ->_CWE200_
<org.apache.commons.vfs2.provider.local.LocalFile: java.io.File getLocalFile()> ->_CWE200_
<com.vividsolutions.jts.linearref.LocationIndexedLine: com.vividsolutions.jts.linearref.LinearLocation getStartIndex()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getTelephoneInformation()> ->_CWE200_
<org.apache.commons.vfs2.provider.jar.JarFileSystem: java.lang.Object getAttribute(java.util.jar.Attributes$Name)> ->_CWE200_
<edu.berkeley.nlp.lm.array.CustomWidthArray: long getLong(long,long)> ->_CWE200_
<javassist.compiler.Lex: int readDouble(java.lang.StringBuffer,int,javassist.compiler.Token)> ->_CWE200_
<org.zkoss.zkplus.embed.Bridge: org.zkoss.zk.ui.Desktop getDesktop(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdgeStar: java.util.List getEdges()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getPrefix()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: java.util.Collection getMetaPropertyValues(java.lang.String)> ->_CWE200_
<zemberek.morphology.lexicon.graph.DynamicSuffixProvider: zemberek.morphology.lexicon.SuffixFormTemplate getTemplate(java.lang.String,zemberek.morphology.lexicon.Suffix)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: int getGroupID()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.AbstractFileCheckingConsumer: java.util.List getFiles()> ->_CWE200_
<org.apache.commons.vfs2.impl.ProviderConfiguration: java.util.List getDependencies()> ->_CWE200_
<org.zkoss.idom.util.IDOMs: void dumpTree(java.io.PrintWriter,org.zkoss.idom.Item,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.planargraph.DirectedEdgeStar: int getDegree()> ->_CWE200_
<org.apache.xerces.dom.DOMConfigurationImpl: java.lang.Object getParameter(java.lang.String)> ->_CWE200_
<org.geotools.referencing.operation.builder.LocalizationGrid: org.opengis.referencing.operation.MathTransform2D getPolynomialTransform(int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceInNamedArea()> ->_CWE200_
<com.vividsolutions.jts.noding.BasicSegmentString: int getSegmentOctant(int)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int)> ->_CWE200_
<org.springframework.core.type.classreading.CachingMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.FileProvider: java.io.File readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)> ->_CWE200_
<com.vividsolutions.jts.geom.MultiPoint: java.lang.String getGeometryType()> ->_CWE200_
<com.vividsolutions.jts.geom.impl.CoordinateArraySequence: com.vividsolutions.jts.geom.Coordinate getCoordinateCopy(int)> ->_CWE200_
<org.zkoss.idom.util.IDOMs: org.zkoss.idom.Element getRequiredElement(org.zkoss.idom.Element,java.lang.String)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.IIOImageProviderHelper: javax.imageio.ImageWriter getImageWriterByMediaType(javax.ws.rs.core.MediaType)> ->_CWE200_
<org.jboss.resteasy.mock.MockHttpRequest: org.jboss.resteasy.mock.MockHttpRequest get(java.lang.String)> ->_CWE200_
<org.apache.commons.lang.text.StrTokenizer: int readNextToken(char[],int,int,org.apache.commons.lang.text.StrBuilder,java.util.List)> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: java.lang.Boolean getFeatureDefault(java.lang.String)> ->_CWE200_
<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.core.interception.InterceptorRegistry getClientMessageBodyWriterInterceptorRegistry()> ->_CWE200_
<org.apache.avro.io.BinaryDecoder: org.apache.avro.util.Utf8 readString(org.apache.avro.util.Utf8)> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet)> ->_CWE200_
<openlr.location.GridLocation: openlr.location.data.Orientation getOrientation()> ->_CWE200_
<openlr.decoder.data.CandidateLine: int getProjectionAlongLine()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getAttributeValue(java.lang.String)> ->_CWE200_
<org.apache.xerces.util.XMLResourceIdentifierImpl: java.lang.String getExpandedSystemId()> ->_CWE200_
<com.vividsolutions.jts.algorithm.MinimumDiameter: com.vividsolutions.jts.geom.LineString getDiameter()> ->_CWE200_
<org.geotools.data.FIDSQuery: org.opengis.filter.sort.SortBy[] getSortBy()> ->_CWE200_
<javassist.compiler.Lex: int readCharConst(javassist.compiler.Token)> ->_CWE200_
<org.springframework.validation.AbstractPropertyBindingResult: java.lang.Class getFieldType(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.io.ByteOrderDataInStream: double readDouble()> ->_CWE200_
<org.geotools.referencing.cs.DefaultEllipsoidalCS: double getLatitude(double[])> ->_CWE200_
<com.vividsolutions.jts.geom.Geometry: java.lang.Object getUserData()> ->_CWE200_
<org.geotools.referencing.operation.builder.GridToEnvelopeMapper: org.opengis.coverage.grid.GridEnvelope getGridRange()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: java.lang.Boolean getUserDirIsRoot(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeEnd: com.vividsolutions.jts.geomgraph.Label getLabel()> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: org.zkoss.zk.ui.util.Template getTemplate(org.zkoss.zul.Grid,org.zkoss.zul.Rows,java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.changelog.SvnChangeLogCommand: org.apache.maven.scm.command.changelog.ChangeLogScmResult executeChangeLogCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.util.Date,java.util.Date,org.apache.maven.scm.ScmBranch,java.lang.String,org.apache.maven.scm.ScmVersion,org.apache.maven.scm.ScmVersion)> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.zkoss.idom.Document getDocument()> ->_CWE200_
<org.geotools.geometry.text.WKTParser: org.opengis.geometry.aggregate.MultiPrimitive readMultiPolygonText(java.io.StreamTokenizer)> ->_CWE200_
<com.nesscomputing.types.PlatformId: java.lang.String getValue()> ->_CWE200_
<org.apache.avro.io.JsonDecoder: java.lang.String readString()> ->_CWE200_
<org.geotools.referencing.operation.builder.GridToEnvelopeMapper: boolean[] getReverseAxis()> ->_CWE200_
<com.vividsolutions.jts.index.chain.MonotoneChainBuilder: java.util.List getChains(com.vividsolutions.jts.geom.Coordinate[])> ->_CWE200_
<com.mchange.v2.sql.filter.FilterCallableStatement: java.sql.ParameterMetaData getParameterMetaData()> ->_CWE200_
<zemberek.morphology.apps.UnidentifiedTokenParser: java.util.List parse(java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.repository.SvnScmProviderRepository: java.lang.String getRelativePath(org.apache.maven.scm.provider.ScmProviderRepository)> ->_CWE200_
<org.zkoss.io.RepeatableFileInputStream: int read()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setTransformation(double,double,double,double,double,double)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: com.vividsolutions.jts.geom.Geometry getVoronoiDiagram(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: org.opengis.util.GenericName getScope()> ->_CWE200_
<com.vividsolutions.jts.simplify.TaggedLineString: int getMinimumSize()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: java.io.InputStream getInputStream()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getText()> ->_CWE200_
<com.vividsolutions.jts.geom.TopologyException: com.vividsolutions.jts.geom.Coordinate getCoordinate()> ->_CWE200_
<org.apache.commons.io.input.SwappedDataInputStream: int readUnsignedByte()> ->_CWE200_
<com.thoughtworks.paranamer.DefaultParanamer: java.lang.String getParameterListResource(java.lang.Class)> ->_CWE200_
<org.zkoss.zul.Grid: int getPreloadSize()> ->_CWE200_
<com.mchange.v1.identicator.IdList: java.lang.Object get(int)> ->_CWE200_
<com.vividsolutions.jts.geom.util.LinearComponentExtracter: java.util.List getLines(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<com.vividsolutions.jtsexample.geom.ExtendedCoordinateSequence: com.vividsolutions.jts.geom.Coordinate getCoordinateCopy(int)> ->_CWE200_
<com.vividsolutions.jts.io.ByteOrderValues: int getInt(byte[],int)> ->_CWE200_
<com.vividsolutions.jts.noding.MCIndexSegmentSetMutualIntersector: java.util.List getMonotoneChains()> ->_CWE200_
<org.zkoss.idom.Attribute: java.lang.String getNamespaceURI()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileSystemConfigBuilder: org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder getInstance()> ->_CWE200_
<org.zkoss.zul.Grid: org.zkoss.zul.Frozen getFrozen()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder getInstance()> ->_CWE200_
<org.joda.time.field.DividedDateTimeField: org.joda.time.DurationField getDurationField()> ->_CWE200_
<com.google.common.io.LittleEndianDataInputStream: byte readByte()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: com.vividsolutions.jts.geomgraph.Depth getDepth()> ->_CWE200_
<org.geotools.data.FIDSQuery: java.lang.Integer getStartIndex()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.ByteArrayProvider: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.zaproxy.clientapi.gen.Spider: org.zaproxy.clientapi.core.ApiResponse setOptionRequestWaitTime(int)> ->_CWE200_
<org.geotools.data.SimpleFeatureSourceBridge: int getCount(org.geotools.data.Query)> ->_CWE200_
<org.apache.avro.io.JsonDecoder: byte[] readByteArray()> ->_CWE200_
<org.apache.commons.compress.archivers.tar.TarBuffer: byte[] readRecord()> ->_CWE200_
<com.google.common.io.CountingInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.maven.scm.provider.AbstractScmProvider: org.apache.maven.scm.command.update.UpdateScmResult update(org.apache.maven.scm.repository.ScmRepository,org.apache.maven.scm.ScmFileSet,org.apache.maven.scm.ScmVersion,java.lang.String)> ->_CWE200_
<org.apache.maven.scm.provider.svn.util.SvnUtil: org.apache.maven.scm.providers.svn.settings.Settings getSettings()> ->_CWE200_
<org.zkoss.idom.impl.AbstractTextual: int getLength()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.ResidentialAccommodationServiceSubcategoryType getServiceSubcategory()> ->_CWE200_
<org.jboss.resteasy.client.ClientRequest: org.jboss.resteasy.client.ClientResponse get(org.jboss.resteasy.util.GenericType)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: java.lang.String getName()> ->_CWE200_
<org.apache.commons.compress.archivers.dump.TapeInputStream: boolean readFully(byte[],int,int)> ->_CWE200_
<org.zkoss.bind.impl.ValidationContextImpl: org.zkoss.bind.Property[] getProperties(java.lang.String)> ->_CWE200_
<com.mchange.v1.identicator.IdMap: java.lang.Object get(java.lang.Object)> ->_CWE200_
<org.apache.commons.httpclient.methods.PostMethod: org.apache.commons.httpclient.NameValuePair getParameter(java.lang.String)> ->_CWE200_
<org.zkoss.idom.impl.EmptyNamedNodeMap: org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)> ->_CWE200_
<org.zaproxy.zap.extension.auth.ExtensionAuth: org.parosproxy.paros.network.HttpMessage getLoginRequest(int)> ->_CWE200_
<org.geotools.data.shapefile.indexed.IndexedFidReader: int getRemoves()> ->_CWE200_
<com.vividsolutions.jts.operation.GeometryGraphOperation: com.vividsolutions.jts.geom.Geometry getArgGeometry(int)> ->_CWE200_
<org.jboss.resteasy.util.HttpServletRequestDelegate: java.util.Enumeration getParameterNames()> ->_CWE200_
<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: java.util.Map getContextDataMap(boolean)> ->_CWE200_
<com.vividsolutions.jts.index.quadtree.Key: com.vividsolutions.jts.geom.Coordinate getCentre()> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getNodeValue()> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetListener: java.lang.String getName()> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: void readFully(byte[])> ->_CWE200_
<org.jboss.resteasy.util.InputStreamToByteArray: int read(byte[],int,int)> ->_CWE200_
<com.zones.model.forms.ZoneCuboid: double getDistanceToZone(int,int)> ->_CWE200_
<javassist.bytecode.AttributeInfo: javassist.bytecode.AttributeInfo read(javassist.bytecode.ConstPool,java.io.DataInputStream)> ->_CWE200_
<org.geotools.referencing.factory.IdentifiedObjectSet: org.opengis.referencing.IdentifiedObject get(java.lang.String)> ->_CWE200_
<org.geotools.geometry.jts.WKTReader2: com.vividsolutions.jts.geom.MultiLineString readMultiLineStringText()> ->_CWE200_
<com.vividsolutions.jts.noding.SegmentNodeList: com.vividsolutions.jts.noding.NodedSegmentString getEdge()> ->_CWE200_
<com.vividsolutions.jts.geom.MultiLineString: int getBoundaryDimension()> ->_CWE200_
<org.apache.commons.io.input.TeeInputStream: int read()> ->_CWE200_
<org.springframework.validation.BindingResultUtils: org.springframework.validation.BindingResult getBindingResult(java.util.Map,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geom.Polygon: com.vividsolutions.jts.geom.LineString getInteriorRingN(int)> ->_CWE200_
<com.vividsolutions.jts.geom.Envelope: double getMinY()> ->_CWE200_
<com.vividsolutions.jts.geom.Envelope: double getMinX()> ->_CWE200_
<com.vividsolutions.jts.io.ttom.TTomReader: com.vividsolutions.jts.geom.GeometryCollection read(com.tomtom.cpu.api.geometry.GeometryCollection)> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.JavaType)> ->_CWE200_
<org.apache.commons.io.input.ReaderInputStream: int read()> ->_CWE200_
<org.jboss.resteasy.plugins.providers.FileProvider: long getSize(java.io.File,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.apache.commons.vfs2.provider.local.LocalFileNameParser: org.apache.commons.vfs2.FileName parseUri(org.apache.commons.vfs2.provider.VfsComponentContext,org.apache.commons.vfs2.FileName,java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.MovableBridgeSignImpl: java.lang.Integer getDistanceToTrafficCondition()> ->_CWE200_
<org.geotools.referencing.operation.projection.EquidistantConic: org.opengis.parameter.ParameterDescriptorGroup getParameterDescriptors()> ->_CWE200_
<com.vividsolutions.jts.linearref.LinearLocation: double getSegmentLength(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.apache.commons.httpclient.UsernamePasswordCredentials: java.lang.String getPassword()> ->_CWE200_
<javassist.compiler.Lex: int readStringL(javassist.compiler.Token)> ->_CWE200_
<org.zkoss.io.RepeatableFileReader: int read(char[],int,int)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.EdgeIntersectionList: void print(java.io.PrintStream)> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.validate.OverlayResultValidator: void reportResult(int,int[],boolean)> ->_CWE200_
<org.apache.xerces.impl.dv.xs.IDREFDV: short getAllowedFacets()> ->_CWE200_
<com.vividsolutions.jts.algorithm.distance.PointPairDistance: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.AbstractIdentifiable: java.lang.String getNameSpace()> ->_CWE200_
<com.vividsolutions.jts.simplify.TaggedLineString: com.vividsolutions.jts.simplify.TaggedLineSegment getSegment(int)> ->_CWE200_
<org.geotools.referencing.operation.MathTransformProvider: org.opengis.parameter.ParameterValue getParameter(org.opengis.parameter.ParameterDescriptor,org.opengis.parameter.ParameterValueGroup)> ->_CWE200_
<org.springframework.validation.BindException: java.util.List getFieldErrors(java.lang.String)> ->_CWE200_
<org.apache.commons.io.input.NullInputStream: int read(byte[])> ->_CWE200_
<openlr.location.InvalidLocation: int getPositiveOffset()> ->_CWE200_
<org.reflections.adapters.JavassistAdapter: java.util.List getParameterAnnotationNames(java.lang.Object,int)> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.OverlayOp: com.vividsolutions.jts.geomgraph.PlanarGraph getGraph()> ->_CWE200_
<org.zaproxy.zap.view.SessionExcludeFromSpiderPanel: org.zaproxy.zap.view.SingleColumnTableModel getModel()> ->_CWE200_
<org.codehaus.jackson.jaxrs.JacksonJsonProvider: java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)> ->_CWE200_
<com.vividsolutions.jts.geom.MultiPoint: com.vividsolutions.jts.geom.Geometry getBoundary()> ->_CWE200_
<openlr.binary.decoder.GridDecoder: openlr.rawLocRef.RawLocationReference decodeData(java.lang.String,openlr.binary.bitstream.impl.ByteArrayBitstreamInput,int,int,openlr.binary.data.RawBinaryData)> ->_CWE200_
<com.sittinglittleduck.DirBuster.Manager: void setUpManager(java.lang.String,java.lang.String,java.lang.String,int,com.sittinglittleduck.DirBuster.gui.StartGUI,int,java.lang.String,java.lang.String)> ->_CWE200_
<com.vividsolutions.jtsexample.operation.distance.ClosestPointExample: void findClosestPoint(java.lang.String,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: com.vividsolutions.jts.geom.MultiPoint readMultiPointText()> ->_CWE200_
<com.vividsolutions.jts.noding.MCIndexSegmentSetMutualIntersector: com.vividsolutions.jts.index.SpatialIndex getIndex()> ->_CWE200_
<org.zkoss.idom.util.IDOMs: java.lang.String getRequiredElementValue(org.zkoss.idom.Element,java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.PositionalAccuracy getPositionalAccuracy()> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.tag.SvnTagCommand: org.apache.maven.scm.ScmResult executeTagCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.lang.String,org.apache.maven.scm.ScmTagParameters)> ->_CWE200_
<openlr.rawLocRef.RawGridLocRef: int getNumberOfColumns()> ->_CWE200_
<org.apache.thrift.protocol.TJSONProtocol: java.lang.String readString()> ->_CWE200_
<org.apache.maven.scm.manager.NoSuchScmProviderException: java.lang.String getProviderName()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: javax.ws.rs.ext.ContextResolver getContextResolver(java.lang.Class,javax.ws.rs.core.MediaType)> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: float getFloatValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)> ->_CWE200_
<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Type getParameterType(int)> ->_CWE200_
<org.parosproxy.paros.network.GenericMethod: org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity()> ->_CWE200_
<javassist.bytecode.Descriptor: javassist.CtClass[] getParameterTypes(java.lang.String,javassist.ClassPool)> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileSystem: org.apache.commons.httpclient.HttpClient getClient()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.io.Reader)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.RandomAccessContent getRandomAccessContent(org.apache.commons.vfs2.util.RandomAccessMode)> ->_CWE200_
<com.vividsolutions.jts.triangulate.DelaunayTriangulationBuilder: com.vividsolutions.jts.geom.Geometry getEdges(com.vividsolutions.jts.geom.GeometryFactory)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getServiceAlongRoadElement()> ->_CWE200_
<com.vividsolutions.jts.triangulate.ConformingDelaunayTriangulationBuilder: com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision getSubdivision()> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.reflection.MethodMap: java.lang.reflect.Method getMostSpecific(java.util.List,java.lang.Class[])> ->_CWE200_
<com.google.common.io.ByteStreams: java.lang.Object readBytes(com.google.common.io.InputSupplier,com.google.common.io.ByteProcessor)> ->_CWE200_
<org.zkoss.idom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: java.lang.String getTextContent()> ->_CWE200_
<openlr.decoder.data.CandidateLinesResultSet: int getNumberOfCandidateLines(openlr.LocationReferencePoint)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getCommonNameSet()> ->_CWE200_
<org.geotools.referencing.operation.projection.EquidistantCylindrical: org.opengis.parameter.ParameterValueGroup getParameterValues()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarBuffer: byte[] readRecord()> ->_CWE200_
<com.vividsolutions.jts.geom.PrecisionModel: com.vividsolutions.jts.geom.PrecisionModel$Type getType()> ->_CWE200_
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.reflect.Method getFinder(java.lang.Class)> ->_CWE200_
<com.vividsolutions.jts.operation.valid.TopologyValidationError: java.lang.String getMessage()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.GeometryGraph: java.util.Collection getBoundaryNodes()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.DictionaryIdentifiableMetaPropertyImpl: java.lang.Object getValue(java.lang.Class)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.reflection.ClassMap: int getAccessibleMethods(java.lang.Class,hidden.org.codehaus.plexus.interpolation.reflection.ClassMap$MethodInfo[],int)> ->_CWE200_
<org.zkoss.idom.Element: java.lang.String getText(boolean)> ->_CWE200_
<com.vividsolutions.jts.precision.CommonBitsRemover: com.vividsolutions.jts.geom.Coordinate getCommonCoordinate()> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.XmlDictionaryModelStore: java.util.Collection readMetaPropertyDescriptors(java.lang.String,com.teleatlas.global.common.ddct.DictionaryModelDescriptor)> ->_CWE200_
<org.geotools.referencing.factory.IdentifiedObjectSet: java.lang.Object writeReplace()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpRandomAccessContent: java.io.DataInputStream getDataInputStream()> ->_CWE200_
<org.zkoss.idom.Document: boolean getXmlStandalone()> ->_CWE200_
<com.vividsolutions.jts.geom.DefaultCoordinateSequence: com.vividsolutions.jts.geom.Coordinate getCoordinate(int)> ->_CWE200_
<com.vividsolutions.jts.operation.distance.ConnectedElementLocationFilter: java.util.List getLocations(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getURL()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoScmResult: java.util.List getInfoItems()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.lang.Integer getLayerId()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)> ->_CWE200_
<org.zkoss.util.IdentityHashSet: void readObject(java.io.ObjectInputStream)> ->_CWE200_
<org.codehaus.jackson.io.MergedStream: int read(byte[],int,int)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: java.util.Collection getServiceInAdministrativePlace()> ->_CWE200_
<openlr.location.utils.worker.CircleRW: openlr.location.Location readLocationString(java.lang.String,java.lang.String[],openlr.map.MapDatabase)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.feature.mapimpl.MovableBridgeSignImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.association.TrafficSignAlongRoadElement getTrafficSignAlongRoadElement()> ->_CWE200_
<com.vividsolutions.jts.geom.util.AffineTransformation: com.vividsolutions.jts.geom.util.AffineTransformation setToShear(double,double)> ->_CWE200_
<org.zkoss.idom.input.SAXBuilder: org.zkoss.idom.Document build(java.io.File)> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.XmlDictionaryModelStoreHelper: com.teleatlas.global.common.ddct.impl.MappingMetaPropertyRefContainer readMappingMetaPropertyRefs(java.lang.String,com.teleatlas.global.common.ddct.DictionaryModelDescriptor,com.teleatlas.global.common.ddct.DictionaryModelDescriptor)> ->_CWE200_
<org.jboss.resteasy.plugins.providers.StringTextStar: long getSize(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)> ->_CWE200_
<org.codehaus.plexus.util.LineOrientedInterpolatingReader: java.lang.String readLine()> ->_CWE200_
<org.geotools.data.store.ContentFeatureSource: org.geotools.data.FeatureReader getReader(org.geotools.data.Query)> ->_CWE200_
<org.zaproxy.zap.extension.invoke.DialogAddApp: org.zaproxy.zap.utils.ZapTextField getParametersTextField()> ->_CWE200_
<org.springframework.validation.AbstractErrors: int getErrorCount()> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: double getStartZ()> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: double getStartY()> ->_CWE200_
<com.vividsolutions.jts.triangulate.Segment: double getStartX()> ->_CWE200_
<com.google.common.io.CharSource: java.lang.String readFirstLine()> ->_CWE200_
<org.apache.commons.httpclient.HeaderElement: org.apache.commons.httpclient.NameValuePair getParameterByName(java.lang.String)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getBrandName()> ->_CWE200_
<org.apache.avro.reflect.ReflectDatumReader: java.lang.Object readObjectArray(java.lang.Object[],org.apache.avro.Schema,long,org.apache.avro.io.ResolvingDecoder)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.ResidentialAccommodationImpl: com.tomtom.cpu.api.semantic.ttom.ttom_poi.domain.GeoCodingAccuracyLevel getGeoCodingAccuracyLevel()> ->_CWE200_
<com.vividsolutions.jts.JTSVersion: int getMinor()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.MonotoneChainIndexer: int[] getChainStartIndices(com.vividsolutions.jts.geom.Coordinate[])> ->_CWE200_
<com.vividsolutions.jts.geom.util.LinearComponentExtracter: java.util.Collection getLines(java.util.Collection,java.util.Collection)> ->_CWE200_
<org.zkoss.idom.impl.AbstractItem: org.w3c.dom.Node getFirstChild()> ->_CWE200_
<org.apache.http.impl.io.ContentLengthInputStream: int read()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.index.SweepLineSegment: double getMaxX()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsClientWrapper: java.lang.String getReplyString()> ->_CWE200_
<org.geotools.metadata.iso.spatial.GridSpatialRepresentationImpl: org.opengis.metadata.spatial.CellGeometry getCellGeometry()> ->_CWE200_
<org.geotools.referencing.NamedIdentifier: org.opengis.util.InternationalString getRemarks()> ->_CWE200_
<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class[] getParameterClasses()> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileObject: org.apache.jackrabbit.webdav.property.DavProperty getProperty(org.apache.commons.vfs2.provider.URLFileName,org.apache.jackrabbit.webdav.property.DavPropertyName)> ->_CWE200_
<org.apache.avro.io.JsonDecoder: org.apache.avro.util.Utf8 readString(org.apache.avro.util.Utf8)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.changelog.SvnChangeLogCommand: org.apache.maven.scm.command.changelog.ChangeLogScmResult executeChangeLogCommand(org.apache.maven.scm.provider.ScmProviderRepository,org.apache.maven.scm.ScmFileSet,java.util.Date,java.util.Date,org.apache.maven.scm.ScmBranch,java.lang.String)> ->_CWE200_
<org.apache.avro.io.JsonDecoder: int readInt()> ->_CWE200_
<org.dom4j.io.SAXValidator: void configureReader()> ->_CWE200_
<org.zaproxy.zap.spider.Spider: org.zaproxy.zap.spider.SpiderController getController()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.ManeuverValidityForCalculatedProhibitedManeuverImpl: java.util.Collection getVehicleType()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.mapimpl.LaneDividerTypeImpl: com.tomtom.cpu.api.semantic.ttom_core.domain.LaneDividerType$RANGE getItem()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdgeStar: java.util.List getResultAreaEdges()> ->_CWE200_
<org.apache.maven.scm.provider.svn.command.info.SvnInfoItem: java.lang.String getSchedule()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],int,int,java.lang.Class)> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.validate.BufferCurveMaximumDistanceFinder: com.vividsolutions.jts.operation.buffer.validate.PointPairDistance getDistancePoints()> ->_CWE200_
<com.vividsolutions.jts.algorithm.distance.DiscreteHausdorffDistance: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<com.tomtom.cpu.coredb.commons.utils.MutexProvider: java.util.UUID getMutex(java.util.UUID)> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: java.lang.Object setAttribute(java.lang.String,java.lang.Object,boolean)> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractRandomAccessStreamContent: float readFloat()> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetListener: java.lang.String getRawScript()> ->_CWE200_
<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.SerializationConfig getConfig()> ->_CWE200_
<com.mchange.v2.csv.FastCsvUtils: java.lang.String csvReadLine(java.io.BufferedReader)> ->_CWE200_
<org.geotools.referencing.operation.transform.IdentityTransform: int getTargetDimensions()> ->_CWE200_
<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Enumeration getResources(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.algorithm.MinimumBoundingCircle: com.vividsolutions.jts.geom.Geometry getCircle()> ->_CWE200_
<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class)> ->_CWE200_
<org.apache.commons.vfs2.provider.LayeredFileName: org.apache.commons.vfs2.FileName getOuterName()> ->_CWE200_
<com.vividsolutions.jts.index.chain.MonotoneChainBuilder: java.util.List getChains(com.vividsolutions.jts.geom.Coordinate[],java.lang.Object)> ->_CWE200_
<com.vividsolutions.jts.io.ByteOrderValues: long getLong(byte[],int)> ->_CWE200_
<org.joda.time.field.DividedDateTimeField: int getMinimumValue()> ->_CWE200_
<org.apache.http.auth.NTUserPrincipal: java.lang.String getDomain()> ->_CWE200_
<org.tukaani.xz.SingleXZInputStream: int read(byte[],int,int)> ->_CWE200_
<org.apache.maven.scm.provider.svn.svnexe.command.SvnCommandLineUtils: org.codehaus.plexus.util.cli.Commandline getBaseSvnCommandLine(java.io.File,org.apache.maven.scm.provider.svn.repository.SvnScmProviderRepository)> ->_CWE200_
<edu.berkeley.nlp.lm.io.LmReaders: edu.berkeley.nlp.lm.ArrayEncodedProbBackoffLm readKneserNeyLmFromTextFile(java.util.List,edu.berkeley.nlp.lm.WordIndexer,int,boolean,edu.berkeley.nlp.lm.ConfigOptions,java.io.File)> ->_CWE200_
<com.mchange.v2.c3p0.management.PooledDataSourceManager: int getThreadPoolSize()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getExternalCodingScheme()> ->_CWE200_
<org.zkoss.zk.ui.VirtualIdSpace: org.zkoss.zk.ui.Component getFellowIfAny(java.lang.String,boolean)> ->_CWE200_
<com.teleatlas.global.common.stubs.ddct.StubIdentifiable: java.util.Collection getMetaPropertyValues(java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.operation.relate.EdgeEndBundle: void print(java.io.PrintStream)> ->_CWE200_
<org.zkoss.bind.converter.sys.GridModelConverter: org.zkoss.zul.ListModel getComponentModel(org.zkoss.zk.ui.Component)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder: org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder getInstance()> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_poi.feature.mapimpl.HolidayRentalImpl: java.util.Collection getStandardPOIInNamedArea()> ->_CWE200_
<org.zkoss.zk.ui.impl.GlobalDesktopCacheProvider: org.zkoss.zk.ui.sys.DesktopCache getDesktopCache(org.zkoss.zk.ui.Session)> ->_CWE200_
<org.zkoss.idom.DocType: org.w3c.dom.NamedNodeMap getEntities()> ->_CWE200_
<com.vividsolutions.jts.algorithm.CentroidArea: com.vividsolutions.jts.geom.Coordinate getCentroid()> ->_CWE200_
<org.parosproxy.paros.network.HttpInputStream: org.zaproxy.zap.network.HttpResponseBody readResponseBody(org.parosproxy.paros.network.HttpHeader)> ->_CWE200_
<com.vividsolutions.jts.io.WKTReader: java.lang.String getNextWord()> ->_CWE200_
<javassist.tools.reflect.ClassMetaobject: java.lang.Class[] getParameterTypes(int)> ->_CWE200_
<org.geotools.metadata.iso.identification.KeywordsImpl: java.util.Collection getKeywords()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftps.FtpsFileSystemConfigBuilder: java.lang.Boolean getUserDirIsRoot(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.apache.xerces.impl.dtd.XMLDTDValidator: java.lang.String[] getRecognizedFeatures()> ->_CWE200_
<com.vividsolutions.jts.operation.valid.ConsistentAreaTester: com.vividsolutions.jts.geom.Coordinate getInvalidPoint()> ->_CWE200_
<com.vividsolutions.jts.geom.util.LinearComponentExtracter: java.util.Collection getLines(com.vividsolutions.jts.geom.Geometry,java.util.Collection,boolean)> ->_CWE200_
<org.apache.maven.scm.provider.svn.SvnConfigFileReader: java.lang.String getProperty(java.lang.String,java.lang.String)> ->_CWE200_
<org.springframework.validation.AbstractErrors: java.util.List getAllErrors()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: org.jboss.resteasy.spi.ResteasyProviderFactory getInstance()> ->_CWE200_
<org.apache.commons.vfs2.provider.DelegateFileObject: boolean doIsReadable()> ->_CWE200_
<org.zkoss.zul.Grid: int preloadSize()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileProvider: org.apache.commons.vfs2.FileSystemConfigBuilder getConfigBuilder()> ->_CWE200_
<com.vividsolutions.jts.geom.util.ComponentCoordinateExtracter: java.util.List getCoordinates(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<edu.berkeley.nlp.lm.io.ArpaLmReader: java.lang.String readLine()> ->_CWE200_
<org.zkoss.zk.ui.metainfo.WidgetListener: java.lang.String getScript(org.zkoss.zk.ui.Component)> ->_CWE200_
<org.zaproxy.zap.extension.spider.OptionsSpiderPanel: javax.swing.JSlider getSliderMaxDepth()> ->_CWE200_
<org.apache.commons.vfs2.provider.FileContentThreadData: int getInstrsSize()> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FtpFileObject: org.apache.commons.net.ftp.FTPFile getChildFile(java.lang.String,boolean)> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.io.InputStream)> ->_CWE200_
<org.apache.commons.vfs2.provider.ftp.FTPClientWrapper: org.apache.commons.vfs2.FileSystemOptions getFileSystemOptions()> ->_CWE200_
<com.vividsolutions.jts.operation.distance.ConnectedElementPointFilter: java.util.List getCoordinates(com.vividsolutions.jts.geom.Geometry)> ->_CWE200_
<org.apache.commons.vfs2.provider.webdav.WebdavFileNameParser: org.apache.commons.vfs2.provider.FileNameParser getInstance()> ->_CWE200_
<org.apache.avro.io.ValidatingDecoder: int readIndex()> ->_CWE200_
<com.vividsolutions.jts.operation.valid.QuadtreeNestedRingTester: com.vividsolutions.jts.geom.Coordinate getNestedPoint()> ->_CWE200_
<openlr.location.GridLocation: int getNumberOfRows()> ->_CWE200_
<com.vividsolutions.jts.index.strtree.ItemBoundable: java.lang.Object getBounds()> ->_CWE200_
<com.vividsolutions.jts.operation.buffer.OffsetCurveSetBuilder: java.util.List getCurves()> ->_CWE200_
<org.zkoss.zkplus.databind.BindingValidateEvent: java.util.List getBindings()> ->_CWE200_
<com.vividsolutions.jts.index.strtree.AbstractSTRtree: int getNodeCapacity()> ->_CWE200_
<com.vividsolutions.jts.operation.overlay.ConsistentPolygonRingChecker: java.util.List getPotentialResultAreaEdges(com.vividsolutions.jts.geomgraph.DirectedEdgeStar,int)> ->_CWE200_
<org.apache.avro.generic.GenericDatumReader: java.lang.Object readFixed(java.lang.Object,org.apache.avro.Schema,org.apache.avro.io.Decoder)> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarUtils: int getCheckSumOctalBytes(long,byte[],int,int)> ->_CWE200_
<com.vividsolutions.jtsexample.linearref.LinearRefExample: void runExtractedLine(java.lang.String,double,double)> ->_CWE200_
<com.vividsolutions.jts.algorithm.LineIntersector: int getIntersectionNum()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Label: int getLocation(int,int)> ->_CWE200_
<org.apache.commons.httpclient.ContentLengthInputStream: int read()> ->_CWE200_
<org.geotools.data.AbstractFileDataStore: org.geotools.data.FeatureReader getFeatureReader()> ->_CWE200_
<org.apache.maven.scm.providers.svn.settings.io.xpp3.SvnXpp3Reader: org.apache.maven.scm.providers.svn.settings.Settings read(java.io.InputStream)> ->_CWE200_
<com.tomtom.cpu.api.semantic.ttom.ttom_core.attribute.mapimpl.HasSideOfLineImpl: com.tomtom.cpu.api.semantic.ttom.ttom_core.domain.SideOfLine getSideOfLine()> ->_CWE200_
<com.vividsolutions.jts.geomgraph.PlanarGraph: void printEdges(java.io.PrintStream)> ->_CWE200_
<org.apache.xerces.impl.xs.identity.IdentityConstraint: java.lang.String getIdentityConstraintName()> ->_CWE200_
<org.apache.commons.vfs2.provider.bzip2.Bzip2FileProvider: java.util.Collection getCapabilities()> ->_CWE200_
<com.vividsolutions.jts.operation.distance.GeometryLocation: int getSegmentIndex()> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.TypeReference)> ->_CWE200_
<com.teleatlas.global.common.ddct.impl.XmlDictionaryModelStoreHelper: com.teleatlas.global.common.ddct.impl.MetaPropertyDescriptorContainer readExternalMetaPropDescriptorContainer(java.lang.String,com.teleatlas.global.common.ddct.DictionaryModelDescriptor,javax.xml.bind.Unmarshaller$Listener)> ->_CWE200_
<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)> ->_CWE200_
<org.zaproxy.zap.utils.HttpUserAgent: java.lang.String getBrowser(java.lang.String)> ->_CWE200_
<hidden.org.codehaus.plexus.interpolation.InterpolatorFilterReader: int read(char[],int,int)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.Edge: com.vividsolutions.jts.geom.Coordinate[] getCoordinates()> ->_CWE200_
<org.jboss.resteasy.spi.ResteasyProviderFactory: java.lang.Object getContextData(java.lang.Class)> ->_CWE200_
<com.vividsolutions.jts.triangulate.quadedge.QuadEdgeSubdivision: double getTolerance()> ->_CWE200_
<com.vividsolutions.jts.noding.SegmentNode: boolean isEndPoint(int)> ->_CWE200_
<org.springframework.validation.AbstractErrors: int getFieldErrorCount(java.lang.String)> ->_CWE200_
<org.geotools.metadata.iso.identification.UsageImpl: java.util.Date getUsageDate()> ->_CWE200_
<org.apache.commons.vfs2.provider.http.HttpFileSystemConfigBuilder: org.apache.commons.vfs2.UserAuthenticator getProxyAuthenticator(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<org.geotools.geometry.jts.WKTReader2: com.vividsolutions.jts.geom.Polygon readPolygonText()> ->_CWE200_
<org.dom4j.io.XPPReader: org.dom4j.Document read(java.lang.String)> ->_CWE200_
<org.jboss.resteasy.mock.MockHttpRequest: org.jboss.resteasy.mock.MockHttpRequest create(java.lang.String,java.net.URI,java.net.URI)> ->_CWE200_
<org.apache.commons.vfs2.provider.GenericFileName: java.lang.String getPassword()> ->_CWE200_
<org.zkoss.idom.Element: java.util.List getAttributeItems()> ->_CWE200_
<com.thoughtworks.paranamer.JavadocParanamer: java.lang.String[] getParameterNames(java.lang.Class,java.lang.String,java.lang.Class[])> ->_CWE200_
<org.apache.commons.vfs2.provider.AbstractFileObject: org.apache.commons.vfs2.operations.FileOperations getFileOperations()> ->_CWE200_
<org.zkoss.zul.impl.GridDataLoader: java.util.Set getAvailableAtClient()> ->_CWE200_
<org.geotools.referencing.operation.projection.Mollweide: org.opengis.parameter.ParameterDescriptorGroup getParameterDescriptors()> ->_CWE200_
<org.geotools.referencing.datum.DefaultPrimeMeridian: javax.measure.unit.Unit getAngularUnit()> ->_CWE200_
<org.apache.commons.vfs2.provider.tar.TarEntry: int getCheckSum()> ->_CWE200_
<org.zkoss.idom.impl.AbstractGroup: java.util.List getElements(java.lang.String)> ->_CWE200_
<org.dom4j.io.STAXEventReader: org.dom4j.Document readDocument(java.io.InputStream,java.lang.String)> ->_CWE200_
<com.vividsolutions.jts.geomgraph.DirectedEdge: com.vividsolutions.jts.geomgraph.DirectedEdge getNextMin()> ->_CWE200_
<org.apache.commons.vfs2.provider.sftp.SftpFileSystemConfigBuilder: java.lang.Integer getTimeout(org.apache.commons.vfs2.FileSystemOptions)> ->_CWE200_
<com.tomtom.openlr.coremap.maploader.URLMapLoader: java.lang.String getParameterString(java.util.Map,java.lang.String)> ->_CWE200_
